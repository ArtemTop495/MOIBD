,title,description,date,tags,rating,prep_text,tokenize_text,text_stem,text_lemm,cluster
0,"Cocoapods, Carthage, SPM: как выбрать менеджер зависимостей в iOS","117.94 Рейтинг red_mad_robot №1 в разработке цифровых решений для бизнеса  6 часов назад   Cocoapods, Carthage, SPM: как выбрать менеджер зависимостей в iOS 179 Блог компании red_mad_robot ,  Разработка под iOS* FAQ  Старший iOS-разработчик Аня Кочешкова рассказывает, чем отличаются три менеджера зависимостей, в каких случаях и для каких задач подойдёт тот или иной. Материал будет полезен джун-специалистам, которые только начали погружаться в разработку: специально для них подробно объясняем, что такое семантическое версионирование, как устроены модули кода и в чём разница между динамическими и статическими библиотеками. Что такое менеджер зависимостей и зачем он нужен В современной разработке зависимость — это написанный кем-то другим код, который используется в вашей программе. Добавление зависимости позволяет воспользоваться уже сделанной кем-то хорошей работой и избежать «изобретения велосипеда», а также лишних действий: проектирования, написания, тестирования, отладки и поддержки определённой логики. Такие «куски логики» называют пакетами, библиотеками или модулями. Чем сложнее проект, тем больше сторонних библиотек (правда, некоторые приложения могут вообще отказываться от их использования), а у этих библиотек много разных версий. Они могут ссылаться друг на друга и накладывать ограничения на эти версии. Эту работу можно проиллюстрировать таким бытовым примером. Чтобы телефон показал погоду на улице, не нужно встраивать в него термометр и вытаскивать за окно. В нём уже зашита специальная технология, которая позволяет ему связаться с «библиотекой», где хранятся данные гидрометцентра, которые, как и погода, всё время обновляются. Иногда с новой версией добавляется какая-нибудь новая функциональность. В примере с термометром библиотека с новой версией умеет ещё и выдавать карту дождей, а до этого могла показывать только температуру. Менеджеры зависимостей позволяют избежать долгого и муторного решения такого набора «уравнений» — то есть берут на себя часть работы, которую без них разработчик делал бы руками. Это система, которая позволяет управлять зависимостями в вашем проекте. А ещё у сторонних библиотек часто могут выходить новые версии с исправленными ошибками, и благодаря менеджеру зависимостей вам не нужно следить за их выходом — он всё обновит за вас. Предположим, вы решили подключить в ваш проект Firebase Crashlytics и GoogleUtilities. Обе эти библиотеки ссылаются на библиотеку PromisesObjC. Firebase хочет, чтобы она была любой версии, начинающейся с 2.1, а GoogleUtilities — чтобы она была от 1.2 до 3.0. Такое уравнение, конечно, можно решить вручную, но что делать, когда этих уравнений несколько десятков, а уровней зависимостей — два, три или больше? Для таких задач в распоряжении iOS-разработчика существуют три основных менеджера зависимостей: 1. Cocoapods. Пожалуй, самый распространённый сегодня, он требует лишь указывать список зависимостей в определённом формате в текстовом файле. 2. Carthage. Менее удобен в этом плане: вы также указываете список зависимостей в текстовом файле, но помимо этого нужно ещё немного «самостоятельной работы», о которой расскажем ниже. 3. SPM, или Swift Package Manager. Официальный менеджер зависимостей от Apple. Появился недавно, и многие команды переходят на него с Cocoapods. Позволяет управлять зависимостями как через графический, так и через текстовый интерфейс прямо из Xcode. Случается, что нужная библиотека не поддерживает необходимый менеджер зависимостей, потому что разработчики каждой библиотеки сами выбирают, какой менеджер поддержать. Поддержка каждого менеджера — это работа, которая занимает определённое время, поэтому часто выбирают работать только с самым популярным менеджером, Сocoapods. А если в проекте, например, SPM, а библиотека есть только в Cocoapods или просто нужна в одной конкретной версии, приходится добавлять вручную как framework / xcframework, о чём мы также поговорим позже. Но прежде чем начать говорить об управлении зависимостями, нужно разобрать несколько связанных с ним терминов. Фантастическое Semantic Versioning, и где оно обитает Semantic Versioning (SemVer) — это стандарт, который говорит о том, как работать с версиями пакетов/библиотек/приложений, — как их указывать и накладывать на них ограничения. Зачем накладывать ограничения? Возьмём такой пример. Разработчик создаёт приложение и использует некоторый набор библиотек для упрощения работы — например, библиотек для работы с сетью Alamofire. Допустим, начиная с определённой версии в библиотеке появляется поддержка какой-то новой функциональности, например Modern Concurrency. Эта функциональность доступна только начиная с определенной версии библиотеки. В таком случае от разработчика потребуется всего лишь поднять версию Alamofire в манифесте, где он описывает используемые библиотеки. Если начиная с какой-то версии библиотеки исправляется некий важный баг, но не сильно меняется функциональность самой библиотеки, то обновление до свежей исправленной версии произойдёт без лишнего вмешательства разработчика, в следующий раз при обновлении текущих библиотек проекта. Разберём, что такое SemVer, чтобы понимать формат версий, с которыми придётся работать, а также узнаем, как можно указать версию зависимости и наложить на неё ограничения. Этот набор правил — глобальный стандарт, который используется повсеместно, начиная от пакетов Node.js и заканчивая версиями приложений в App Store. По этому стандарту номер версии — это строка, которая состоит из чисел, разделённых точкой, и имеет формат A.B.C, где A — мажорная версия, B — минорная версия и C — патч-версия. Версии сравниваются слева направо, например: 1.0.0 < 2.0.0 < 2.1.0 < 2.1.1. Но зачастую мажорная версия увеличивается или при выпуске каких- либо масштабных фич, или при редизайне приложения, или просто при желании обозначить принципиальное обновление приложения/библиотеки. Синтаксис SemVer в Cocoapods, Carthage и SPM Cocoapods В Cocoapods можно указать одну из стратегий выбора версии: 1. Если необходима конкретная версия, просто укажите её без дополнительных символов, как есть: '5.0.0'. 2. Если необходима точная версия, но при этом вы также хотите обновляться, если придут исправления багов в патч-версии, используйте операнд ~>: '~> 5.0.0'. 3. Можно указывать неравенства: '> 5.0.0', '≥ 5.0.0' или '< 5.0.0', '≤ 5.0.0'. В этом случае Cocoapods обновит библиотеку до 5.0.1, 5.0.2 и т. д., но не возьмёт обновление 5.1.0, так как в нём уже повышена минорная, а не патч-версия. Если вы также хотите завязаться на минорную версию, достаточно просто указать '~> 5.0'. Carthage В Carthage используется тот же формат, что и в Cocoapods, с тем только исключением, что точная версия указывается через равенство: == 5.0.0. SPM SPM позволяет указать стратегию выбора версии прямо в интерфейсе, доступны следующие: Аналогичный синтаксис и у Package.swift файла. Модули — что к чему: библиотеки, фреймворки, XCFramework и Swift-пакеты Организация кода в iOS построена на понятии модулей. Модуль — это отдельный кусок кода или функциональности, который можно распространять разными способами и переиспользовать. Существует четыре вида модулей. Разберёмся, в чём разница: 1. Библиотека — это исполняемый код, скомпилированный под конкретную архитектуру. 2. Фреймворк — папка, содержащая в себе библиотеку и вспомогательные файлы. 3. XCFramework — набор фреймворков под разные архитектуры. 4. Swift-пакет — фреймворк, который используется для работы со Swift Package Manager. Если говорить на языке бытовых примеров, то код — это комната, а модули — разные предметы в ней. Торшер, например, позволяет включать и выключать свет, но как он работает внутри, мы не знаем. И этим торшером могут пользоваться в разных квартирах и комнатах разные люди. Библиотеки Библиотека — это исполняемый код, скомпилированный под конкретную архитектуру, например arm64. Архитектуры могут различаться для разных типов устройств и симуляторов: • iOS-устройства — архитектуры armv7, armv7s, arm64, • iOS-симулятор — архитектуры i386 и x86_64. Исходный код — текст программы, который написал разработчик. Исполняемый код — код, который получился в результате компиляции. Компилятор переводит исходный код в машинный, который сможет исполнить операционная система, — на выходе получается исполняемый код. Библиотеки бывают статическими и динамическими (об этом позже), и представляют собой один бинарный файл. Если представить, что библиотека — это настоящая библиотека со стеллажами, в которых хранятся книги, то эти книги — справочники о том, как что-то сделать (методы для выполнения разных задач). По сути, это скомпилированный набор объектных файлов, которые программа может использовать для выполнения любой задачи. То есть все файлы, которые библиотека собирается использовать, были скомпилированы до этапа компоновки. Фреймворки Фреймворк (.framework) представляет собой папку с файлами, в которой лежит сама библиотека, хедеры и ресурсы. Эта папка должна иметь определённую структуру, но нет нужды запоминать её, так как фреймворки, как правило, собираются самим Xcode. Поддержка фреймворков добавилась в iOS 8. Фреймворки служат той же цели, что и библиотеки, но могут включать в себя различные ресурсы — картинки, документацию, строковые файлы. Они также могут быть статическими или динамическими. Что использовать: фреймворк или библиотеку В чём же разница между фреймворком и библиотекой? И когда их использовать? Принципиальное различие — в архитектуре. XCFrameworks Для начала стоит рассказать, что такое fat-фреймворки. Это такие фреймворки, которые содержат библиотеки для разных архитектур и платформ, соединённые в одну. С появлением Xcode 11 на замену им пришли XCFrameworks, которые ввели структуру, позволяющую разнести библиотеки для разных платформ и архитектур по папкам. XCFramework — это, по сути, такой усовершенствованный fat- фреймворк. Он также содержит различные библиотеки для разных архитектур и платформ, но теперь нет необходимости трудиться над тем, чтобы объединить их в одну. В одном XCFramework может лежать несколько разных фреймворков — для iOS, macOS, tvOS, watchOS, а также для разных архитектур — armv7, x86_64 и т. д., каждый в своей папке. В каком-то смысле фреймворк — тоже разновидность библиотеки, а XCFramework — разновидность фреймворка, но всё же эти понятия принято разделять. Создатель зависимости сам выбирает, в каком виде её распространять. Нам важно понимать различие между этими видами, выбор можно сделать, только создавая свою библиотеку. Swift Package Swift-пакет используется для распространения только через SPM. Содержит исходный код, а также Package.swift файл, который описывает его конфигурацию. Доступен начиная со Swift 3. Static vs Dynamic Прежде чем начать, наконец, говорить об управлении зависимостями, важно разобраться, в чём различие между статическими и динамическими библиотеками и фреймворками. Первое, что здесь важно понимать: системные iOS- и macOS- библиотеки — динамические. Приложения могут хранить ссылку на библиотеку. Например, системная библиотека Foundation — динамическая. Она лежит на айфоне в единственном экземпляре, а все приложения лишь ссылаются на неё. Фреймворки, как и библиотеки, бывают динамические и статические и представляют собой обёртку библиотеки. Так, динамические библиотеки вне фреймворков не поддерживаются на iOS, watchOS и tvOS, и здесь важно отметить, что во всех дальнейших сравнениях, говоря «динамическая библиотека», мы будем иметь в виду её использование в рамках динамического фреймворка. Фреймворки в Cocoapods и Carthage Зависимости, распространяемые через Cocoapods, называются кокоаподами, или подами. До iOS 8 под представлял собой fat- статическую библиотеку. Есть специальная инструкция — по ней Cocoapods использует фреймворки вместо статичных библиотек, которые не поддерживались Swift до Xcode 9 и CocoaPods 1.5.0. Так что раньше эта директива была обязательна, сейчас — опциональна. Если нужно более быстрое время запуска, можно её убрать (см. предыдущий раздел). Carthage поддерживает только фреймворки. target 'TargetName' do   use_frameworks! end Три менеджера зависимостей: Cocoapods, Carthage, SPM Наконец, то, ради чего мы тут собрались, — менеджеры зависимостей. Посмотрим, какие они бывают, чем отличаются и как выбрать между ними. Cocoapods Это один из самых популярных сегодня менеджеров зависимостей. Позволяет указать список зависимостей в текстовом файле, а затем генерирует на основе его .xcworkspace, который будет содержать два проекта — ваш проект и проект с подами. Как правило, почти все библиотеки поддерживают Cocoapods, хотя с развитием SPM стали появляться и такие, которые поддерживают исключительно SPM (в основном это библиотеки Apple). В таком случае, если ваш менеджер зависимостей Cocoapods, единственный вариант воспользоваться библиотекой — вручную её собрать и прилинковать к проекту. Чтобы понять, поддерживает ли библиотека Cocoapods, достаточно заглянуть в readme, либо обратить внимание на наличие .podspec- файла в корне репозитория. Все библиотеки, опубликованные в Cocoapods, можно посмотреть на их официальном сайте. Cocoapods в вашем проекте Для понимания работы Cocoapods важны два термина — подфайл и спека. Подфайл описывает все зависимости приложения, а спека — библиотеку (её название и набор её зависимостей) для Cocoapods. Спеки хранятся в общем репозитории спек Cocoapods. Ещё их можно хранить в приватных репозиториях. Для описания конфигурации зависимостей используется подфайл. Этот файл написан на языке Ruby. 1. В файле опционально укажите источник спек. Источников может быть несколько, даже приватные. source 'https://github.com/CocoaPods/Specs.git' — официальный источник спек, который указан по умолчанию. source 'https://github.com/Artsy/Specs.gi — можно указать свои источники спек, в том числе приватные. 2. Укажите минимальную версию iOS: platform: ios, '9.0'. 3. Укажите таргет и набор зависимостей для него. Если таргетов несколько, укажите все, так как зависимости для них могут различаться. 4. Декларируйте зависимость. Первым идёт её официальное название (то самое, которое указано в спеке), затем версия. Используйте в названии правила из блока про SemVer. Есть и другие способы указать зависимости. Это может понадобиться в случаях, когда нужно использовать какую-то конкретную версию библиотеки. Например, из определённой ветки репозитория, где она хранится, или даже из определённого коммита. Либо указать путь локально, если есть только её файл.     target 'MyApp' do     pod 'GoogleAnalytics', '~> 3.1'     ...     end 1. Можно указать ресурс репозитория, с которого будем загружать библиотеку: pod 'CRToast', :git => 'https://github.com/akhatmullin/CRToast.git' 2. Можно указать нужную ветку в репозитории: pod 'CRToast', :git => 'https://github.com/akhatmullin/CRToast.git', :branch => 'dev' 3. Или тег: pod 'CRToast', :git => 'https://github.com/akhatmullin/CRToast.git', :tag => '0.7.0' 4. Или коммит: pod 'CRToast', :git => 'https://github.com/akhatmullin/CRToast.git', :commit => '082f8310af' 5. Можно указать на локальный под (путь должен вести на папку, где лежит .podspec): pod 'AFNetworking', :path => '~/Documents/AFNetworking' Рядом с подфайлом обычно лежит Podfile.lock. Этот файл описывает конечные версии зависимостей после их установки. Он обычно так же заливается в GitHub, как и сам Podfile, чтобы избежать ошибок и рассинхрона при установке зависимостей у разных разработчиков. Ещё он ускоряет выполнение pod install. Чтобы приступить к работе, запустите pod install. Можно выполнить pod update, если вы хотите обновить все библиотеки в проекте, иначе же будут использоваться фиксированные версии зависимостей из Podfile.lock. Как Cocoapods работает под капотом Pod install генерирует workspace — файл .xcworkspace, состоящий из двух проектов — проекта с вашим приложением и отдельного проекта, в котором хранятся зависимости (поды). Чтобы всё работало корректно, всегда открывайте workspace-файл. Если внимательнее посмотреть, что происходит, можно увидеть, что продукт этого проекта линкуется в основной проект: Также Cocoapods добавляет пару скриптов в Build Phases: Поддержка Cocoapods в вашей библиотеке Чтобы библиотека была доступна через Cocoapods, нужно сначала описать библиотеку или под при помощи спеки, собрать её и отправить спеку в приватный либо глобальный репозиторий Cocoapods. Разберёмся, как это сделать. 1. Создайте спеку и файл лицензии. Лицензию нужно добавлять для любой библиотеки, и чаще всего используется лицензия MIT — самая популярная лицензия для программ с открытым исходным кодом. Её текст можно найти в интернете. Здесь нужно описать вашу библиотеку. Файл принято форматировать так, чтобы вторая часть строки была выровнена.     Pod::Spec.new do |spec|     # Название библиотеки. Именно его будут указывать разраб     spec.name                    = 'NAME'      # Версия     spec.version                 = '1.2.1'      # Описание     spec.summary                 = 'Describe your framework.     # Здесь можно указать путь на вебсайт или просто GitHub-     spec.homepage                = 'https://xxx'      # Путь к лицензии. Да, её тоже нужно создать     spec.license                 = { type: 'MIT', file: 'LIC     # Автор библиотеки     spec.author                  = { ""Your Name"" => 'your-em     # Путь к исходным файлам (чаще всего это ваш репозитоий)     spec.source                  = { :git => 'https://github     # Минимальная поддерживаемая версия iOS и Swift     spec.ios.deployment_target   = '13.0'      spec.swift_version           = '5.0'     # Если библиотека использует локальный фреймворк, его ну     spec.vendored_frameworks     = 'Path/To/Files/NameOfVend 2. Проверьте, что всё корректно. Следующая команда валидирует спеку — проверяет, что она не имеет ошибок, а проект билдится — pod lib lint. 3. Отправьте спеку в репозиторий спек. Как правило, это делается уже на финальном этапе разработки — после того, как прошла проверка и вы готовы публиковать работу, — pod trunk push NAME.podspec. Carthage     # Указываем вайлдкард-пути к файлам, которые необходимо      spec.source_files            = 'Path/To/Files/**/*.{swif     # Путь к ресурсам     spec.resources               = 'Path/To/Files/Resources/     # Укажите здесь все ассеты, которые вам нужны, включая .     spec.resource_bundles        = {'BundleName' => ['Path/T     # Указываем зависимости     spec.dependency           ""Alamofire"", ""~> 5.0.0""      # И системные зависимости     spec.frameworks           = 'Foundation'      spec.ios.frameworks       = 'UIKit'     end Carthagе — это децентрализованный менеджер зависимостей, которые не нужно «поддерживать» разработчику. Carthage сам выкачивает библиотеку из репозитория, компилирует её и предоставляет в готовом виде. Поэтому, если хотите использовать Carthage, не нужно искать в репозитории с библиотекой определённые инструкции или слова о том, что он поддерживается, — просто попробуйте. Нет у Carthage и централизованного источника, как у Cocoapods. Этим источником, по сути, является сам GitHub. Конечно, этого не всегда бывает достаточно. Некоторые библиотеки Carthage просто не может «переварить» — что-то не собирается, а что-то отваливается. Задача разработчика — проверить, всё ли работает корректно. Наконец, Carthage может автоматически подхватить уже собранный фреймворк, если он прикреплён к соответствующему релизу на GitHub. Carthage в вашем проекте Зависимости в Carthage описываются в текстовом файле Cartfile. Он очень похож на Podfile, только гораздо проще по структуре. Мы указываем источник, имя зависимости и версию. 1. Источник зависимости. Как правило, GitHub, либо git для универсальных репозиториев Git, размещённых в другом месте. Ключевое слово git сопровождается путём к репозиторию, будь то удалённый URL-адрес, используя git://, http://, или ssh://, или локальный — путём к репозиторию git на компьютере разработчика. 2. Название. Через слеш указывается владелец и название репозитория, которые можно подсмотреть в ссылке на репозиторий. 3. Версия. Особенности указания версий мы уже рассмотрели в блоке про семантическое версионирование, но можно также указывать и ветки. Примеры: 1. Версия — github ""Alamofire/Alamofire"" == 2.0 2. Ветка — github ""username/project"" ""branch"" 3. Локальный проект — git ""file:///directory/to/project"" ""branch"" 4. Бинарник (путь указывается в json) — binary ""https://my.domain.com/release/MyFramework.json"" ~> 2.3 После описания зависимостей потребуется ещё несколько дополнительных шагов. 1. Вызовите carthage update. Carthage склонирует репозитории с указанных в Cartfile путей и затем сбилдит для каждой зависимости фреймворк. После окончания работы вы увидите несколько файлов и каталогов: 2. Полученные фреймворки затем вручную перетащите из папки Build в проект в секцию Frameworks, Libraries и Embedded Content. 3. Carthage требует добавления нового скрипта в Build Phases в качестве workaround бага Apple. Это позволяет dSYM- файлам корректно подтягиваться при архивации. 4. Перейдите в Build Phases и добавьте новый Run Script. Добавьте следующую команду: /usr/local/bin/carthage copy- frameworks. 5. Нажмите на плюс под Input Files и добавьте запись для каждой платформы: $(SRCROOT)/Carthage/Build/iOS/Alamofire.framework. Как Carthage работает под капотом Как и в случае с Cocoapods, создаётся лок-файл Cartfile.resolved, который фиксирует конечные версии зависимостей. Каталог Carthage содержит два подкаталога: 1. Build. Содержит собранный фреймворк для каждой зависимости. 2. Checkouts. Содержит клонированные исходники, которые Carthage потом компилирует. Это своего рода кэш, который ускоряет работу. Поддержка Carthage в вашей библиотеке Для поддержки Carthage достаточно сделать релиз на GitHub. Но никогда не помешает проверить, всё ли билдится корректно в вашем случае и, если есть какие-то проблемы, решить их. Для этого, выполните carthage build --no-skip-current. Carthage попытается сбилдить ваш проект и создаст в нём папку Carthage. Также стоит обратить внимание, что он видит только те схемы, которые помечены в проекте как Shared. SPM Или Swift Package Manager — официальный менеджер зависимостей от Apple. Работа с ним происходит прямо в Xcode, а .Xcodeproj файлы больше не нужны (хотя при желании есть возможность сгенерировать файл проекта из SPM-пакета). Если заглянуть в репозиторий библиотеки, то первое, что будет говорить о поддержке SPM, — это наличие Package.swift-файла. SPM в вашем проекте Добавление зависимостей в проект происходит в секции Package Dependencies. 1. Для начала выберите File > Swift Packages > Add package dependecy. 2. Найдите модуль по поиску, либо введите URL репозитория. 3. Укажите версию: Как и во всех предыдущих случаях, SPM создает Package.resolved, назначение которого то же, что и у других менеджеров зависимостей. В меню File > Swift Packages доступно несколько действий: • Reset Package Caches удаляет кэши из Derived Data. • Resolve Package Versions резолвит версии зависимостей. Создаёт Package.resolved, если его не существует, но не меняет его, если он уже есть. Может потребоваться, если Package.resolved был, например, обновлён извне. • Update to Latest Packages Versions обновляет версии пакетов, может модифицировать Package.resolved. Поддержка SPM в вашей библиотеке Если вы разрабатываете библиотеку и хотите распространять её через SPM, нужно будет создать Package.swift файл. Таким образом может быть сконфигурирован и обычный проект, что позволяет отойти от использования project-файлов. Конфигурация через SPM выглядит чище и более проста для понимания и редактирования, чем стандартные project-файлы, которые зачастую нечитаемы. Если вы пишете библиотеку и хотите распространять её через SPM, обязательно убедитесь, что потенциальные потребители библиотеки не используют Cocoapods. Одновременная поддержка Cocoapods и SPM — часто непростая задача. import PackageDescription   let package = Package(     // Название нашего пакета     name: ""Resources"",     // Платформы, которые поддерживаются нашим пакетом     platforms: [         .iOS(.v11),     ],     // То, что будут использовать сторонние приложения     products: [         .library(             name: ""Resources"",             // Динамический или статический продукт             // по дефолту значение nil - SPM сам будет поним             // преференция, скорее всего, будет отдаваться .             type: .dynamic,             targets: [""Resources""]),     ],         // Зависимости, необходимые для работы нашего пакета   // здесь они просто загружаются, добавляются они в target     dependencies: [         // Название пакета, путь к нему и источник (ветка, в         .package(             name: ""R.swift.Library"",              url: ""https://github.com/mac-cain13/R.swift.Libr             branch: ""master""),         .package(             name: ""SVGKit"",             url: ""https://github.com/SVGKit/SVGKit.git"", И как выбрать подходящий менеджер             .upToNextMajor(from: ""3.0.0"")),         .package(             name: ""PhoneNumberKit"",             url: ""https://github.com/marmelroy/PhoneNumberKi             from: ""3.3.4""),         // Пример подключения локального пакета         .package(path: ""../Core"")     ],     targets: [         // Это то, из чего мы будем складывать наш продукт         .target(             name: ""Resources"",             dependencies: [                 // Здесь мы указываем зависимости, которые м                 .product(name: ""RswiftDynamic"", package: ""R.             ],             resources: [                 // Все ресурсы, которые мы хотим использоват                 // Путь к ним относительный от Sources/имя_п                 .process(""Resources"")             ])     ] ) Универсального ответа нет — выбор менеджера зависимостей зависит исключительно от нужд и особенностей вашего проекта. SPM чаще всего не будут поддерживать старые библиотеки, в то время как Cocoapods вполне могут не поддерживать новые (хотя это и большая редкость, чем первое). Carthage в этом плане может показаться универсальнее. Хоть он более громоздкий и сложный во взаимодействии, но он единственный разделяет шаги управления зависимостями и добавления их в проект. Это даёт контроль над ситуацией и ускоряет разработку — не будет лишних пересборок или заморозки интерфейса, потому что нужно зарезолвить зависимости. Над материалом работали: • текст — Аня Кочешкова, Ника Черникова, • редактура — Виталик Балашов, • иллюстрации — Юля Ефимова. Делимся железной экспертизой от практик в нашем телеграм-канале red_mad_dev. А полезные видео складываем на одноимённом YouTube-канале. Присоединяйся! Теги:   red_mad_robot , ios , cocoapods , carthage , spm , swift package manager , зависимости , управление зависимостями Хабы:   Блог компании red_mad_robot , Разработка под iOS 1 3 1 red_mad_robot №1 в разработке цифровых решений для бизнеса 57 Карма 13 Рейтинг @ Пользователь Комментарии 1 Публикации ЛУЧШИЕ ЗА СУТКИ  ПОХОЖИЕ  ·   ·   ·   ·   ·   ·   ·   ·   ·   ·  Ваш аккаунт Войти Регистрация Разделы Публикации Новости Хабы Компании Авторы Песочница Информация Устройство сайта Для авторов Для компаний Документы Соглашение Конфиденциальность Услуги Корпоративный блог Медийная реклама Нативные проекты Образовательные программы Стартапам Мегапроекты ИНФОРМАЦИЯ Сайт .ru Дата регистрации 16 августа 2009 Дата основания 16 ноября 2008 Численность 1 001–5 000 человек Местоположение Россия Настройка языка Техническая поддержка Вернуться на старую версию © 2006–2023, Habr ",6 часов назад,"Хабы:   Блог компании red_mad_robot , Разработка под iOS ",117.94, рейтинг    № в разработке цифровых решений для бизнеса часов назад    как выбрать менеджер зависимостей в  блог компании    разработка под   старший  разработчик аня кочешкова рассказывает чем отличаются три менеджера зависимостей в каких случаях и для каких задач подойдёт тот или иной материал будет полезен джун специалистам которые только начали погружаться в разработку специально для них подробно объясняем что такое семантическое версионирование как устроены модули кода и в чём разница между динамическими и статическими библиотеками что такое менеджер зависимостей и зачем он нужен в современной разработке зависимость это написанный кем то другим код который используется в вашей программе добавление зависимости позволяет воспользоваться уже сделанной кем то хорошей работой и избежать изобретения велосипеда а также лишних действий проектирования написания тестирования отладки и поддержки определённой логики такие куски логики называют пакетами библиотеками или модулями чем сложнее проект тем больше сторонних библиотек правда некоторые приложения могут вообще отказываться от их использования а у этих библиотек много разных версий они могут ссылаться друг на друга и накладывать ограничения на эти версии эту работу можно проиллюстрировать таким бытовым примером чтобы телефон показал погоду на улице не нужно встраивать в него термометр и вытаскивать за окно в нём уже зашита специальная технология которая позволяет ему связаться с библиотекой где хранятся данные гидрометцентра которые как и погода всё время обновляются иногда с новой версией добавляется какая нибудь новая функциональность в примере с термометром библиотека с новой версией умеет ещё и выдавать карту дождей а до этого могла показывать только температуру менеджеры зависимостей позволяют избежать долгого и муторного решения такого набора уравнений то есть берут на себя часть работы которую без них разработчик делал бы руками это система которая позволяет управлять зависимостями в вашем проекте а ещё у сторонних библиотек часто могут выходить новые версии с исправленными ошибками и благодаря менеджеру зависимостей вам не нужно следить за их выходом он всё обновит за вас предположим вы решили подключить в ваш проект   и  обе эти библиотеки ссылаются на библиотеку   хочет чтобы она была любой версии начинающейся с а  чтобы она была от до такое уравнение конечно можно решить вручную но что делать когда этих уравнений несколько десятков а уровней зависимостей два три или больше для таких задач в распоряжении  разработчика существуют три основных менеджера зависимостей  пожалуй самый распространённый сегодня он требует лишь указывать список зависимостей в определённом формате в текстовом файле  менее удобен в этом плане вы также указываете список зависимостей в текстовом файле но помимо этого нужно ещё немного самостоятельной работы о которой расскажем ниже  или    официальный менеджер зависимостей от  появился недавно и многие команды переходят на него с  позволяет управлять зависимостями как через графический так и через текстовый интерфейс прямо из  случается что нужная библиотека не поддерживает необходимый менеджер зависимостей потому что разработчики каждой библиотеки сами выбирают какой менеджер поддержать поддержка каждого менеджера это работа которая занимает определённое время поэтому часто выбирают работать только с самым популярным менеджером сocoapods а если в проекте например  а библиотека есть только в  или просто нужна в одной конкретной версии приходится добавлять вручную как   о чём мы также поговорим позже но прежде чем начать говорить об управлении зависимостями нужно разобрать несколько связанных с ним терминов фантастическое   и где оно обитает    это стандарт который говорит о том как работать с версиями пакетов библиотек приложений как их указывать и накладывать на них ограничения зачем накладывать ограничения возьмём такой пример разработчик создаёт приложение и использует некоторый набор библиотек для упрощения работы например библиотек для работы с сетью  допустим начиная с определённой версии в библиотеке появляется поддержка какой то новой функциональности например   эта функциональность доступна только начиная с определенной версии библиотеки в таком случае от разработчика потребуется всего лишь поднять версию  в манифесте где он описывает используемые библиотеки если начиная с какой то версии библиотеки исправляется некий важный баг но не сильно меняется функциональность самой библиотеки то обновление до свежей исправленной версии произойдёт без лишнего вмешательства разработчика в следующий раз при обновлении текущих библиотек проекта разберём что такое  чтобы понимать формат версий с которыми придётся работать а также узнаем как можно указать версию зависимости и наложить на неё ограничения этот набор правил глобальный стандарт который используется повсеместно начиная от пакетов   и заканчивая версиями приложений в   по этому стандарту номер версии это строка которая состоит из чисел разделённых точкой и имеет формат    где  мажорная версия  минорная версия и  патч версия версии сравниваются слева направо например но зачастую мажорная версия увеличивается или при выпуске каких либо масштабных фич или при редизайне приложения или просто при желании обозначить принципиальное обновление приложения библиотеки синтаксис  в   и   в  можно указать одну из стратегий выбора версии если необходима конкретная версия просто укажите её без дополнительных символов как есть если необходима точная версия но при этом вы также хотите обновляться если придут исправления багов в патч версии используйте операнд можно указывать неравенства ≥ или ≤ в этом случае  обновит библиотеку до и т д но не возьмёт обновление так как в нём уже повышена минорная а не патч версия если вы также хотите завязаться на минорную версию достаточно просто указать  в  используется тот же формат что и в  с тем только исключением что точная версия указывается через равенство   позволяет указать стратегию выбора версии прямо в интерфейсе доступны следующие аналогичный синтаксис и у   файла модули что к чему библиотеки фреймворки  и  пакеты организация кода в  построена на понятии модулей модуль это отдельный кусок кода или функциональности который можно распространять разными способами и переиспользовать существует четыре вида модулей разберёмся в чём разница библиотека это исполняемый код скомпилированный под конкретную архитектуру фреймворк папка содержащая в себе библиотеку и вспомогательные файлы  набор фреймворков под разные архитектуры  пакет фреймворк который используется для работы со    если говорить на языке бытовых примеров то код это комната а модули разные предметы в ней торшер например позволяет включать и выключать свет но как он работает внутри мы не знаем и этим торшером могут пользоваться в разных квартирах и комнатах разные люди библиотеки библиотека это исполняемый код скомпилированный под конкретную архитектуру например  архитектуры могут различаться для разных типов устройств и симуляторов •  устройства архитектуры     •  симулятор архитектуры  и  исходный код текст программы который написал разработчик исполняемый код код который получился в результате компиляции компилятор переводит исходный код в машинный который сможет исполнить операционная система на выходе получается исполняемый код библиотеки бывают статическими и динамическими об этом позже и представляют собой один бинарный файл если представить что библиотека это настоящая библиотека со стеллажами в которых хранятся книги то эти книги справочники о том как что то сделать методы для выполнения разных задач по сути это скомпилированный набор объектных файлов которые программа может использовать для выполнения любой задачи то есть все файлы которые библиотека собирается использовать были скомпилированы до этапа компоновки фреймворки фреймворк  представляет собой папку с файлами в которой лежит сама библиотека хедеры и ресурсы эта папка должна иметь определённую структуру но нет нужды запоминать её так как фреймворки как правило собираются самим  поддержка фреймворков добавилась в  фреймворки служат той же цели что и библиотеки но могут включать в себя различные ресурсы картинки документацию строковые файлы они также могут быть статическими или динамическими что использовать фреймворк или библиотеку в чём же разница между фреймворком и библиотекой и когда их использовать принципиальное различие в архитектуре  для начала стоит рассказать что такое  фреймворки это такие фреймворки которые содержат библиотеки для разных архитектур и платформ соединённые в одну с появлением  на замену им пришли  которые ввели структуру позволяющую разнести библиотеки для разных платформ и архитектур по папкам  это по сути такой усовершенствованный  фреймворк он также содержит различные библиотеки для разных архитектур и платформ но теперь нет необходимости трудиться над тем чтобы объединить их в одну в одном  может лежать несколько разных фреймворков для     а также для разных архитектур   и т д каждый в своей папке в каком то смысле фреймворк тоже разновидность библиотеки а  разновидность фреймворка но всё же эти понятия принято разделять создатель зависимости сам выбирает в каком виде её распространять нам важно понимать различие между этими видами выбор можно сделать только создавая свою библиотеку    пакет используется для распространения только через  содержит исходный код а также   файл который описывает его конфигурацию доступен начиная со     прежде чем начать наконец говорить об управлении зависимостями важно разобраться в чём различие между статическими и динамическими библиотеками и фреймворками первое что здесь важно понимать системные  и  библиотеки динамические приложения могут хранить ссылку на библиотеку например системная библиотека  динамическая она лежит на айфоне в единственном экземпляре а все приложения лишь ссылаются на неё фреймворки как и библиотеки бывают динамические и статические и представляют собой обёртку библиотеки так динамические библиотеки вне фреймворков не поддерживаются на   и  и здесь важно отметить что во всех дальнейших сравнениях говоря динамическая библиотека мы будем иметь в виду её использование в рамках динамического фреймворка фреймворки в  и  зависимости распространяемые через  называются кокоаподами или подами до  под представлял собой  статическую библиотеку есть специальная инструкция по ней  использует фреймворки вместо статичных библиотек которые не поддерживались  до  и  так что раньше эта директива была обязательна сейчас опциональна если нужно более быстрое время запуска можно её убрать см предыдущий раздел  поддерживает только фреймворки       три менеджера зависимостей    наконец то ради чего мы тут собрались менеджеры зависимостей посмотрим какие они бывают чем отличаются и как выбрать между ними  это один из самых популярных сегодня менеджеров зависимостей позволяет указать список зависимостей в текстовом файле а затем генерирует на основе его  который будет содержать два проекта ваш проект и проект с подами как правило почти все библиотеки поддерживают  хотя с развитием  стали появляться и такие которые поддерживают исключительно  в основном это библиотеки  в таком случае если ваш менеджер зависимостей  единственный вариант воспользоваться библиотекой вручную её собрать и прилинковать к проекту чтобы понять поддерживает ли библиотека  достаточно заглянуть в  либо обратить внимание на наличие  файла в корне репозитория все библиотеки опубликованные в  можно посмотреть на их официальном сайте  в вашем проекте для понимания работы  важны два термина подфайл и спека подфайл описывает все зависимости приложения а спека библиотеку её название и набор её зависимостей для  спеки хранятся в общем репозитории спек  ещё их можно хранить в приватных репозиториях для описания конфигурации зависимостей используется подфайл этот файл написан на языке  в файле опционально укажите источник спек источников может быть несколько даже приватные        официальный источник спек который указан по умолчанию        можно указать свои источники спек в том числе приватные укажите минимальную версию    укажите таргет и набор зависимостей для него если таргетов несколько укажите все так как зависимости для них могут различаться декларируйте зависимость первым идёт её официальное название то самое которое указано в спеке затем версия используйте в названии правила из блока про  есть и другие способы указать зависимости это может понадобиться в случаях когда нужно использовать какую то конкретную версию библиотеки например из определённой ветки репозитория где она хранится или даже из определённого коммита либо указать путь локально если есть только её файл       можно указать ресурс репозитория с которого будем загружать библиотеку          можно указать нужную ветку в репозитории            или тег           или коммит             можно указать на локальный под путь должен вести на папку где лежит       рядом с подфайлом обычно лежит   этот файл описывает конечные версии зависимостей после их установки он обычно так же заливается в  как и сам  чтобы избежать ошибок и рассинхрона при установке зависимостей у разных разработчиков ещё он ускоряет выполнение   чтобы приступить к работе запустите   можно выполнить   если вы хотите обновить все библиотеки в проекте иначе же будут использоваться фиксированные версии зависимостей из   как  работает под капотом   генерирует  файл  состоящий из двух проектов проекта с вашим приложением и отдельного проекта в котором хранятся зависимости поды чтобы всё работало корректно всегда открывайте  файл если внимательнее посмотреть что происходит можно увидеть что продукт этого проекта линкуется в основной проект также  добавляет пару скриптов в   поддержка  в вашей библиотеке чтобы библиотека была доступна через  нужно сначала описать библиотеку или под при помощи спеки собрать её и отправить спеку в приватный либо глобальный репозиторий  разберёмся как это сделать создайте спеку и файл лицензии лицензию нужно добавлять для любой библиотеки и чаще всего используется лицензия  самая популярная лицензия для программ с открытым исходным кодом её текст можно найти в интернете здесь нужно описать вашу библиотеку файл принято форматировать так чтобы вторая часть строки была выровнена      название библиотеки именно его будут указывать разраб    версия   описание      здесь можно указать путь на вебсайт или просто      путь к лицензии да её тоже нужно создать       автор библиотеки       путь к исходным файлам чаще всего это ваш репозитоий      минимальная поддерживаемая версия  и         если библиотека использует локальный фреймворк его ну        проверьте что всё корректно следующая команда валидирует спеку проверяет что она не имеет ошибок а проект билдится    отправьте спеку в репозиторий спек как правило это делается уже на финальном этапе разработки после того как прошла проверка и вы готовы публиковать работу       указываем вайлдкард пути к файлам которые необходимо        путь к ресурсам       укажите здесь все ассеты которые вам нужны включая       указываем зависимости    и системные зависимости         carthagе это децентрализованный менеджер зависимостей которые не нужно поддерживать разработчику  сам выкачивает библиотеку из репозитория компилирует её и предоставляет в готовом виде поэтому если хотите использовать  не нужно искать в репозитории с библиотекой определённые инструкции или слова о том что он поддерживается просто попробуйте нет у  и централизованного источника как у  этим источником по сути является сам  конечно этого не всегда бывает достаточно некоторые библиотеки  просто не может переварить что то не собирается а что то отваливается задача разработчика проверить всё ли работает корректно наконец  может автоматически подхватить уже собранный фреймворк если он прикреплён к соответствующему релизу на   в вашем проекте зависимости в  описываются в текстовом файле  он очень похож на  только гораздо проще по структуре мы указываем источник имя зависимости и версию источник зависимости как правило  либо  для универсальных репозиториев  размещённых в другом месте ключевое слово  сопровождается путём к репозиторию будь то удалённый  адрес используя   или  или локальный путём к репозиторию  на компьютере разработчика название через слеш указывается владелец и название репозитория которые можно подсмотреть в ссылке на репозиторий версия особенности указания версий мы уже рассмотрели в блоке про семантическое версионирование но можно также указывать и ветки примеры версия    ветка     локальный проект       бинарник путь указывается в          после описания зависимостей потребуется ещё несколько дополнительных шагов вызовите    склонирует репозитории с указанных в  путей и затем сбилдит для каждой зависимости фреймворк после окончания работы вы увидите несколько файлов и каталогов полученные фреймворки затем вручную перетащите из папки  в проект в секцию   и    требует добавления нового скрипта в   в качестве  бага  это позволяет  файлам корректно подтягиваться при архивации перейдите в   и добавьте новый   добавьте следующую команду       нажмите на плюс под   и добавьте запись для каждой платформы       как  работает под капотом как и в случае с  создаётся лок файл   который фиксирует конечные версии зависимостей каталог  содержит два подкаталога  содержит собранный фреймворк для каждой зависимости  содержит клонированные исходники которые  потом компилирует это своего рода кэш который ускоряет работу поддержка  в вашей библиотеке для поддержки  достаточно сделать релиз на  но никогда не помешает проверить всё ли билдится корректно в вашем случае и если есть какие то проблемы решить их для этого выполните       попытается сбилдить ваш проект и создаст в нём папку  также стоит обратить внимание что он видит только те схемы которые помечены в проекте как   или    официальный менеджер зависимостей от  работа с ним происходит прямо в  а  файлы больше не нужны хотя при желании есть возможность сгенерировать файл проекта из  пакета если заглянуть в репозиторий библиотеки то первое что будет говорить о поддержке  это наличие   файла  в вашем проекте добавление зависимостей в проект происходит в секции   для начала выберите       найдите модуль по поиску либо введите  репозитория укажите версию как и во всех предыдущих случаях  создает   назначение которого то же что и у других менеджеров зависимостей в меню    доступно несколько действий •    удаляет кэши из   •    резолвит версии зависимостей создаёт   если его не существует но не меняет его если он уже есть может потребоваться если   был например обновлён извне •      обновляет версии пакетов может модифицировать   поддержка  в вашей библиотеке если вы разрабатываете библиотеку и хотите распространять её через  нужно будет создать   файл таким образом может быть сконфигурирован и обычный проект что позволяет отойти от использования  файлов конфигурация через  выглядит чище и более проста для понимания и редактирования чем стандартные  файлы которые зачастую нечитаемы если вы пишете библиотеку и хотите распространять её через  обязательно убедитесь что потенциальные потребители библиотеки не используют  одновременная поддержка  и  часто непростая задача      название нашего пакета   платформы которые поддерживаются нашим пакетом    то что будут использовать сторонние приложения     динамический или статический продукт по дефолту значение   сам будет поним преференция скорее всего будет отдаваться     зависимости необходимые для работы нашего пакета здесь они просто загружаются добавляются они в   название пакета путь к нему и источник ветка в                           и как выбрать подходящий менеджер             пример подключения локального пакета     это то из чего мы будем складывать наш продукт     здесь мы указываем зависимости которые м       все ресурсы которые мы хотим использоват путь к ним относительный от  имя п   универсального ответа нет выбор менеджера зависимостей зависит исключительно от нужд и особенностей вашего проекта  чаще всего не будут поддерживать старые библиотеки в то время как  вполне могут не поддерживать новые хотя это и большая редкость чем первое  в этом плане может показаться универсальнее хоть он более громоздкий и сложный во взаимодействии но он единственный разделяет шаги управления зависимостями и добавления их в проект это даёт контроль над ситуацией и ускоряет разработку не будет лишних пересборок или заморозки интерфейса потому что нужно зарезолвить зависимости над материалом работали • текст аня кочешкова ника черникова • редактура виталик балашов • иллюстрации юля ефимова делимся железной экспертизой от практик в нашем телеграм канале    а полезные видео складываем на одноимённом  канале присоединяйся теги           зависимости управление зависимостями хабы блог компании    разработка под     № в разработке цифровых решений для бизнеса карма рейтинг пользователь комментарии публикации лучшие за сутки похожие · · · · · · · · · · ваш аккаунт войти регистрация разделы публикации новости хабы компании авторы песочница информация устройство сайта для авторов для компаний документы соглашение конфиденциальность услуги корпоративный блог медийная реклама нативные проекты образовательные программы стартапам мегапроекты информация сайт  дата регистрации августа дата основания ноября численность – человек местоположение россия настройка языка техническая поддержка вернуться на старую версию © –  ,№ разработке цифровых решений бизнеса часов назад выбрать менеджер зависимостей компании разработка старший разработчик аня кочешкова рассказывает отличаются менеджера зависимостей каких случаях каких задач подойдёт иной материал полезен джун специалистам которые начали погружаться разработку специально подробно объясняем такое семантическое версионирование устроены модули чём разница динамическими статическими библиотеками такое менеджер зависимостей нужен современной разработке зависимость написанный кем другим который используется вашей программе добавление зависимости позволяет воспользоваться сделанной кем хорошей работой избежать изобретения велосипеда также лишних действий проектирования написания тестирования отладки поддержки определённой логики такие куски логики называют пакетами библиотеками модулями сложнее сторонних библиотек правда некоторые приложения могут вообще отказываться использования этих библиотек разных версий могут ссылаться друг друга накладывать ограничения версии работу проиллюстрировать таким бытовым примером телефон показал погоду улице нужно встраивать термометр вытаскивать окно нём зашита специальная технология которая позволяет связаться библиотекой хранятся гидрометцентра которые погода всё обновляются новой версией добавляется новая функциональность примере термометром библиотека новой версией умеет ещё выдавать карту дождей могла показывать температуру менеджеры зависимостей позволяют избежать долгого муторного решения такого набора уравнений берут часть работы которую разработчик делал руками система которая позволяет управлять зависимостями вашем проекте ещё сторонних библиотек могут выходить новые версии исправленными ошибками благодаря менеджеру зависимостей нужно следить выходом всё обновит предположим решили подключить ваш обе библиотеки ссылаются библиотеку хочет любой версии начинающейся такое уравнение решить вручную делать этих уравнений несколько десятков уровней зависимостей таких задач распоряжении разработчика существуют основных менеджера зависимостей пожалуй самый распространённый требует лишь указывать список зависимостей определённом формате текстовом файле менее удобен плане также указываете список зависимостей текстовом файле помимо нужно ещё немного самостоятельной работы которой расскажем ниже официальный менеджер зависимостей появился недавно многие команды переходят позволяет управлять зависимостями графический текстовый интерфейс прямо случается нужная библиотека поддерживает необходимый менеджер зависимостей разработчики каждой библиотеки сами выбирают менеджер поддержать поддержка каждого менеджера которая занимает определённое поэтому выбирают работать самым популярным менеджером сocoapods проекте например библиотека просто нужна одной конкретной версии приходится добавлять вручную чём также поговорим позже прежде начать говорить управлении зависимостями нужно разобрать несколько связанных терминов фантастическое оно обитает стандарт который говорит работать версиями пакетов библиотек приложений указывать накладывать ограничения накладывать ограничения возьмём разработчик создаёт приложение использует некоторый набор библиотек упрощения работы например библиотек работы сетью допустим начиная определённой версии библиотеке появляется поддержка новой функциональности например эта функциональность доступна начиная определенной версии библиотеки таком случае разработчика потребуется лишь поднять версию манифесте описывает используемые библиотеки начиная версии библиотеки исправляется некий важный баг сильно меняется функциональность самой библиотеки обновление свежей исправленной версии произойдёт лишнего вмешательства разработчика следующий обновлении текущих библиотек проекта разберём такое понимать формат версий которыми придётся работать также узнаем указать версию зависимости наложить неё ограничения набор правил глобальный стандарт который используется повсеместно начиная пакетов заканчивая версиями приложений этому стандарту номер версии строка которая состоит чисел разделённых точкой имеет формат мажорная минорная патч версии сравниваются слева направо например зачастую мажорная увеличивается выпуске каких масштабных фич редизайне приложения просто желании обозначить принципиальное обновление приложения библиотеки синтаксис указать одну стратегий выбора версии необходима конкретная просто укажите её дополнительных символов необходима точная также хотите обновляться придут исправления багов патч версии используйте операнд указывать неравенства ≥ ≤ случае обновит библиотеку т д возьмёт обновление нём повышена минорная патч также хотите завязаться минорную версию достаточно просто указать используется формат исключением точная указывается равенство позволяет указать стратегию выбора версии прямо интерфейсе доступны следующие аналогичный синтаксис файла модули чему библиотеки фреймворки пакеты организация построена понятии модулей модуль отдельный кусок функциональности который распространять разными способами переиспользовать существует четыре вида модулей разберёмся чём разница библиотека исполняемый скомпилированный конкретную архитектуру фреймворк папка содержащая библиотеку вспомогательные набор фреймворков разные архитектуры пакет фреймворк который используется работы говорить языке бытовых примеров комната модули разные предметы торшер например позволяет включать выключать свет работает внутри знаем этим торшером могут пользоваться разных квартирах комнатах разные люди библиотеки библиотека исполняемый скомпилированный конкретную архитектуру например архитектуры могут различаться разных типов устройств симуляторов • устройства архитектуры • симулятор архитектуры исходный текст программы который разработчик исполняемый который получился результате компиляции компилятор переводит исходный машинный который сможет исполнить операционная система выходе получается исполняемый библиотеки бывают статическими динамическими позже представляют собой бинарный представить библиотека настоящая библиотека стеллажами которых хранятся книги книги справочники методы выполнения разных задач сути скомпилированный набор объектных файлов которые выполнения любой которые библиотека собирается скомпилированы этапа компоновки фреймворки фреймворк представляет собой папку файлами которой лежит сама библиотека хедеры ресурсы эта папка должна иметь определённую структуру нужды запоминать её фреймворки правило собираются самим поддержка фреймворков добавилась фреймворки служат той цели библиотеки могут включать различные ресурсы картинки документацию строковые также могут статическими динамическими фреймворк библиотеку чём разница фреймворком библиотекой принципиальное различие архитектуре начала рассказать такое фреймворки такие фреймворки которые содержат библиотеки разных архитектур платформ соединённые одну появлением замену пришли которые ввели структуру позволяющую разнести библиотеки разных платформ архитектур папкам сути усовершенствованный фреймворк также содержит различные библиотеки разных архитектур платформ необходимости трудиться объединить одну одном лежать несколько разных фреймворков также разных архитектур т д каждый своей папке каком смысле фреймворк разновидность библиотеки разновидность фреймворка всё понятия принято разделять создатель зависимости выбирает каком виде её распространять нам важно понимать различие этими видами выбор создавая библиотеку пакет используется распространения содержит исходный также который описывает конфигурацию доступен начиная прежде начать говорить управлении зависимостями важно разобраться чём различие статическими динамическими библиотеками фреймворками первое важно понимать системные библиотеки динамические приложения могут хранить ссылку библиотеку например системная библиотека динамическая лежит айфоне единственном экземпляре приложения лишь ссылаются неё фреймворки библиотеки бывают динамические статические представляют собой обёртку библиотеки динамические библиотеки вне фреймворков поддерживаются важно отметить дальнейших сравнениях говоря динамическая библиотека будем иметь виду её рамках динамического фреймворка фреймворки зависимости распространяемые называются кокоаподами подами представлял собой статическую библиотеку специальная инструкция использует фреймворки вместо статичных библиотек которые поддерживались раньше эта директива обязательна опциональна нужно быстрое запуска её убрать см предыдущий раздел поддерживает фреймворки менеджера зависимостей ради собрались менеджеры зависимостей посмотрим какие бывают отличаются выбрать ними самых популярных менеджеров зависимостей позволяет указать список зависимостей текстовом файле затем генерирует основе который содержать проекта ваш подами правило библиотеки поддерживают хотя развитием стали появляться такие которые поддерживают исключительно основном библиотеки таком случае ваш менеджер зависимостей единственный вариант воспользоваться библиотекой вручную её собрать прилинковать проекту понять поддерживает библиотека достаточно заглянуть обратить внимание наличие файла корне репозитория библиотеки опубликованные посмотреть официальном сайте вашем проекте понимания работы важны термина подфайл спека подфайл описывает зависимости приложения спека библиотеку её название набор её зависимостей спеки хранятся общем репозитории спек ещё хранить приватных репозиториях описания конфигурации зависимостей используется подфайл написан языке файле опционально укажите источник спек источников несколько приватные официальный источник спек который указан умолчанию указать свои источники спек числе приватные укажите минимальную версию укажите таргет набор зависимостей таргетов несколько укажите зависимости могут различаться декларируйте зависимость первым идёт её официальное название самое которое указано спеке затем используйте названии правила блока другие способы указать зависимости понадобиться случаях нужно какую конкретную версию библиотеки например определённой ветки репозитория хранится определённого коммита указать путь локально её указать ресурс репозитория которого будем загружать библиотеку указать нужную ветку репозитории тег коммит указать локальный путь должен вести папку лежит рядом подфайлом обычно лежит описывает конечные версии зависимостей установки обычно заливается избежать ошибок рассинхрона установке зависимостей разных разработчиков ещё ускоряет выполнение приступить работе запустите выполнить хотите обновить библиотеки проекте иначе будут использоваться фиксированные версии зависимостей работает капотом генерирует состоящий двух проектов проекта вашим приложением отдельного проекта котором хранятся зависимости поды всё работало корректно открывайте внимательнее посмотреть происходит увидеть продукт проекта линкуется основной также добавляет пару скриптов поддержка вашей библиотеке библиотека доступна нужно сначала описать библиотеку помощи спеки собрать её отправить спеку приватный глобальный репозиторий разберёмся создайте спеку лицензии лицензию нужно добавлять любой библиотеки чаще используется лицензия самая популярная лицензия программ открытым исходным её текст интернете нужно описать вашу библиотеку принято форматировать вторая часть строки выровнена название библиотеки именно будут указывать разраб описание указать путь вебсайт просто путь лицензии её нужно библиотеки путь исходным файлам чаще ваш репозитоий минимальная поддерживаемая библиотека использует локальный фреймворк проверьте всё корректно следующая команда валидирует спеку проверяет имеет ошибок билдится отправьте спеку репозиторий спек правило делается финальном этапе разработки прошла проверка готовы публиковать работу указываем вайлдкард пути файлам которые необходимо путь ресурсам укажите ассеты которые нужны включая указываем зависимости системные зависимости carthagе децентрализованный менеджер зависимостей которые нужно поддерживать разработчику выкачивает библиотеку репозитория компилирует её предоставляет готовом виде поэтому хотите нужно искать репозитории библиотекой определённые инструкции слова поддерживается просто попробуйте централизованного источника этим источником сути бывает достаточно некоторые библиотеки просто переварить собирается отваливается разработчика проверить всё работает корректно автоматически подхватить собранный фреймворк прикреплён соответствующему релизу вашем проекте зависимости описываются текстовом файле очень похож гораздо проще структуре указываем источник имя зависимости версию источник зависимости правило универсальных репозиториев размещённых другом месте ключевое слово сопровождается путём репозиторию будь удалённый адрес используя локальный путём репозиторию компьютере разработчика название слеш указывается владелец название репозитория которые подсмотреть ссылке репозиторий особенности указания версий рассмотрели блоке семантическое версионирование также указывать ветки ветка локальный бинарник путь указывается описания зависимостей потребуется ещё несколько дополнительных шагов вызовите склонирует репозитории указанных путей затем сбилдит каждой зависимости фреймворк окончания работы увидите несколько файлов каталогов полученные фреймворки затем вручную перетащите папки секцию требует добавления нового скрипта качестве бага позволяет файлам корректно подтягиваться архивации перейдите добавьте новый добавьте следующую команду нажмите добавьте запись каждой платформы работает капотом случае создаётся лок который фиксирует конечные версии зависимостей каталог содержит подкаталога содержит собранный фреймворк каждой зависимости содержит клонированные исходники которые компилирует своего рода кэш который ускоряет работу поддержка вашей библиотеке поддержки достаточно релиз помешает проверить всё билдится корректно вашем случае какие проблемы решить выполните попытается сбилдить ваш создаст нём папку также обратить внимание видит те схемы которые помечены проекте официальный менеджер зависимостей происходит прямо нужны хотя желании возможность сгенерировать проекта пакета заглянуть репозиторий библиотеки первое говорить поддержке наличие файла вашем проекте добавление зависимостей происходит секции начала выберите найдите модуль поиску введите репозитория укажите версию предыдущих случаях создает назначение которого других менеджеров зависимостей меню доступно несколько действий • удаляет кэши • резолвит версии зависимостей создаёт существует меняет потребоваться например обновлён извне • обновляет версии пакетов модифицировать поддержка вашей библиотеке разрабатываете библиотеку хотите распространять её нужно таким образом сконфигурирован обычный позволяет отойти использования файлов конфигурация выглядит чище проста понимания редактирования стандартные которые зачастую нечитаемы пишете библиотеку хотите распространять её обязательно убедитесь потенциальные потребители библиотеки используют одновременная поддержка непростая название нашего пакета платформы которые поддерживаются нашим пакетом будут сторонние приложения динамический статический продукт дефолту значение поним преференция скорее отдаваться зависимости необходимые работы нашего пакета просто загружаются добавляются название пакета путь нему источник ветка выбрать подходящий менеджер подключения локального пакета будем складывать наш продукт указываем зависимости которые м ресурсы которые хотим использоват путь относительный имя п универсального ответа выбор менеджера зависимостей зависит исключительно нужд особенностей вашего проекта чаще будут поддерживать старые библиотеки вполне могут поддерживать новые хотя большая редкость первое плане показаться универсальнее громоздкий сложный взаимодействии единственный разделяет шаги управления зависимостями добавления даёт контроль ситуацией ускоряет разработку лишних пересборок заморозки интерфейса нужно зарезолвить зависимости материалом работали • текст аня кочешкова ника черникова • редактура виталик балашов • иллюстрации юля ефимова делимся железной экспертизой практик нашем телеграм канале полезные видео складываем одноимённом канале присоединяйся теги зависимости управление зависимостями компании разработка № разработке цифровых решений бизнеса публикации лучшие сутки похожие · · · · · · · · · · ваш аккаунт войти регистрация разделы публикации новости компании авторы песочница информация устройство сайта авторов компаний документы соглашение конфиденциальность услуги корпоративный медийная реклама нативные проекты образовательные программы стартапам мегапроекты информация сайт дата регистрации августа дата основания ноября численность – человек местоположение россия настройка языка техническая поддержка вернуться старую версию © –,№ разработк цифров решен бизнес час назад выбра менеджер зависим компан разработк старш разработчик ан кочешков рассказыва отлича менеджер зависим как случа как задач подойдет ин материа полез джун специалист котор нача погружа разработк специальн подробн объясня так семантическ версионирован устро модул чем разниц динамическ статическ библиотек так менеджер зависим нуж современ разработк зависим написа кем друг котор использ ваш программ добавлен зависим позволя воспользова сдела кем хорош работ избежа изобретен велосипед такж лишн действ проектирован написан тестирован отладк поддержк определен логик так куск логик называ пакет библиотек модул сложн сторон библиотек правд некотор приложен могут вообщ отказыва использован эт библиотек разн верс могут ссыла друг друг накладыва ограничен верс работ проиллюстрирова так бытов пример телефон показа погод улиц нужн встраива термометр вытаскива окн нем зашит специальн технолог котор позволя связа библиотек хран гидрометцентр котор погод все обновля нов верс добавля нов функциональн пример термометр библиотек нов верс умеет ещ выдава карт дожд могл показыва температур менеджер зависим позволя избежа долг муторн решен так набор уравнен берут част работ котор разработчик дела рук систем котор позволя управля зависим ваш проект ещ сторон библиотек могут выход нов верс исправлен ошибк благодар менеджер зависим нужн след выход все обнов предполож реш подключ ваш об библиотек ссыла библиотек хочет люб верс начина так уравнен реш вручн дела эт уравнен нескольк десятк уровн зависим так задач распоряжен разработчик существ основн менеджер зависим пожал сам распространен треб лиш указыва список зависим определен формат текстов файл мен удоб план такж указыва список зависим текстов файл помим нужн ещ немн самостоятельн работ котор расскаж ниж официальн менеджер зависим появ недавн мног команд переход позволя управля зависим графическ текстов интерфейс прям случа нужн библиотек поддержива необходим менеджер зависим разработчик кажд библиотек сам выбира менеджер поддержа поддержк кажд менеджер котор занима определен поэт выбира работа сам популярн менеджер соcоаподс проект например библиотек прост нужн одн конкретн верс приход добавля вручн чем такж поговор позж прежд нача говор управлен зависим нужн разобра нескольк связа термин фантастическ он обита стандарт котор говор работа верс пакет библиотек приложен указыва накладыва ограничен накладыва ограничен возьм разработчик созда приложен использ некотор набор библиотек упрощен работ например библиотек работ сет допуст начин определен верс библиотек появля поддержк нов функциональн например эт функциональн доступн начин определен верс библиотек так случа разработчик потреб лиш подня верс манифест описыва используем библиотек начин верс библиотек исправля нек важн баг сильн меня функциональн сам библиотек обновлен свеж исправлен верс произойдет лишн вмешательств разработчик след обновлен текущ библиотек проект разбер так понима формат верс котор придет работа такж узна указа верс зависим налож не ограничен набор прав глобальн стандарт котор использ повсеместн начин пакет заканчив верс приложен эт стандарт номер верс строк котор состо чисел разделен точк имеет формат мажорн минорн патч верс сравнива слев направ например зачаст мажорн увеличива выпуск как масштабн фич редизайн приложен прост желан обознач принципиальн обновлен приложен библиотек синтаксис указа одн стратег выбор верс необходим конкретн прост укаж е дополнительн символ необходим точн такж хот обновля придут исправлен баг патч верс использ операнд указыва неравенств ≥ ≤ случа обнов библиотек т д возьмет обновлен нем повыш минорн патч такж хот завяза минорн верс достаточн прост указа использ формат исключен точн указыва равенств позволя указа стратег выбор верс прям интерфейс доступн след аналогичн синтаксис файл модул чем библиотек фреймворк пакет организац постро понят модул модул отдельн кусок функциональн котор распространя разн способ переиспользова существ четыр вид модул разбер чем разниц библиотек исполня скомпилирова конкретн архитектур фреймворк папк содержа библиотек вспомогательн набор фреймворк разн архитектур пакет фреймворк котор использ работ говор язык бытов пример комнат модул разн предмет торшер например позволя включа выключа свет работа внутр зна эт торшер могут пользова разн квартир комнат разн люд библиотек библиотек исполня скомпилирова конкретн архитектур например архитектур могут различа разн тип устройств симулятор • устройств архитектур • симулятор архитектур исходн текст программ котор разработчик исполня котор получ результат компиляц компилятор перевод исходн машин котор сможет исполн операцион систем выход получа исполня библиотек быва статическ динамическ позж представля соб бинарн представ библиотек настоя библиотек стеллаж котор хран книг книг справочник метод выполнен разн задач сут скомпилирова набор объектн файл котор выполнен люб котор библиотек собира скомпилирова этап компоновк фреймворк фреймворк представля соб папк файл котор леж сам библиотек хедер ресурс эт папк должн имет определен структур нужд запомина е фреймворк прав собира сам поддержк фреймворк добав фреймворк служат то цел библиотек могут включа различн ресурс картинк документац строков такж могут статическ динамическ фреймворк библиотек чем разниц фреймворк библиотек принципиальн различ архитектур нача рассказа так фреймворк так фреймворк котор содержат библиотек разн архитектур платформ соединен одн появлен замен пришл котор ввел структур позволя разнест библиотек разн платформ архитектур папк сут усовершенствова фреймворк такж содерж различн библиотек разн архитектур платформ необходим труд объедин одн одн лежа нескольк разн фреймворк такж разн архитектур т д кажд сво папк как смысл фреймворк разновидн библиотек разновидн фреймворк все понят принят разделя создател зависим выбира как вид е распространя нам важн понима различ эт вид выбор создав библиотек пакет использ распространен содерж исходн такж котор описыва конфигурац доступ начин прежд нача говор управлен зависим важн разобра чем различ статическ динамическ библиотек фреймворк перв важн понима системн библиотек динамическ приложен могут хран ссылк библиотек например системн библиотек динамическ леж айфон единствен экземпляр приложен лиш ссыла не фреймворк библиотек быва динамическ статическ представля соб обертк библиотек динамическ библиотек вне фреймворк поддержива важн отмет дальн сравнен говор динамическ библиотек буд имет вид е рамк динамическ фреймворк фреймворк зависим распространя называ кокоапод под представля соб статическ библиотек специальн инструкц использ фреймворк вмест статичн библиотек котор поддержива раньш эт директив обязательн опциональн нужн быстр запуск е убра см предыдущ раздел поддержива фреймворк менеджер зависим рад собра менеджер зависим посмотр как быва отлича выбра ним сам популярн менеджер зависим позволя указа список зависим текстов файл зат генерир основ котор содержа проект ваш под прав библиотек поддержива хот развит стал появля так котор поддержива исключительн основн библиотек так случа ваш менеджер зависим единствен вариант воспользова библиотек вручн е собра прилинкова проект поня поддержива библиотек достаточн заглянут обрат вниман налич файл корн репозитор библиотек опубликова посмотрет официальн сайт ваш проект пониман работ важн термин подфайл спек подфайл описыва зависим приложен спек библиотек е назван набор е зависим спек хран общ репозитор спек ещ хран приватн репозитор описан конфигурац зависим использ подфайл написа язык файл опциональн укаж источник спек источник нескольк приватн официальн источник спек котор указа умолчан указа сво источник спек числ приватн укаж минимальн верс укаж таргет набор зависим таргет нескольк укаж зависим могут различа декларир зависим перв идет е официальн назван сам котор указа спек зат использ назван прав блок друг способ указа зависим понадоб случа нужн как конкретн верс библиотек например определен ветк репозитор хран определен коммит указа пут локальн е указа ресурс репозитор котор буд загружа библиотек указа нужн ветк репозитор тег комм указа локальн пут долж вест папк леж ряд подфайл обычн леж описыва конечн верс зависим установк обычн залива избежа ошибок рассинхрон установк зависим разн разработчик ещ ускоря выполнен приступ работ запуст выполн хот обнов библиотек проект инач будут использова фиксирова верс зависим работа капот генерир состоя двух проект проект ваш приложен отдельн проект котор хран зависим под все работа корректн открыва внимательн посмотрет происход увидет продукт проект линк основн такж добавля пар скрипт поддержк ваш библиотек библиотек доступн нужн снача описа библиотек помощ спек собра е отправ спек приватн глобальн репозитор разбер созда спек лиценз лиценз нужн добавля люб библиотек чащ использ лиценз сам популярн лиценз программ открыт исходн е текст интернет нужн описа ваш библиотек принят форматирова втор част строк выровн назван библиотек имен будут указыва разраб описан указа пут вебсайт прост пут лиценз е нужн библиотек пут исходн файл чащ ваш репозито минимальн поддержива библиотек использ локальн фреймворк проверьт все корректн следующ команд валидир спек проверя имеет ошибок билд отправьт спек репозитор спек прав дела финальн этап разработк прошл проверк готов публикова работ указыва вайлдкард пут файл котор необходим пут ресурс укаж ассет котор нужн включ указыва зависим системн зависим cартhаг децентрализова менеджер зависим котор нужн поддержива разработчик выкачива библиотек репозитор компилир е предоставля готов вид поэт хот нужн иска репозитор библиотек определен инструкц слов поддержива прост попроб централизова источник эт источник сут быва достаточн некотор библиотек прост перевар собира отвалива разработчик провер все работа корректн автоматическ подхват собра фреймворк прикрепл соответств релиз ваш проект зависим описыва текстов файл очен похож горазд прощ структур указыва источник им зависим верс источник зависим прав универсальн репозитор размещен друг мест ключев слов сопровожда пут репозитор буд удален адрес использу локальн пут репозитор компьютер разработчик назван слеш указыва владелец назван репозитор котор подсмотрет ссылк репозитор особен указан верс рассмотрел блок семантическ версионирован такж указыва ветк ветк локальн бинарник пут указыва описан зависим потреб ещ нескольк дополнительн шаг вызов склонир репозитор указа пут зат сбилд кажд зависим фреймворк окончан работ увид нескольк файл каталог получен фреймворк зат вручн перетащ папк секц треб добавлен нов скрипт качеств баг позволя файл корректн подтягива архивац перейд добавьт нов добавьт след команд нажм добавьт зап кажд платформ работа капот случа созда лок котор фиксир конечн верс зависим каталог содерж подкаталог содерж собра фреймворк кажд зависим содерж клонирова исходник котор компилир сво род кэш котор ускоря работ поддержк ваш библиотек поддержк достаточн релиз помеша провер все билд корректн ваш случа как проблем реш выполн попыта сбилд ваш создаст нем папк такж обрат вниман вид те схем котор помеч проект официальн менеджер зависим происход прям нужн хот желан возможн сгенерирова проект пакет заглянут репозитор библиотек перв говор поддержк налич файл ваш проект добавлен зависим происход секц нача выбер найд модул поиск введ репозитор укаж верс предыдущ случа созда назначен котор друг менеджер зависим мен доступн нескольк действ • удаля кэш • резолв верс зависим созда существ меня потребова например обновл извн • обновля верс пакет модифицирова поддержк ваш библиотек разрабатыва библиотек хот распространя е нужн так образ сконфигурирова обычн позволя отойт использован файл конфигурац выгляд чищ прост пониман редактирован стандартн котор зачаст нечитаем пишет библиотек хот распространя е обязательн убед потенциальн потребител библиотек использ одновремен поддержк непрост назван наш пакет платформ котор поддержива наш пакет будут сторон приложен динамическ статическ продукт дефолт значен пон преференц скор отдава зависим необходим работ наш пакет прост загружа добавля назван пакет пут нем источник ветк выбра подходя менеджер подключен локальн пакет буд складыва наш продукт указыва зависим котор м ресурс котор хот использоват пут относительн им п универсальн ответ выбор менеджер зависим завис исключительн нужд особен ваш проект чащ будут поддержива стар библиотек вполн могут поддержива нов хот больш редкост перв план показа универсальн громоздк сложн взаимодейств единствен разделя шаг управлен зависим добавлен дает контрол ситуац ускоря разработк лишн пересборок заморозк интерфейс нужн зарезолв зависим материал работа • текст ан кочешков ник черников • редактур виталик балаш • иллюстрац юл ефимов дел железн экспертиз практик наш телегр канал полезн виде складыва одноимен канал присоединя тег зависим управлен зависим компан разработк № разработк цифров решен бизнес публикац лучш сутк похож · · · · · · · · · · ваш аккаунт войт регистрац раздел публикац новост компан автор песочниц информац устройств сайт автор компан документ соглашен конфиденциальн услуг корпоративн медийн реклам нативн проект образовательн программ стартап мегапроект информац сайт дат регистрац август дат основан ноябр числен – человек местоположен росс настройк язык техническ поддержк вернут стар верс © –,№ разработка цифровой бизнес час назад выбрать менеджер зависимость компания разработка старший разработчик аня кочешкова рассказывать отличаться менеджер зависимость случай подойти иной материал полезный джуна специалист который начать погружаться разработка специально подробно объяснять семантический версионирование устроить модуль разница динамический статический библиотека менеджер зависимость нужный современный разработка зависимость который использоваться ваш добавление зависимость позволять воспользоваться хороший избежать изобретение велосипед также лишний действие проектирование написание тестирование отладка поддержка определённый логика кусок логика называть пакет библиотека модуль сложный сторонний библиотека правда некоторый приложение мочь вообще отказываться библиотека разный мочь ссылаться друг друг накладывать ограничение проиллюстрировать бытовой телефон показать погода улица нужно встраивать термометр вытаскивать окно зашить специальный технология который позволять связаться библиотека храниться гидрометцентр который погода всё обновляться новый добавляться новый функциональность термометр библиотека новый уметь ещё выдавать карта дождь мочь показывать температура менеджер зависимость позволять избежать долгий муторный набор уравнение брать часть который разработчик делать рука система который позволять управлять зависимость ваш ещё сторонний библиотека мочь выходить новый исправить ошибка благодаря менеджер зависимость нужно следить выход всё обновить предположим решить подключить ваш оба библиотека ссылаться библиотека хотеть любой начинаться уравнение решить вручную делать уравнение несколько десяток уровень зависимость распоряжение разработчик существовать основный менеджер зависимость пожалуй самый распространить требовать лишь указывать список зависимость определённый формат текстовый менее удобный план также указывать список зависимость текстовый помимо нужно ещё немного самостоятельный который рассказать ниже официальный менеджер зависимость появиться недавно многие команда переходить позволять управлять зависимость графический текстовый интерфейс прямо случаться нужный библиотека поддерживать необходимый менеджер зависимость разработчик каждый библиотека выбирать менеджер поддержать поддержка каждый менеджер который занимать определённый поэтому выбирать работать самый популярный менеджер сocoapods например библиотека просто нужный конкретный приходиться добавлять вручную также поговорить поздний прежде начать говорить управление зависимость нужно разобрать несколько связанный термин фантастический оно обитать стандарт который говорить работать пакет библиотека приложение указывать накладывать ограничение накладывать ограничение взять разработчик создавать приложение некоторый набор библиотека упрощение например библиотека сеть допустить начинать определённый библиотека появляться поддержка новый функциональность например функциональность доступный начинать определённый библиотека случай разработчик потребоваться лишь поднять манифест описывать библиотека начинать библиотека исправляться некий важный баг сильно меняться функциональность библиотека обновление свежеть исправить произойти лишний вмешательство разработчик следующий обновление текущий библиотека разобрать понимать формат который прийтись работать также узнать указать зависимость наложить ограничение набор правило глобальный стандарт который использоваться повсеместно начинать пакет заканчивать приложение стандарт номер строка который состоять число разделить точка иметь формат мажорный минорный патч сравниваться слева направо например зачастую мажорный увеличиваться выпуск масштабный фича редизайн приложение просто желание обозначить принципиальный обновление приложение библиотека синтаксис указать стратегия выбор необходимый конкретный просто указать её дополнительный символ необходимый точный также хотеть обновляться прийти исправление баг патч операнд указывать неравенство ≥ ≤ случай обновить библиотека далее взять обновление повысить минорный патч также хотеть завязаться минорный достаточно просто указать использоваться формат исключение точный указываться равенство позволять указать стратегия выбор прямо интерфейс доступный следующий аналогичный синтаксис модуль библиотека фреймворк пакет организация построить понятие модуль модуль отдельный кусок функциональность который распространять разный способ переиспользовать существовать четыре вид модуль разобраться разница библиотека исполняемый скомпилировать конкретный архитектура фреймворк папка содержать библиотека вспомогательный набор фреймворк разный архитектура пакет фреймворк который использоваться говорить язык бытовой комната модуль разный предмет торшер например позволять включать выключать свет работать внутри знать торшер мочь пользоваться разный квартира комната разный человек библиотека библиотека исполняемый скомпилировать конкретный архитектура например архитектура мочь различаться разный тип устройство симулятор • устройство архитектура • симулятор архитектура исходный текст который разработчик исполняемый который получиться результат компиляция компилятор переводить исходный машинный который смочь исполнить операционный система выход получаться исполняемый библиотека бывать статический динамический поздний представлять бинарный представить библиотека настоящий библиотека стеллаж который храниться книга книга справочник выполнение разный суть скомпилировать набор объектный который выполнение любой который библиотека собираться скомпилировать этап компоновка фреймворк фреймворк представлять папка который лежать библиотека хедер ресурс папка должный иметь определённый структура нужда запоминать её фреймворк правило собираться поддержка фреймворк добавиться фреймворк служить цель библиотека мочь включать различный ресурс картинка строковый также мочь статический динамический фреймворк библиотека разница фреймворк библиотека принципиальный различие архитектура начало рассказать фреймворк фреймворк который содержать библиотека разный архитектура платформа соединить появление замена прислать который ввести структура позволять разнести библиотека разный платформа архитектура папка суть усовершенствовать фреймворк также содержать различный библиотека разный архитектура платформа необходимость трудиться объединить лежать несколько разный фреймворк также разный архитектура далее каждый свой папка смысл фреймворк разновидность библиотека разновидность фреймворк всё понятие принять разделять создатель зависимость выбирать вид её распространять важно понимать различие вид выбор создавать библиотека пакет использоваться распространение содержать исходный также который описывать конфигурация доступный начинать прежде начать говорить управление зависимость важно разобраться различие статический динамический библиотека фреймворк первый важно понимать системный библиотека динамический приложение мочь хранить библиотека например системный библиотека динамический лежать айфон единственный экземпляр приложение лишь ссылаться фреймворк библиотека бывать динамический статический представлять обёртка библиотека динамический библиотека вне фреймворк поддерживаться важно отметить дальнейший сравнение говорить динамический библиотека иметь вид её рамка динамический фреймворк фреймворк зависимость распространять называться кокоапод пода представлять статический библиотека специальный инструкция фреймворк вместо статичный библиотека который поддерживаться ранний директива обязательный опциональный нужно быстрый запуск её убрать смотреть предыдущий раздел поддерживать фреймворк менеджер зависимость ради собраться менеджер зависимость посмотреть бывать отличаться выбрать самый популярный менеджер зависимость позволять указать список зависимость текстовый затем генерировать основа который содержать ваш пода правило библиотека поддерживать хотя развитие стать появляться который поддерживать исключительно основное библиотека случай ваш менеджер зависимость единственный вариант воспользоваться библиотека вручную её собрать прилинковать понять поддерживать библиотека достаточно заглянуть обратить внимание наличие корн репозиторий библиотека опубликовать посмотреть официальный сайт ваш понимание важный термин подфайл спек подфайл описывать зависимость приложение спек библиотека её название набор её зависимость спечь храниться общий репозиторий спечь ещё хранить приватный репозиторий описание конфигурация зависимость использоваться подфайл язык опциональный указать источник спечь источник несколько приватный официальный источник спечь который указать умолчание указать свой источник спечь число приватный указать минимальный указать таргет набор зависимость таргет несколько указать зависимость мочь различаться декларировать зависимость первый идти её официальный название самый который указать спек затем название правило блок способ указать зависимость понадобиться случай нужно конкретный библиотека например определённый ветка репозиторий храниться определённый коммит указать путь локально её указать ресурс репозиторий который загружать библиотека указать нужный ветка репозиторий тег коммит указать локальный путь должный вести папка лежать рядом подфайл обычно лежать описывать конечный зависимость установка обычно заливаться избежать ошибка рассинхрон установка зависимость разный разработчик ещё ускорять выполнение приступить запустить выполнить хотеть обновить библиотека иначе использоваться фиксировать зависимость работать капот генерировать состоять ваш приложение отдельный который храниться зависимость пода всё работать корректно открывать внимательный посмотреть происходить увидеть продукт линковаться основной также добавлять пара скрипт поддержка ваш библиотека библиотека доступный нужно сначала описать библиотека помощь спечь собрать её отправить спечь приватный глобальный репозиторий разобраться спечь лицензия лицензия нужно добавлять любой библиотека частый использоваться лицензия самый популярный лицензия открытый исходный её текст интернет нужно описать ваш библиотека принять форматировать второй часть строка выровнять название библиотека именно указывать разраб описание указать путь вебсайт просто путь лицензия её нужно библиотека путь исходный частый ваш репозитоия минимальный поддерживать библиотека локальный фреймворк проверить всё корректно следующий команда валидировать спечь проверять иметь ошибка билдиться отправить спечь репозиторий спечь правило делаться финальный этап разработка пройти проверка готовый публиковать указывать вайлдкарда путь который необходимо путь ресурс указать ассет который нужный включая указывать зависимость системный зависимость carthag децентрализованный менеджер зависимость который нужно поддерживать разработчик выкачивать библиотека репозиторий компилировать её предоставлять готовый вид поэтому хотеть нужно искать репозиторий библиотека определённый инструкция слово поддерживаться просто попробовать централизовать источник источник суть бывать достаточно некоторый библиотека просто переварить собираться отваливаться разработчик проверить всё работать корректно автоматически подхватить собранный фреймворк прикрепить соответствовать релиз ваш зависимость описываться текстовый очень похожий гораздо простой структура указывать источник имя зависимость источник зависимость правило универсальный репозиторий разместить друг место ключевой слово сопровождаться путём репозиторий удалённый адрес локальный путём репозиторий компьютер разработчик название слеш указываться владелец название репозиторий который подсмотреть репозиторий особенность указание рассмотреть блок семантический версионирование также указывать ветка ветка локальный бинарник путь указываться описание зависимость потребоваться ещё несколько дополнительный шаг вызвать склонировать репозиторий указанный путь затем сбилдеть каждый зависимость фреймворк окончание увидеть несколько каталог фреймворк затем вручную перетащить папка секция требовать добавление новый скрипт качество баг позволять корректно подтягиваться архивация перейти добавить новый добавить следующий команда нажать добавить запись каждый платформа работать капот случай создаваться лок который фиксировать конечный зависимость каталог содержать подкаталог содержать собранный фреймворк каждый зависимость содержать клонировать исходник который компилировать свой род кэш который ускорять поддержка ваш библиотека поддержка достаточно релиз помешать проверить всё билдиться корректно ваш случай проблема решить выполнить попытаться сбилдить ваш папка также обратить внимание видеть схема который пометить официальный менеджер зависимость происходить прямо нужный хотя желание возможность сгенерировать пакет заглянуть репозиторий библиотека первый говорить поддержка наличие ваш добавление зависимость происходить секция начало выбрать модуль поиск ввести репозиторий указать предыдущий случай создавать назначение который менеджер зависимость меню доступно несколько действие • удалять кэш • резолвит зависимость создавать существовать менять потребоваться например обновить извне • обновлять пакет модифицировать поддержка ваш библиотека разрабатывать библиотека хотеть распространять её нужно образ сконфигурировать обычный позволять отойти конфигурация выглядеть чистый простой понимание редактирование стандартный который зачастую нечитаемый писать библиотека хотеть распространять её обязательно убедиться потенциальный потребитель библиотека одновременный поддержка непростой название наш пакет платформа который поддерживаться наш пакет сторонний приложение динамический статический продукт дефолт значение понить преференция скорее отдаваться зависимость необходимый наш пакет просто загружаться добавляться название пакет путь источник ветка выбрать подходящий менеджер подключение локальный пакет складывать наш продукт указывать зависимость который м ресурс который хотеть использоватый путь относительный имя п универсальный ответ выбор менеджер зависимость зависеть исключительно нужда особенность ваш частый поддерживать старый библиотека вполне мочь поддерживать новый хотя больший редкость первый план показаться универсальный громоздкий сложный взаимодействие единственный разделять шаг управление зависимость добавление давать контроль ситуация ускорять разработка лишний пересборка заморозок интерфейс нужно зарезолвитя зависимость материал работать • текст аня кочешкова ник черников • редактура виталик балашов • иллюстрация юля ефимов делиться железный экспертиза практика наш телеграм канал полезный видео складывать одноимённый канал присоединяться тег зависимость управление зависимость компания разработка № разработка цифровой бизнес публикация хороший сутки похожий · · · · · · · · · · ваш аккаунт войти регистрация раздел публикация новость компания песочница информация устройство сайт компания документ соглашение конфиденциальность услуга корпоративный медийный реклама нативный образовательный стартап мегапроект информация сайт дата регистрация август дата основание ноябрь численность – человек местоположение россия настройка язык технический поддержка вернуться старый © –,0
1,OSINT & Hacking — как работает фишинг для нельзяграма,"71.07 Рейтинг Cloud4Y #1 Корпоративный облачный провайдер Автор оригинала: Yashwant Singh Взлом Instagram*‑аккаунта — популярный запрос в поисковиках. Поэтому есть смысл рассказать о том, как это обычно работает. Просто для того, чтобы вы знали, откуда может пойти атака.  5 часов назад OSINT & Hacking — как работает фишинг для нельзяграма      1100 Блог компании Cloud4Y , Информационная безопасность *, Социальные сети и сообщества Обзор  Перевод  Чтобы начать попытки заполучить доступ к аккаунту, вы должны знать ник человека, которого вы пытаетесь взломать. Так что небольшая разведка будет очень кстати. Только не увлекайтесь. Существуют различные инструменты для разведки, в первую очередь, поиск пользователя в конкретной соцсети с целью узнать его ник. Я нашёл отличный инструмент под названием «Slash», который можно использовать для поиска любых учётных записей пользователя, если он везде регистрируется под одним ником. Ставим Slash git clone https://github.com/theahmadov/slash  cd slash  pip install -r requirements.txt  python slash.py help Я проверил Slash на себе, и посмотрите на эти результаты. Некоторые из учетных записей, перечисленных здесь, были созданы много лет назад. Slash — это простой консольный инструмент. Но вы также можете использовать такие инструменты, как WhatsMyName Web, который совершенно бесплатен. Вот, посмотрите. Я проверил WhatsMyName на себе. Мой ник «earthtoyash». Теперь, когда мы знаем больше о нашем пользователе, можно использовать эти знания. Например, через отправку фишинговых ссылок. Для этого создадим полезную нагрузку с помощью Zphisher. Ставим Zphisher с GitHub Клонируем репозиторий: git clone --depth=1 https://github.com/htr-tech/zphisher.git Запускаем файл zphisher.sh: cd zphisher && ./zphisher.sh При первом запуске он установит зависимости и на этом всё. Система скажет, что Zphisher установлен. После установки вам нужно будет снова запустить zphisher.sh в каталоге zphisher командой ./zphisher , и тогда вы получите что-то вроде этого: Как вы можете видеть, есть много вариантов и шаблонов, благодаря чему любой может заниматься фишингом. Мы сосредоточимся на нельзяграме. Итак, введите «2» и нажмите Enter. Следующий шаг полностью зависит от вас, выберите любой из них. Затем появится окно с выбором. Я выбрал третий вариант, так как он минималистичный и удобен для того, чтобы показать возможности инструмента. Опять же, чтобы все было просто, я пропущу пользовательский порт, но если вы уже используете порт 8080, то можете изменить его на 8000. Если нет, оставляйте всё как есть. Также важно маскировать URL, ну просто в целях безопасности. Можно использовать что‑то вроде этого: Всё, Zphisher создал фишинговую ссылку, которую можно отправить жертве. Как только она нажмёт на ссылку, вы начнёте получать информацию о ней. Например, IP‑адреса, имена пользователей, пароли и т. д. Ещё можно использовать обратный поиск IP, чтобы определить местоположение вашей цели и многое другое. Итак, вот эти фишинговые ссылки. При нажатии открывается страница, похожая на официальную страницу входа в запрещённую соцсеть. Вот она, нехорошая После ввода учётных данных можно получить много информации на «хакерской» стороне терминала. Вот так, господа и дамы, можно без особого труда взломать учетную запись в нельзяграме. Поэтому в очередной раз напоминаем: нельзя нажимать на ссылки, которым вы не доверяете. Само собой разумеется, не используйте информацию из этой статьи с намерением причинить кому-либо вред. OSINT законен, но фишинг и кража личных данных даже в запрещённой соцсети является уголовным преступлением. И да, * Организация Meta, а также её продукт Instagram, на которые мы ссылаемся в этой статье, признаны экстремистскими и запрещены на территории РФ. Спасибо за внимание! Cloud4Y #1 Корпоративный облачный провайдер Сайт Facebook Twitter ВКонтакте Telegram Что ещё интересного есть в блоге Cloud4Y → Информационная безопасность и глупость: необычные примеры → NAS за шапку сухарей → Взлом Hyundai Tucson, часть 1, часть 2 → Столетний язык программирования — какой он → 50 самых интересных клавиатур из частной коллекции Теги:  взлом, соцсети, osint Хабы:  Блог компании Cloud4Y, Информационная безопасность,  Социальные сети и сообщества  0  19  1 149 Карма 53.5 Рейтинг Cloud4Y @Cloud4Y Корпоративный облачный провайдер Сайт ВКонтакте Telegram  Комментарии 1 Публикации ЛУЧШИЕ ЗА СУТКИ ПОХОЖИЕ  ·   ·   ·   ·   ·   ·   ·   ·   ·   ·  И Н Ф О Р М А Ц И Я Сайт www.cloud4y.ru Ваш аккаунт Войти Регистрация Разделы Публикации Новости Хабы Компании Авторы Песочница Дата регистрации 29 июля 2011 Дата основания 2009 Численность 51–100 человек Местоположение Россия Представитель Информация Устройство сайта Для авторов Для компаний Документы Соглашение Конфиденциальность Услуги Корпоративный блог Медийная реклама Нативные проекты Образовательные программы Стартапам Мегапроекты Настройка языка Техническая поддержка Вернуться на старую версию © 2006–2023, Habr ",5 часов назад,"Хабы:  Блог компании Cloud4Y, Информационная безопасность,  Социальные сети и сообщества ",71.07, рейтинг   корпоративный облачный провайдер автор оригинала   взлом  ‑аккаунта популярный запрос в поисковиках поэтому есть смысл рассказать о том как это обычно работает просто для того чтобы вы знали откуда может пойти атака часов назад   как работает фишинг для нельзяграма блог компании   информационная безопасность социальные сети и сообщества обзор перевод чтобы начать попытки заполучить доступ к аккаунту вы должны знать ник человека которого вы пытаетесь взломать так что небольшая разведка будет очень кстати только не увлекайтесь существуют различные инструменты для разведки в первую очередь поиск пользователя в конкретной соцсети с целью узнать его ник я нашёл отличный инструмент под названием  который можно использовать для поиска любых учётных записей пользователя если он везде регистрируется под одним ником ставим                    я проверил  на себе и посмотрите на эти результаты некоторые из учетных записей перечисленных здесь были созданы много лет назад  это простой консольный инструмент но вы также можете использовать такие инструменты как   который совершенно бесплатен вот посмотрите я проверил  на себе мой ник  теперь когда мы знаем больше о нашем пользователе можно использовать эти знания например через отправку фишинговых ссылок для этого создадим полезную нагрузку с помощью  ставим  с  клонируем репозиторий           запускаем файл       при первом запуске он установит зависимости и на этом всё система скажет что  установлен после установки вам нужно будет снова запустить   в каталоге  командой  и тогда вы получите что то вроде этого как вы можете видеть есть много вариантов и шаблонов благодаря чему любой может заниматься фишингом мы сосредоточимся на нельзяграме итак введите и нажмите  следующий шаг полностью зависит от вас выберите любой из них затем появится окно с выбором я выбрал третий вариант так как он минималистичный и удобен для того чтобы показать возможности инструмента опять же чтобы все было просто я пропущу пользовательский порт но если вы уже используете порт то можете изменить его на если нет оставляйте всё как есть также важно маскировать  ну просто в целях безопасности можно использовать что‑то вроде этого всё  создал фишинговую ссылку которую можно отправить жертве как только она нажмёт на ссылку вы начнёте получать информацию о ней например ‑адреса имена пользователей пароли и т д ещё можно использовать обратный поиск  чтобы определить местоположение вашей цели и многое другое итак вот эти фишинговые ссылки при нажатии открывается страница похожая на официальную страницу входа в запрещённую соцсеть вот она нехорошая после ввода учётных данных можно получить много информации на хакерской стороне терминала вот так господа и дамы можно без особого труда взломать учетную запись в нельзяграме поэтому в очередной раз напоминаем нельзя нажимать на ссылки которым вы не доверяете само собой разумеется не используйте информацию из этой статьи с намерением причинить кому либо вред  законен но фишинг и кража личных данных даже в запрещённой соцсети является уголовным преступлением и да организация  а также её продукт  на которые мы ссылаемся в этой статье признаны экстремистскими и запрещены на территории рф спасибо за внимание   корпоративный облачный провайдер сайт   вконтакте  что ещё интересного есть в блоге   → информационная безопасность и глупость необычные примеры →  за шапку сухарей → взлом   часть часть → столетний язык программирования какой он → самых интересных клавиатур из частной коллекции теги взлом соцсети  хабы блог компании   информационная безопасность социальные сети и сообщества карма рейтинг     корпоративный облачный провайдер сайт вконтакте  комментарии публикации лучшие за сутки похожие · · · · · · · · · · и н ф о р м а ц и я сайт     ваш аккаунт войти регистрация разделы публикации новости хабы компании авторы песочница дата регистрации июля дата основания численность – человек местоположение россия представитель информация устройство сайта для авторов для компаний документы соглашение конфиденциальность услуги корпоративный блог медийная реклама нативные проекты образовательные программы стартапам мегапроекты настройка языка техническая поддержка вернуться на старую версию © –  ,корпоративный облачный провайдер оригинала взлом ‑аккаунта популярный запрос поисковиках поэтому смысл рассказать обычно работает просто знали откуда пойти атака часов назад работает фишинг нельзяграма компании информационная безопасность социальные сети сообщества обзор перевод начать попытки заполучить доступ аккаунту должны знать ник человека которого пытаетесь взломать небольшая разведка очень кстати увлекайтесь существуют различные инструменты разведки первую очередь поиск пользователя конкретной соцсети целью узнать ник нашёл отличный инструмент названием который поиска любых учётных записей пользователя везде регистрируется одним ником ставим проверил посмотрите результаты некоторые учетных записей перечисленных созданы назад простой консольный инструмент также можете такие инструменты который совершенно бесплатен посмотрите проверил ник знаем нашем пользователе знания например отправку фишинговых ссылок создадим полезную нагрузку ставим клонируем репозиторий запускаем первом запуске установит зависимости всё система скажет установлен установки нужно снова запустить каталоге командой получите вроде можете видеть вариантов шаблонов благодаря чему любой заниматься фишингом сосредоточимся нельзяграме итак введите нажмите следующий шаг полностью зависит выберите любой затем появится окно выбором выбрал третий вариант минималистичный удобен показать возможности инструмента просто пропущу пользовательский порт используете порт можете изменить оставляйте всё также важно маскировать просто целях безопасности что‑то вроде всё создал фишинговую ссылку которую отправить жертве нажмёт ссылку начнёте получать информацию например ‑адреса имена пользователей пароли т д ещё обратный поиск определить местоположение вашей цели многое другое итак фишинговые ссылки нажатии открывается страница похожая официальную страницу входа запрещённую соцсеть нехорошая ввода учётных информации хакерской стороне терминала господа дамы особого труда взломать учетную запись нельзяграме поэтому очередной напоминаем нажимать ссылки которым доверяете само собой разумеется используйте информацию намерением причинить кому вред законен фишинг кража личных запрещённой соцсети уголовным преступлением организация также её продукт которые ссылаемся статье признаны экстремистскими запрещены территории рф спасибо внимание корпоративный облачный провайдер сайт вконтакте ещё интересного блоге → информационная безопасность глупость необычные → шапку сухарей → взлом часть часть → столетний язык программирования → самых интересных клавиатур частной коллекции теги взлом соцсети компании информационная безопасность социальные сети сообщества корпоративный облачный провайдер сайт вконтакте публикации лучшие сутки похожие · · · · · · · · · · н ф р м ц сайт ваш аккаунт войти регистрация разделы публикации новости компании авторы песочница дата регистрации июля дата основания численность – человек местоположение россия представитель информация устройство сайта авторов компаний документы соглашение конфиденциальность услуги корпоративный медийная реклама нативные проекты образовательные программы стартапам мегапроекты настройка языка техническая поддержка вернуться старую версию © –,корпоративн облачн провайдер оригина взлом ‑аккаунт популярн запрос поисковик поэт смысл рассказа обычн работа прост знал откуд пойт атак час назад работа фишинг нельзяграм компан информацион безопасн социальн сет сообществ обзор перевод нача попытк заполуч доступ аккаунт должн знат ник человек котор пыта взлома небольш разведк очен кстат увлека существ различн инструмент разведк перв очеред поиск пользовател конкретн соцсет цел узна ник нашел отличн инструмент назван котор поиск люб учетн запис пользовател везд регистрир одн ник став провер посмотр результат некотор учетн запис перечислен созда назад прост консольн инструмент такж может так инструмент котор совершен бесплат посмотр провер ник зна наш пользовател знан например отправк фишингов ссылок создад полезн нагрузк став клониру репозитор запуска перв запуск установ зависим все систем скажет установл установк нужн снов запуст каталог команд получ врод может видет вариант шаблон благодар чем люб занима фишинг сосредоточ нельзяграм итак введ нажм след шаг полност завис выбер люб зат появ окн выбор выбра трет вариант минималистичн удоб показа возможн инструмент прост пропущ пользовательск порт использует порт может измен оставля все такж важн маскирова прост цел безопасн что‑т врод все созда фишингов ссылк котор отправ жертв нажмет ссылк начнет получа информац например ‑адрес им пользовател парол т д ещ обратн поиск определ местоположен ваш цел мног друг итак фишингов ссылк нажат открыва страниц похож официальн страниц вход запрещен соцсет нехорош ввод учетн информац хакерск сторон термина господ дам особ труд взлома учетн зап нельзяграм поэт очередн напомина нажима ссылк котор доверя сам соб разумеет использ информац намерен причин ком вред закон фишинг краж личн запрещен соцсет уголовн преступлен организац такж е продукт котор ссыла стат призна экстремистск запрещ территор рф спасиб вниман корпоративн облачн провайдер сайт вконтакт ещ интересн блог → информацион безопасн глупост необычн → шапк сухар → взлом част част → столетн язык программирован → сам интересн клавиатур частн коллекц тег взлом соцсет компан информацион безопасн социальн сет сообществ корпоративн облачн провайдер сайт вконтакт публикац лучш сутк похож · · · · · · · · · · н ф р м ц сайт ваш аккаунт войт регистрац раздел публикац новост компан автор песочниц дат регистрац июл дат основан числен – человек местоположен росс представител информац устройств сайт автор компан документ соглашен конфиденциальн услуг корпоративн медийн реклам нативн проект образовательн программ стартап мегапроект настройк язык техническ поддержк вернут стар верс © –,корпоративный облачный провайдер оригинал взлом ‑аккаунт популярный запрос поисковик поэтому смысл рассказать обычно работать просто знать откуда пойти атака час назад работать фишинга нельзяграм компания информационный безопасность социальный сеть сообщество обзор перевод начать попытка заполучить доступ аккаунт должный знать ник человек который пытаться взломать небольшой разведка очень кстати увлекаться существовать различный инструмент разведка первый очередь поиск конкретный соцсеть цель узнать ник отличный инструмент название который поиск любой учётный запись везде регистрироваться ник ставить проверить посмотреть результат некоторый учётный запись перечисленный назад простой консольный инструмент также мочь инструмент который совершенно бесплатный посмотреть проверить ник знать наш знание например отправка фишинговый полезный нагрузка ставить клонировать репозиторий запускать первый запуск установить зависимость всё система сказать установить установка нужно снова запустить каталог команда вроде мочь видеть вариант шаблон благодаря любой заниматься фишинг сосредоточиться нельзяграм итак ввести нажать следующий шаг полностью зависеть выбрать любой затем появиться окно выбор выбрать третий вариант минималистичный удобный показать возможность инструмент просто пропустить пользовательский порт порт мочь изменить оставлять всё также важно маскировать просто цель безопасность что‑тый вроде всё фишинговый который отправить жертва нажать начать получать информация например ‑адрес имя пароль далее ещё обратный поиск определить местоположение ваш цель многое итак фишинговый нажатие открываться страница похожий официальный страница вход запретить соцсеть нехороший ввод учётный информация хакерский сторона терминал господин дама особый труд взломать учётный запись нельзяграм поэтому очередной напоминать нажимать который доверять разумеется информация намерение причинить вред законный фишинга кража личный запретить соцсеть уголовный преступление организация также её продукт который ссылаться признать экстремистский запретить территория рф спасибо внимание корпоративный облачный провайдер сайт вконтакте ещё интересный → информационный безопасность глупость необычный → шапка сухарь → взлом часть часть → столетний язык программирование → самый интересный клавиатура частный коллекция тег взлом соцсеть компания информационный безопасность социальный сеть сообщество корпоративный облачный провайдер сайт вконтакте публикация хороший сутки похожий · · · · · · · · · · н ф р м ц сайт ваш аккаунт войти регистрация раздел публикация новость компания песочница дата регистрация июль дата основание численность – человек местоположение россия представитель информация устройство сайт компания документ соглашение конфиденциальность услуга корпоративный медийный реклама нативный образовательный стартап мегапроект настройка язык технический поддержка вернуться старый © –,0
2,OSINT & Hacking — как работает фишинг для нельзяграма,"71.07 Рейтинг Cloud4Y #1 Корпоративный облачный провайдер Автор оригинала: Yashwant Singh Взлом Instagram*аккаунта — популярный запрос в поисковиках. Поэтому есть смысл рассказать о том, как это обычно работает. Просто для того, чтобы вы знали, откуда может пойти атака.  5 часов назад  Cloud4Y OSINT & Hacking — как работает фишинг для нельзяграма 1100 Блог компании Cloud4Y ,  Информационная безопасность* ,  Социальные сети и сообщест Обзор Перевод  Чтобы начать попытки заполучить доступ к аккаунту, вы должны знать ник человека, которого вы пытаетесь взломать. Так что небольшая разведка будет очень кстати. Только не увлекайтесь. Существуют различные инструменты для разведки, в первую очередь, поиск пользователя в конкретной соцсети с целью узнать его ник. Я нашёл отличный инструмент под названием «Slash», который можно использовать для поиска любых учётных записей пользователя, если он везде регистрируется под одним ником. Ставим Slash Я проверил Slash на себе, и посмотрите на эти результаты. Некоторые из учетных записей, перечисленных здесь, были созданы много лет назад. git clone https://github.com/theahmadov/slash  cd slash  pip install -r requirements.txt  python slash.py help Slash — это простой консольный инструмент. Но вы также можете использовать такие инструменты, как WhatsMyName Web, который совершенно бесплатен. Вот, посмотрите. Я проверил WhatsMyName на себе. Мой ник «earthtoyash». Теперь, когда мы знаем больше о нашем пользователе, можно использовать эти знания. Например, через отправку фишинговых ссылок. Для этого создадим полезную нагрузку с помощью Zphisher. Ставим Zphisher с GitHub Клонируем репозиторий: Запускаем файл zphisher.sh: При первом запуске он установит зависимости и на этом всё. Система скажет, что Zphisher установлен. После установки вам нужно будет снова запустить zphisher.sh в каталоге zphisher командой ./zphisher , и тогда вы получите что-то вроде этого: git clone --depth=1 https://github.com/htr-tech/zphisher.git cd zphisher && ./zphisher.sh Как вы можете видеть, есть много вариантов и шаблонов, благодаря чему любой может заниматься фишингом. Мы сосредоточимся на нельзяграме. Итак, введите «2» и нажмите Enter. Следующий шаг полностью зависит от вас, выберите любой из них. Затем появится окно с выбором. Я выбрал третий вариант, так как он минималистичный и удобен для того, чтобы показать возможности инструмента. Опять же, чтобы все было просто, я пропущу пользовательский порт, но если вы уже используете порт 8080, то можете изменить его на 8000. Если нет, оставляйте всё как есть. Также важно маскировать URL, ну просто в целях безопасности. Можно использовать чтото вроде этого: Всё, Zphisher создал фишинговую ссылку, которую можно отправить жертве. Как только она нажмёт на ссылку, вы начнёте получать информацию о ней. Например, IPадреса, имена пользователей, пароли и т. д. Ещё можно использовать обратный поиск IP, чтобы определить местоположение вашей цели и многое другое. Итак, вот эти фишинговые ссылки. При нажатии открывается страница, похожая на официальную страницу входа в запрещённую соцсеть. Вот она, нехорошая После ввода учётных данных можно получить много информации на «хакерской» стороне терминала. Вот так, господа и дамы, можно без особого труда взломать учетную запись в нельзяграме. Поэтому в очередной раз напоминаем: нельзя нажимать на ссылки, которым вы не доверяете. Само собой разумеется, не используйте информацию из этой статьи с намерением причинить кому-либо вред. OSINT законен, но фишинг и кража личных данных даже в запрещённой соцсети является уголовным преступлением. И да, * Организация Meta, а также её продукт Instagram, на которые мы ссылаемся в этой статье, признаны экстремистскими и запрещены на территории РФ. Спасибо за внимание! Что ещё интересного есть в блоге Cloud4Y → Информационная безопасность и глупость: необычные примеры → NAS за шапку сухарей → Взлом Hyundai Tucson, часть 1, часть 2 → Столетний язык программирования — какой он → 50 самых интересных клавиатур из частной коллекции Теги:   взлом , соцсети , osint Хабы:   Блог компании Cloud4Y , Информационная безопасность , Социальные сети и сообщества 0 19 1 Cloud4Y #1 Корпоративный облачный провайдер Сайт Facebook Twitter ВКонтакте Telegram 149 Карма 53.5 Рейтинг Cloud4Y @Cloud4Y Корпоративный облачный провайдер Сайт ВКонтакте Telegram Комментарии 1 Публикации ЛУЧШИЕ ЗА СУТКИ  ПОХОЖИЕ  ·   ·   ·   ·   ·   ·   ·   ·   ·   ·  Ваш аккаунт Войти Регистрация Разделы Публикации Новости Хабы Компании Авторы Песочница Информация Устройство сайта Для авторов Для компаний Документы Соглашение Конфиденциальность Услуги Корпоративный блог Медийная реклама Нативные проекты Образовательные программы Стартапам Мегапроекты ИНФОРМАЦИЯ Сайт www.cloud4y.ru Дата регистрации 29 июля 2011 Дата основания 2009 Численность 51–100 человек Местоположение Россия Представитель Настройка языка Техническая поддержка Вернуться на старую версию © 2006–2023, Habr ",5 часов назад,"Хабы:   Блог компании Cloud4Y , Информационная безопасность , Социальные сети и сообщества ",71.07, рейтинг   корпоративный облачный провайдер автор оригинала   взлом  аккаунта популярный запрос в поисковиках поэтому есть смысл рассказать о том как это обычно работает просто для того чтобы вы знали откуда может пойти атака часов назад     как работает фишинг для нельзяграма блог компании   информационная безопасность социальные сети и сообщест обзор перевод чтобы начать попытки заполучить доступ к аккаунту вы должны знать ник человека которого вы пытаетесь взломать так что небольшая разведка будет очень кстати только не увлекайтесь существуют различные инструменты для разведки в первую очередь поиск пользователя в конкретной соцсети с целью узнать его ник я нашёл отличный инструмент под названием  который можно использовать для поиска любых учётных записей пользователя если он везде регистрируется под одним ником ставим  я проверил  на себе и посмотрите на эти результаты некоторые из учетных записей перечисленных здесь были созданы много лет назад                    это простой консольный инструмент но вы также можете использовать такие инструменты как   который совершенно бесплатен вот посмотрите я проверил  на себе мой ник  теперь когда мы знаем больше о нашем пользователе можно использовать эти знания например через отправку фишинговых ссылок для этого создадим полезную нагрузку с помощью  ставим  с  клонируем репозиторий запускаем файл   при первом запуске он установит зависимости и на этом всё система скажет что  установлен после установки вам нужно будет снова запустить   в каталоге  командой  и тогда вы получите что то вроде этого               как вы можете видеть есть много вариантов и шаблонов благодаря чему любой может заниматься фишингом мы сосредоточимся на нельзяграме итак введите и нажмите  следующий шаг полностью зависит от вас выберите любой из них затем появится окно с выбором я выбрал третий вариант так как он минималистичный и удобен для того чтобы показать возможности инструмента опять же чтобы все было просто я пропущу пользовательский порт но если вы уже используете порт то можете изменить его на если нет оставляйте всё как есть также важно маскировать  ну просто в целях безопасности можно использовать чтото вроде этого всё  создал фишинговую ссылку которую можно отправить жертве как только она нажмёт на ссылку вы начнёте получать информацию о ней например ipадреса имена пользователей пароли и т д ещё можно использовать обратный поиск  чтобы определить местоположение вашей цели и многое другое итак вот эти фишинговые ссылки при нажатии открывается страница похожая на официальную страницу входа в запрещённую соцсеть вот она нехорошая после ввода учётных данных можно получить много информации на хакерской стороне терминала вот так господа и дамы можно без особого труда взломать учетную запись в нельзяграме поэтому в очередной раз напоминаем нельзя нажимать на ссылки которым вы не доверяете само собой разумеется не используйте информацию из этой статьи с намерением причинить кому либо вред  законен но фишинг и кража личных данных даже в запрещённой соцсети является уголовным преступлением и да организация  а также её продукт  на которые мы ссылаемся в этой статье признаны экстремистскими и запрещены на территории рф спасибо за внимание что ещё интересного есть в блоге   → информационная безопасность и глупость необычные примеры →  за шапку сухарей → взлом   часть часть → столетний язык программирования какой он → самых интересных клавиатур из частной коллекции теги взлом соцсети  хабы блог компании   информационная безопасность социальные сети и сообщества   корпоративный облачный провайдер сайт   вконтакте  карма рейтинг     корпоративный облачный провайдер сайт вконтакте  комментарии публикации лучшие за сутки похожие · · · · · · · · · · ваш аккаунт войти регистрация разделы публикации новости хабы компании авторы песочница информация устройство сайта для авторов для компаний документы соглашение конфиденциальность услуги корпоративный блог медийная реклама нативные проекты образовательные программы стартапам мегапроекты информация сайт     дата регистрации июля дата основания численность – человек местоположение россия представитель настройка языка техническая поддержка вернуться на старую версию © –  ,корпоративный облачный провайдер оригинала взлом аккаунта популярный запрос поисковиках поэтому смысл рассказать обычно работает просто знали откуда пойти атака часов назад работает фишинг нельзяграма компании информационная безопасность социальные сети сообщест обзор перевод начать попытки заполучить доступ аккаунту должны знать ник человека которого пытаетесь взломать небольшая разведка очень кстати увлекайтесь существуют различные инструменты разведки первую очередь поиск пользователя конкретной соцсети целью узнать ник нашёл отличный инструмент названием который поиска любых учётных записей пользователя везде регистрируется одним ником ставим проверил посмотрите результаты некоторые учетных записей перечисленных созданы назад простой консольный инструмент также можете такие инструменты который совершенно бесплатен посмотрите проверил ник знаем нашем пользователе знания например отправку фишинговых ссылок создадим полезную нагрузку ставим клонируем репозиторий запускаем первом запуске установит зависимости всё система скажет установлен установки нужно снова запустить каталоге командой получите вроде можете видеть вариантов шаблонов благодаря чему любой заниматься фишингом сосредоточимся нельзяграме итак введите нажмите следующий шаг полностью зависит выберите любой затем появится окно выбором выбрал третий вариант минималистичный удобен показать возможности инструмента просто пропущу пользовательский порт используете порт можете изменить оставляйте всё также важно маскировать просто целях безопасности чтото вроде всё создал фишинговую ссылку которую отправить жертве нажмёт ссылку начнёте получать информацию например ipадреса имена пользователей пароли т д ещё обратный поиск определить местоположение вашей цели многое другое итак фишинговые ссылки нажатии открывается страница похожая официальную страницу входа запрещённую соцсеть нехорошая ввода учётных информации хакерской стороне терминала господа дамы особого труда взломать учетную запись нельзяграме поэтому очередной напоминаем нажимать ссылки которым доверяете само собой разумеется используйте информацию намерением причинить кому вред законен фишинг кража личных запрещённой соцсети уголовным преступлением организация также её продукт которые ссылаемся статье признаны экстремистскими запрещены территории рф спасибо внимание ещё интересного блоге → информационная безопасность глупость необычные → шапку сухарей → взлом часть часть → столетний язык программирования → самых интересных клавиатур частной коллекции теги взлом соцсети компании информационная безопасность социальные сети сообщества корпоративный облачный провайдер сайт вконтакте корпоративный облачный провайдер сайт вконтакте публикации лучшие сутки похожие · · · · · · · · · · ваш аккаунт войти регистрация разделы публикации новости компании авторы песочница информация устройство сайта авторов компаний документы соглашение конфиденциальность услуги корпоративный медийная реклама нативные проекты образовательные программы стартапам мегапроекты информация сайт дата регистрации июля дата основания численность – человек местоположение россия представитель настройка языка техническая поддержка вернуться старую версию © –,корпоративн облачн провайдер оригина взлом аккаунт популярн запрос поисковик поэт смысл рассказа обычн работа прост знал откуд пойт атак час назад работа фишинг нельзяграм компан информацион безопасн социальн сет сообщест обзор перевод нача попытк заполуч доступ аккаунт должн знат ник человек котор пыта взлома небольш разведк очен кстат увлека существ различн инструмент разведк перв очеред поиск пользовател конкретн соцсет цел узна ник нашел отличн инструмент назван котор поиск люб учетн запис пользовател везд регистрир одн ник став провер посмотр результат некотор учетн запис перечислен созда назад прост консольн инструмент такж может так инструмент котор совершен бесплат посмотр провер ник зна наш пользовател знан например отправк фишингов ссылок создад полезн нагрузк став клониру репозитор запуска перв запуск установ зависим все систем скажет установл установк нужн снов запуст каталог команд получ врод может видет вариант шаблон благодар чем люб занима фишинг сосредоточ нельзяграм итак введ нажм след шаг полност завис выбер люб зат появ окн выбор выбра трет вариант минималистичн удоб показа возможн инструмент прост пропущ пользовательск порт использует порт может измен оставля все такж важн маскирова прост цел безопасн чтот врод все созда фишингов ссылк котор отправ жертв нажмет ссылк начнет получа информац например ипадрес им пользовател парол т д ещ обратн поиск определ местоположен ваш цел мног друг итак фишингов ссылк нажат открыва страниц похож официальн страниц вход запрещен соцсет нехорош ввод учетн информац хакерск сторон термина господ дам особ труд взлома учетн зап нельзяграм поэт очередн напомина нажима ссылк котор доверя сам соб разумеет использ информац намерен причин ком вред закон фишинг краж личн запрещен соцсет уголовн преступлен организац такж е продукт котор ссыла стат призна экстремистск запрещ территор рф спасиб вниман ещ интересн блог → информацион безопасн глупост необычн → шапк сухар → взлом част част → столетн язык программирован → сам интересн клавиатур частн коллекц тег взлом соцсет компан информацион безопасн социальн сет сообществ корпоративн облачн провайдер сайт вконтакт корпоративн облачн провайдер сайт вконтакт публикац лучш сутк похож · · · · · · · · · · ваш аккаунт войт регистрац раздел публикац новост компан автор песочниц информац устройств сайт автор компан документ соглашен конфиденциальн услуг корпоративн медийн реклам нативн проект образовательн программ стартап мегапроект информац сайт дат регистрац июл дат основан числен – человек местоположен росс представител настройк язык техническ поддержк вернут стар верс © –,корпоративный облачный провайдер оригинал взлом аккаунт популярный запрос поисковик поэтому смысл рассказать обычно работать просто знать откуда пойти атака час назад работать фишинга нельзяграм компания информационный безопасность социальный сеть сообщесть обзор перевод начать попытка заполучить доступ аккаунт должный знать ник человек который пытаться взломать небольшой разведка очень кстати увлекаться существовать различный инструмент разведка первый очередь поиск конкретный соцсеть цель узнать ник отличный инструмент название который поиск любой учётный запись везде регистрироваться ник ставить проверить посмотреть результат некоторый учётный запись перечисленный назад простой консольный инструмент также мочь инструмент который совершенно бесплатный посмотреть проверить ник знать наш знание например отправка фишинговый полезный нагрузка ставить клонировать репозиторий запускать первый запуск установить зависимость всё система сказать установить установка нужно снова запустить каталог команда вроде мочь видеть вариант шаблон благодаря любой заниматься фишинг сосредоточиться нельзяграм итак ввести нажать следующий шаг полностью зависеть выбрать любой затем появиться окно выбор выбрать третий вариант минималистичный удобный показать возможность инструмент просто пропустить пользовательский порт порт мочь изменить оставлять всё также важно маскировать просто цель безопасность чтоть вроде всё фишинговый который отправить жертва нажать начать получать информация например ipадрес имя пароль далее ещё обратный поиск определить местоположение ваш цель многое итак фишинговый нажатие открываться страница похожий официальный страница вход запретить соцсеть нехороший ввод учётный информация хакерский сторона терминал господин дама особый труд взломать учётный запись нельзяграм поэтому очередной напоминать нажимать который доверять разумеется информация намерение причинить вред законный фишинга кража личный запретить соцсеть уголовный преступление организация также её продукт который ссылаться признать экстремистский запретить территория рф спасибо внимание ещё интересный → информационный безопасность глупость необычный → шапка сухарь → взлом часть часть → столетний язык программирование → самый интересный клавиатура частный коллекция тег взлом соцсеть компания информационный безопасность социальный сеть сообщество корпоративный облачный провайдер сайт вконтакте корпоративный облачный провайдер сайт вконтакте публикация хороший сутки похожий · · · · · · · · · · ваш аккаунт войти регистрация раздел публикация новость компания песочница информация устройство сайт компания документ соглашение конфиденциальность услуга корпоративный медийный реклама нативный образовательный стартап мегапроект информация сайт дата регистрация июль дата основание численность – человек местоположение россия представитель настройка язык технический поддержка вернуться старый © –,0
3,Быстрое начало работы с Gitlab CI/CD: пайплайн для веб-сайта на AWS S3 Bucket,"4.29 Оценка 280.79 Рейтинг Southbridge Обеспечиваем стабильную работу highload-проектов Автор оригинала: Seifeldin Mahjoub Перевели статью о создании пайплайна для развертывания статического веб-сайта на AWS S3 Bucket на примере Gitlab CI/CD, чтобы быстро вникнуть в основы технологии и начать применять ее в работе. В статье рассматриваются базовые концепции CI и CD, а также этапы CI/CD-пайплайна.  2 часа назад   Быстрое начало работы с Gitlab CI/CD: пайплайн для веб-сайта на AWS S3 Bucket 362 Блог компании Southbridge ,  Тестирование IT-систем* ,  Системное администрирование* ,  Туториал Перевод  От автора Мне повезло быть частью некоторых профессиональных команд, каждая из которых применяла несколько DevOps практик. И меня поразило то, как качество кода, скорость разработки и позитивный настрой команды коррелируют с CI/CD-пайплайном. По моему мнению, зрелость пайплайна может служить прекрасным показателем опытности разработчика, качества кода и эффективности всей команды. Во многих случаях, которые я наблюдал, пайплайны были выстроены либо DevOps-инженером, либо отдельной DevOps- командой. Да и последний отчет State of CD 2022 продемонстрировал, что только 22% разработчиков создают пайплайны. Моя цель — увеличить это число: помочь разработчикам взять на себя ответственность за пайплайны, выстраивать непрерывный процесс доставки и создавать качественный код. В статье рассматриваются фундаментальные концепции CI и CD. Что такое CI/CD? Многие бизнесы применяют фреймворки Agile, так как они позволяют менять приоритеты и повышать скорость доставки. Кроме всего прочего, такой подход улучшает атмосферу в команде и помогает увеличить прибыль. Если ваша компания следует по пути Agile, то принятие культуры, философии и практик DevOps станет ее большим преимуществом. Модное словечко последних десятилетий, DevOps сегодня считается настоящим стандартом индустрии. CI/CD — это практика DevOps, которая помогает разработчикам ПО доставлять изменения в коде с высокой частотой и надежностью. «Быстрый билд, быстрый тест, быстрый фейл» При наличии автоматизированных тестов команды тяготеют к общей автоматизации задач и частым, надежным поставкам кода. Создание CI/CD-пайплайна в этом случае может привести к нескольким преимуществам. Бизнес выигрывает от снижения затрат и повышения производительности, ускорения Time to Market и адаптации к изменяющимся требованиям рынка. Команда выигрывает от быстрой обратной связи, улучшения эффективности разработки, уменьшения количества бутылочных горлышек и повышения уровня вовлеченности и удовлетворенности сотрудников. Фазы CI и CD CI — непрерывная интеграция. Непрерывная интеграция позволяет по много раз в день коммитить изменения в основную ветку вашей кодовой базы. Учитывая ограниченные когнитивные способности человека, CI стимулирует разработчиков вносить в код небольшие изменения, которые легче рассмотреть, покрыть автоматическими тестами и часто релизить. Это позволяет избежать напряженных и переполненных merge conflict-ами дней подготовки к релизу с тоннами ручного тестирования. CD — непрерывная доставка. Следующий шаг после CI позволяет гарантировать, что кодовая база постоянно готова к деплою, а задеплоить ее можно одним нажатием кнопки. При этом неважно, с чем вы работаете: с масштабной распределенной системой, сложной производственной средой и т. д. Ключевой момент — автоматизация. CD — непрерывное развертывание. Последний этап зрелого CI/CD-пайплайна, где все изменения в коде автоматически развертываются в продакшн без ручного вмешательства. Само собой, для этого требуется большое количество хорошо продуманных автоматических тестов. State of CD 2022 утверждает, что «47% разработчиков применяют CI или СD, но только один из пяти использует оба подхода для автоматизации сборки, тестирования и развертывания кода». Книга Accelerate подводит итоги многолетнего исследования с использованием отчетов State of DevOps, основанных на 23 000 наборов данных компаний по всему миру. Как видите, высокопроизводительные команды могут деплоить по требованию (или несколько раз в день). Этапы CI/CD-пайплайна Стадия исходного кода — здесь запускается пайплайн. Обычно это происходит после изменений в Git-репозитории, которые проявляются в открытии нового Pull Request-а или в пуше в ветку. Другой способ заключается в настройке инструментария CI/CD для запуска пайплайна через автоматическое расписание или после запуска другого пайплайна. Стадия сборки — этап, в процессе которого происходит проверка и сборка кода. Здесь особенно полезны такие инструменты, как Docker: они обеспечивают однородную среду. Стадия тестирования — CI/CD невозможно представить без автоматизированных тестов. В конце концов, все хотят быть уверены, что изменения в коде не сломают продакшн. Стадия развертывания — на последнем этапе (после успешного прохождения всех предыдущих стадий) код можно развернуть в выбранной среде. Пример с Gitlab В этом примере будет использован Gitlab CI/CD, однако концепции аналогичны и для остальных инструментов, поэтому их можно применить к другим сервисам хостинга репозиториев. Существует несколько инструментов CI/CD, например всемирно известный Jenkins. Этот инструмент требует некоторой настройки и конфигурации, в то время как другие поставляются сервисами хостинга репозиториев (такими как GitHub Actions и Bitbucket Pipelines) с предварительной настройкой. Поэтому если ваш код размещен на Gitlab, то легче всего использовать Gitlab CI/CD, поскольку код и управление CI/CD находятся на одной платформе. Как все это может работать без настроек? Для ответа на этот вопрос стоит немного погрузиться в архитектуру Gitlab, а именно — в инстансы и раннеры. Инстансы хранят код приложения и конфигурации пайплайна. Раннеры выступают в качестве агентов, выполняющих операции в пайплайнах. В Gitlab каждый инстанс может быть подключен к одному или нескольким раннерам. Gitlab.com — это управляемый инстанс с несколькими раннерами, которые сам Gitlab и поддерживает. Следовательно, если вы используете этот инстанс, то получаете все необходимое из коробки. Приступим к работе Gitlab предлагает несколько шаблонов при создании нового проекта. Конфигурация пайплайна Gitlab CI/CD по умолчанию находится в файле .gitlab-ci.yml в корневом каталоге. Предположим, мы хотим создать простой пайплайн, который проверяет: написан, протестирован и развернут ли код. Вот несколько концепций и терминов для ознакомления перед началом работы. Пайплайн (Pipeline) Пайплайн — это набор заданий, разделенных на этапы. Gitlab предлагает различные типы пайплайнов, например parent-child или multi-project. Полный список см. здесь. Этап (Stage) Этап — это шаг в пайплайне, предоставляющий информацию о том, какие задания запускать (сборка, тестирование и т. д.). Один этап может включать одно или несколько заданий. Задание (Job) Задание — основной блок пайплайна (компиляция, линтинг и т. д.). Для каждого задания должны быть определены name и script. После выполнения всех заданий на этапе пайплайн переходит к следующему. Теперь — к коду Выстраиваем пайплайн Gitlab CI/CD, который собирает, тестирует и разворачивает статический веб-сайт в AWS S3 Bucket. Для начала создадим новый .gitlab-ci.yml 1. Определим переменные 2. Определим этапы 3. Определим задания на каждом этапе variables: # variabiles definitions for easier reuse of valu  CI_NODE_IMAGE: ""node:16.13.2"" # Pipeline stages stages:  - install  - build  - test  - deploy #install job definition install:  stage: install  image: ""$CI_NODE_IMAGE"" # variable reference  script: # Shell script that is executed by the runner.    - npm ci  cache: # List of files that should be cached between subseq    key:      files:        - package.json        - package-lock.json    paths: # directories to cache      - node_modules # Build Job definition На этом все, спасибо за внимание. Научиться работать с пайплайнами, билдами и артефактами можно на курсе Gitlab CI/CD в Слёрм. Вы узнаете, из чего состоит Gitlab и какие у него возможности и настройки, а также разберете лучшие практики построения пайплайна, особенности шаблонизации и работы с переменными. build:  stage: build  image: $CI_NODE_IMAGE  script:    - npm run build  artifacts: # list of files and directories that are attache    paths:      - dist/  cache:    key:      files:        - package.json        - package-lock.json    paths:      - node_modules    policy: pull # Test Job definition test:  stage: test  image: $CI_NODE_IMAGE  script:    - npm run test # Deploy Job definition deploy:  stage: deploy  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base  script:    - aws s3 cp --recursive dist s3://bucket-name # copies th Southbridge Обеспечиваем стабильную работу highload-проектов Сайт Сайт 14 Карма 16.9 Рейтинг Лиза Зубарькова @ Пользователь Комментировать Публикации Видеокурс доступен всегда. Посмотреть программу: https://slurm.club/3JUKdzT Теги:   ci/cd , gitlab-ci , aws , gitlab , pipeline Хабы:   Блог компании Southbridge , Тестирование IT-систем , Системное администрирование , Программирование , DevOps 7 14 0 ЛУЧШИЕ ЗА СУТКИ  ПОХОЖИЕ Ваш аккаунт Разделы Информация Услуги  ·   ·   ·   ·   ·   ·   ·   ·   ·   ·  ИНФОРМАЦИЯ Сайт southbridge.io Дата регистрации 15 ноября 2012 Дата основания 22 февраля 2008 Численность 51–100 человек Местоположение Россия Представитель Антон Скобин Войти Регистрация Публикации Новости Хабы Компании Авторы Песочница Устройство сайта Для авторов Для компаний Документы Соглашение Конфиденциальность Корпоративный блог Медийная реклама Нативные проекты Образовательные программы Стартапам Мегапроекты Настройка языка Техническая поддержка Вернуться на старую версию © 2006–2023, Habr ",2 часа назад,"Хабы:   Блог компании Southbridge , Тестирование IT-систем , Системное администрирование , Программирование , DevOps ",280.79, оценка рейтинг  обеспечиваем стабильную работу  проектов автор оригинала   перевели статью о создании пайплайна для развертывания статического веб сайта на    на примере    чтобы быстро вникнуть в основы технологии и начать применять ее в работе в статье рассматриваются базовые концепции  и  а также этапы   пайплайна часа назад быстрое начало работы с    пайплайн для веб сайта на    блог компании  тестирование  систем системное администрирование туториал перевод от автора мне повезло быть частью некоторых профессиональных команд каждая из которых применяла несколько  практик и меня поразило то как качество кода скорость разработки и позитивный настрой команды коррелируют с   пайплайном по моему мнению зрелость пайплайна может служить прекрасным показателем опытности разработчика качества кода и эффективности всей команды во многих случаях которые я наблюдал пайплайны были выстроены либо  инженером либо отдельной  командой да и последний отчет    продемонстрировал что только разработчиков создают пайплайны моя цель увеличить это число помочь разработчикам взять на себя ответственность за пайплайны выстраивать непрерывный процесс доставки и создавать качественный код в статье рассматриваются фундаментальные концепции  и  что такое   многие бизнесы применяют фреймворки  так как они позволяют менять приоритеты и повышать скорость доставки кроме всего прочего такой подход улучшает атмосферу в команде и помогает увеличить прибыль если ваша компания следует по пути  то принятие культуры философии и практик  станет ее большим преимуществом модное словечко последних десятилетий  сегодня считается настоящим стандартом индустрии   это практика  которая помогает разработчикам по доставлять изменения в коде с высокой частотой и надежностью быстрый билд быстрый тест быстрый фейл при наличии автоматизированных тестов команды тяготеют к общей автоматизации задач и частым надежным поставкам кода создание   пайплайна в этом случае может привести к нескольким преимуществам бизнес выигрывает от снижения затрат и повышения производительности ускорения    и адаптации к изменяющимся требованиям рынка команда выигрывает от быстрой обратной связи улучшения эффективности разработки уменьшения количества бутылочных горлышек и повышения уровня вовлеченности и удовлетворенности сотрудников фазы  и   непрерывная интеграция непрерывная интеграция позволяет по много раз в день коммитить изменения в основную ветку вашей кодовой базы учитывая ограниченные когнитивные способности человека  стимулирует разработчиков вносить в код небольшие изменения которые легче рассмотреть покрыть автоматическими тестами и часто релизить это позволяет избежать напряженных и переполненных   ами дней подготовки к релизу с тоннами ручного тестирования  непрерывная доставка следующий шаг после  позволяет гарантировать что кодовая база постоянно готова к деплою а задеплоить ее можно одним нажатием кнопки при этом неважно с чем вы работаете с масштабной распределенной системой сложной производственной средой и т д ключевой момент автоматизация  непрерывное развертывание последний этап зрелого   пайплайна где все изменения в коде автоматически развертываются в продакшн без ручного вмешательства само собой для этого требуется большое количество хорошо продуманных автоматических тестов    утверждает что разработчиков применяют  или сd но только один из пяти использует оба подхода для автоматизации сборки тестирования и развертывания кода книга  подводит итоги многолетнего исследования с использованием отчетов    основанных на наборов данных компаний по всему миру как видите высокопроизводительные команды могут деплоить по требованию или несколько раз в день этапы   пайплайна стадия исходного кода здесь запускается пайплайн обычно это происходит после изменений в  репозитории которые проявляются в открытии нового   а или в пуше в ветку другой способ заключается в настройке инструментария   для запуска пайплайна через автоматическое расписание или после запуска другого пайплайна стадия сборки этап в процессе которого происходит проверка и сборка кода здесь особенно полезны такие инструменты как  они обеспечивают однородную среду стадия тестирования   невозможно представить без автоматизированных тестов в конце концов все хотят быть уверены что изменения в коде не сломают продакшн стадия развертывания на последнем этапе после успешного прохождения всех предыдущих стадий код можно развернуть в выбранной среде пример с  в этом примере будет использован    однако концепции аналогичны и для остальных инструментов поэтому их можно применить к другим сервисам хостинга репозиториев существует несколько инструментов   например всемирно известный  этот инструмент требует некоторой настройки и конфигурации в то время как другие поставляются сервисами хостинга репозиториев такими как   и   с предварительной настройкой поэтому если ваш код размещен на  то легче всего использовать    поскольку код и управление   находятся на одной платформе как все это может работать без настроек для ответа на этот вопрос стоит немного погрузиться в архитектуру  а именно в инстансы и раннеры инстансы хранят код приложения и конфигурации пайплайна раннеры выступают в качестве агентов выполняющих операции в пайплайнах в  каждый инстанс может быть подключен к одному или нескольким раннерам   это управляемый инстанс с несколькими раннерами которые сам  и поддерживает следовательно если вы используете этот инстанс то получаете все необходимое из коробки приступим к работе  предлагает несколько шаблонов при создании нового проекта конфигурация пайплайна    по умолчанию находится в файле    в корневом каталоге предположим мы хотим создать простой пайплайн который проверяет написан протестирован и развернут ли код вот несколько концепций и терминов для ознакомления перед началом работы пайплайн  пайплайн это набор заданий разделенных на этапы  предлагает различные типы пайплайнов например   или   полный список см здесь этап  этап это шаг в пайплайне предоставляющий информацию о том какие задания запускать сборка тестирование и т д один этап может включать одно или несколько заданий задание  задание основной блок пайплайна компиляция линтинг и т д для каждого задания должны быть определены  и  после выполнения всех заданий на этапе пайплайн переходит к следующему теперь к коду выстраиваем пайплайн    который собирает тестирует и разворачивает статический веб сайт в    для начала создадим новый    определим переменные определим этапы определим задания на каждом этапе                                                                     на этом все спасибо за внимание научиться работать с пайплайнами билдами и артефактами можно на курсе    в слёрм вы узнаете из чего состоит  и какие у него возможности и настройки а также разберете лучшие практики построения пайплайна особенности шаблонизации и работы с переменными                                                                              обеспечиваем стабильную работу  проектов сайт сайт карма рейтинг лиза зубарькова пользователь комментировать публикации видеокурс доступен всегда посмотреть программу     теги        хабы блог компании  тестирование  систем системное администрирование программирование  лучшие за сутки похожие ваш аккаунт разделы информация услуги · · · · · · · · · · информация сайт   дата регистрации ноября дата основания февраля численность – человек местоположение россия представитель антон скобин войти регистрация публикации новости хабы компании авторы песочница устройство сайта для авторов для компаний документы соглашение конфиденциальность корпоративный блог медийная реклама нативные проекты образовательные программы стартапам мегапроекты настройка языка техническая поддержка вернуться на старую версию © –  ,оценка обеспечиваем стабильную работу проектов оригинала перевели статью создании пайплайна развертывания статического веб сайта примере быстро вникнуть основы технологии начать применять работе статье рассматриваются базовые концепции также этапы пайплайна часа назад быстрое начало работы пайплайн веб сайта компании тестирование систем системное администрирование туториал перевод автора повезло частью некоторых профессиональных команд каждая которых применяла несколько практик поразило качество скорость разработки позитивный настрой команды коррелируют пайплайном моему мнению зрелость пайплайна служить прекрасным показателем опытности разработчика качества эффективности всей команды многих случаях которые наблюдал пайплайны выстроены инженером отдельной командой последний отчет продемонстрировал разработчиков создают пайплайны цель увеличить число помочь разработчикам взять ответственность пайплайны выстраивать непрерывный процесс доставки создавать качественный статье рассматриваются фундаментальные концепции такое многие бизнесы применяют фреймворки позволяют менять приоритеты повышать скорость доставки кроме прочего подход улучшает атмосферу команде помогает увеличить прибыль ваша компания следует пути принятие культуры философии практик станет большим преимуществом модное словечко последних десятилетий считается настоящим стандартом индустрии практика которая помогает разработчикам доставлять изменения высокой частотой надежностью быстрый билд быстрый тест быстрый фейл наличии автоматизированных тестов команды тяготеют общей автоматизации задач частым надежным поставкам создание пайплайна случае привести нескольким преимуществам бизнес выигрывает снижения затрат повышения производительности ускорения адаптации изменяющимся требованиям рынка команда выигрывает быстрой обратной связи улучшения эффективности разработки уменьшения количества бутылочных горлышек повышения уровня вовлеченности удовлетворенности сотрудников фазы непрерывная интеграция непрерывная интеграция позволяет день коммитить изменения основную ветку вашей кодовой учитывая ограниченные когнитивные способности человека стимулирует разработчиков вносить небольшие изменения которые легче рассмотреть покрыть автоматическими тестами релизить позволяет избежать напряженных переполненных ами дней подготовки релизу тоннами ручного тестирования непрерывная доставка следующий шаг позволяет гарантировать кодовая постоянно готова деплою задеплоить одним нажатием кнопки неважно работаете масштабной распределенной системой сложной производственной средой т д ключевой момент автоматизация непрерывное развертывание последний этап зрелого пайплайна изменения автоматически развертываются продакшн ручного вмешательства само собой требуется большое количество продуманных автоматических тестов утверждает разработчиков применяют сd пяти использует оба подхода автоматизации сборки тестирования развертывания книга подводит итоги многолетнего исследования использованием отчетов основанных наборов компаний всему миру видите высокопроизводительные команды могут деплоить требованию несколько день этапы пайплайна стадия исходного запускается пайплайн обычно происходит изменений репозитории которые проявляются открытии нового пуше ветку способ заключается настройке инструментария запуска пайплайна автоматическое расписание запуска другого пайплайна стадия сборки этап процессе которого происходит проверка сборка особенно полезны такие инструменты обеспечивают однородную среду стадия тестирования невозможно представить автоматизированных тестов конце концов хотят уверены изменения сломают продакшн стадия развертывания последнем этапе успешного прохождения предыдущих стадий развернуть выбранной среде примере использован однако концепции аналогичны остальных инструментов поэтому применить другим сервисам хостинга репозиториев существует несколько инструментов например всемирно известный инструмент требует некоторой настройки конфигурации другие поставляются сервисами хостинга репозиториев такими предварительной настройкой поэтому ваш размещен легче поскольку управление находятся одной платформе работать настроек ответа вопрос немного погрузиться архитектуру именно инстансы раннеры инстансы хранят приложения конфигурации пайплайна раннеры выступают качестве агентов выполняющих операции пайплайнах каждый инстанс подключен одному нескольким раннерам управляемый инстанс несколькими раннерами которые поддерживает следовательно используете инстанс получаете необходимое коробки приступим работе предлагает несколько шаблонов создании нового проекта конфигурация пайплайна умолчанию находится файле корневом каталоге предположим хотим простой пайплайн который проверяет написан протестирован развернут несколько концепций терминов ознакомления началом работы пайплайн пайплайн набор заданий разделенных этапы предлагает различные типы пайплайнов например полный список см этап этап шаг пайплайне предоставляющий информацию какие задания запускать сборка тестирование т д этап включать одно несколько заданий задание задание основной блок пайплайна компиляция линтинг т д каждого задания должны определены выполнения заданий этапе пайплайн переходит следующему выстраиваем пайплайн который собирает тестирует разворачивает статический веб сайт начала создадим новый определим переменные определим этапы определим задания каждом этапе спасибо внимание научиться работать пайплайнами билдами артефактами курсе слёрм узнаете состоит какие возможности настройки также разберете лучшие практики построения пайплайна особенности шаблонизации работы переменными обеспечиваем стабильную работу проектов сайт сайт лиза зубарькова комментировать публикации видеокурс доступен посмотреть программу теги компании тестирование систем системное администрирование программирование лучшие сутки похожие ваш аккаунт разделы информация услуги · · · · · · · · · · информация сайт дата регистрации ноября дата основания февраля численность – человек местоположение россия представитель антон скобин войти регистрация публикации новости компании авторы песочница устройство сайта авторов компаний документы соглашение конфиденциальность корпоративный медийная реклама нативные проекты образовательные программы стартапам мегапроекты настройка языка техническая поддержка вернуться старую версию © –,оценк обеспечива стабильн работ проект оригина перевел стат создан пайплайн развертыван статическ веб сайт пример быстр вникнут основ технолог нача применя работ стат рассматрива базов концепц такж этап пайплайн час назад быстр нача работ пайплайн веб сайт компан тестирован сист системн администрирован туториа перевод автор повезл част некотор профессиональн команд кажд котор применя нескольк практик пораз качеств скорост разработк позитивн настр команд коррелир пайплайн мо мнен зрелост пайплайн служ прекрасн показател опытн разработчик качеств эффективн все команд мног случа котор наблюда пайплайн выстро инженер отдельн команд последн отчет продемонстрирова разработчик созда пайплайн цел увелич числ помоч разработчик взят ответствен пайплайн выстраива непрерывн процесс доставк создава качествен стат рассматрива фундаментальн концепц так мног бизнес применя фреймворк позволя меня приоритет повыша скорост доставк кром проч подход улучша атмосфер команд помога увелич прибыл ваш компан след пут принят культур философ практик станет больш преимуществ модн словечк последн десятилет счита настоя стандарт индустр практик котор помога разработчик доставля изменен высок частот надежн быстр билд быстр тест быстр фейл налич автоматизирова тест команд тяготеют общ автоматизац задач част надежн поставк создан пайплайн случа привест нескольк преимуществ бизнес выигрыва снижен затрат повышен производительн ускорен адаптац изменя требован рынк команд выигрыва быстр обратн связ улучшен эффективн разработк уменьшен количеств бутылочн горлышек повышен уровн вовлечен удовлетворен сотрудник фаз непрерывн интеграц непрерывн интеграц позволя ден коммит изменен основн ветк ваш кодов учитыв ограничен когнитивн способн человек стимулир разработчик внос небольш изменен котор легч рассмотрет покр автоматическ тест релиз позволя избежа напряжен переполнен ам дне подготовк релиз тон ручн тестирован непрерывн доставк след шаг позволя гарантирова кодов постоя готов депл задепло одн нажат кнопк неважн работа масштабн распределен систем сложн производствен сред т д ключев момент автоматизац непрерывн развертыван последн этап зрел пайплайн изменен автоматическ развертыва продакшн ручн вмешательств сам соб треб больш количеств продума автоматическ тест утвержда разработчик применя сд пят использ об подход автоматизац сборк тестирован развертыван книг подвод итог многолетн исследован использован отчет основа набор компан всем мир вид высокопроизводительн команд могут депло требован нескольк ден этап пайплайн стад исходн запуска пайплайн обычн происход изменен репозитор котор проявля открыт нов пуш ветк способ заключа настройк инструментар запуск пайплайн автоматическ расписан запуск друг пайплайн стад сборк этап процесс котор происход проверк сборк особен полезн так инструмент обеспечива однородн сред стад тестирован невозможн представ автоматизирова тест конц конц хот увер изменен слома продакшн стад развертыван последн этап успешн прохожден предыдущ стад развернут выбра сред пример использова однак концепц аналогичн остальн инструмент поэт примен друг сервис хостинг репозитор существ нескольк инструмент например всемирн известн инструмент треб некотор настройк конфигурац друг поставля сервис хостинг репозитор так предварительн настройк поэт ваш размещ легч поскольк управлен наход одн платформ работа настроек ответ вопрос немн погруз архитектур имен инстанс раннер инстанс хран приложен конфигурац пайплайн раннер выступа качеств агент выполня операц пайплайн кажд инстанс подключ одн нескольк раннер управля инстанс нескольк раннер котор поддержива следовательн использует инстанс получа необходим коробк приступ работ предлага нескольк шаблон создан нов проект конфигурац пайплайн умолчан наход файл корнев каталог предполож хот прост пайплайн котор проверя написа протестирова развернут нескольк концепц термин ознакомлен начал работ пайплайн пайплайн набор задан разделен этап предлага различн тип пайплайн например полн список см этап этап шаг пайплайн предоставля информац как задан запуска сборк тестирован т д этап включа одн нескольк задан задан задан основн блок пайплайн компиляц линтинг т д кажд задан должн определ выполнен задан этап пайплайн переход след выстраива пайплайн котор собира тестир разворачива статическ веб сайт нача создад нов определ перемен определ этап определ задан кажд этап спасиб вниман науч работа пайплайн билд артефакт курс слерм узна состо как возможн настройк такж разберет лучш практик построен пайплайн особен шаблонизац работ перемен обеспечива стабильн работ проект сайт сайт лиз зубарьков комментирова публикац видеокурс доступ посмотрет программ тег компан тестирован сист системн администрирован программирован лучш сутк похож ваш аккаунт раздел информац услуг · · · · · · · · · · информац сайт дат регистрац ноябр дат основан феврал числен – человек местоположен росс представител антон скобин войт регистрац публикац новост компан автор песочниц устройств сайт автор компан документ соглашен конфиденциальн корпоративн медийн реклам нативн проект образовательн программ стартап мегапроект настройк язык техническ поддержк вернут стар верс © –,оценка обеспечивать стабильный оригинал перевести создание пайплайна развёртывание статический веб сайт быстро вникнуть основа технология начать применять рассматриваться базовый концепция также этап пайплайна час назад быстрый начало пайплайна веб сайт компания тестирование система системный администрирование туториал перевод повезти часть некоторый профессиональный команда каждый который применять несколько практика поразить качество скорость разработка позитивный настрой команда коррелировать пайплайн мнение зрелость пайплайна служить прекрасный показатель опытность разработчик качество эффективность весь команда многий случай который наблюдать пайплайна выстроить инженер отдельный команда последний отчёт продемонстрировать разработчик создавать пайплайна цель увеличить число помочь разработчик взять ответственность пайплайна выстраивать непрерывный процесс доставка создавать качественный рассматриваться фундаментальный концепция многие бизнес применять фреймворк позволять менять приоритет повышать скорость доставка кроме прочее подход улучшать атмосфера команда помогать увеличить прибыль ваш компания следовать путь принятие культура философия практика стать больший преимущество модный словечко последний десятилетие считаться настоящий стандарт индустрия практика который помогать разработчик доставлять изменение высокий частота надёжность быстрый билд быстрый тест быстрый фейл наличие автоматизированный тест команда тяготеть общий автоматизация частый надёжный поставка создание пайплайна случай привести несколько преимущество бизнес выигрывать снижение затрата повышение производительность ускорение адаптация изменяться требование рынок команда выигрывать быстрый обратный связь улучшение эффективность разработка уменьшение количество бутылочный горлышко повышение уровень вовлечённость удовлетворённость сотрудник фаза непрерывный интеграция непрерывный интеграция позволять день коммитить изменение основный ветка ваш кодовый учитывать ограниченный когнитивный способность человек стимулировать разработчик вносить небольшой изменение который лёгкий рассмотреть покрыть автоматический тест релизить позволять избежать напрячь переполненный ами день подготовка релиз тонна ручной тестирование непрерывный доставка следующий шаг позволять гарантировать кодовый постоянно готовый деплоить задеплоить нажатие кнопка неважно работать масштабный распределённый система сложный производственный среда далее ключевой момент автоматизация непрерывный развёртывание последний этап зрелый пайплайна изменение автоматически развёртываться продакшн ручной вмешательство требоваться большой количество продумать автоматический тест утверждать разработчик применять сd пять оба подход автоматизация сборка тестирование развёртывание книга подводить итог многолетний исследование отчёт основать набор компания весь мир видеть высокопроизводительный команда мочь деплоить требование несколько день этап пайплайна стадия исходный запускаться пайплайна обычно происходить изменение репозиторий который проявляться открытие новый пуша ветка способ заключаться настройка инструментарий запуск пайплайна автоматический расписание запуск пайплайна стадия сборка этап процесс который происходить проверка сборка особенно полезный инструмент обеспечивать однородный среда стадия тестирование невозможно представить автоматизированный тест конец конец хотеть уверить изменение сломать продакшн стадия развёртывание последний этап успешный прохождение предыдущий стадия развернуть выбрать среда однако концепция аналогичный остальной инструмент поэтому применить сервис хостинг репозиторий существовать несколько инструмент например всемирно известный инструмент требовать некоторый настройка конфигурация поставляться сервис хостинг репозиторий предварительный настройка поэтому ваш разместить лёгкий поскольку управление находиться платформа работать настройка ответ вопрос немного погрузиться архитектура именно инстанс раннера инстанс хранить приложение конфигурация пайплайна раннера выступать качество агент выполнять операция пайплайна каждый инстанс подключить несколько раннер управляемый инстанс несколько раннер который поддерживать следовательно инстанс получать необходимый коробка приступить предлагать несколько шаблон создание новый конфигурация пайплайна умолчание находиться корневой каталог предположим хотеть простой пайплайна который проверять протестировать развернуть несколько концепция термин ознакомление начало пайплайна пайплайна набор задание разделить этап предлагать различный тип пайплайн например полный список смотреть этап этап шаг пайплайне предоставлять информация задание запускать сборка тестирование далее этап включать несколько задание задание задание основной блок пайплайна компиляция линтинг далее каждый задание должный определить выполнение задание этап пайплайна переходить следующий выстраивать пайплайна который собирать тестировать разворачивать статический веб сайт начало новый определимый переменный определимый этап определимый задание каждый этап спасибо внимание научиться работать пайплайна билдами артефакт курс слёрма узнать состоять возможность настройка также разобрать хороший практика построение пайплайна особенность шаблонизация переменный обеспечивать стабильный сайт сайт лиза зубарьков комментировать публикация видеокурс доступный посмотреть тег компания тестирование система системный администрирование программирование хороший сутки похожий ваш аккаунт раздел информация услуга · · · · · · · · · · информация сайт дата регистрация ноябрь дата основание февраль численность – человек местоположение россия представитель антон скобин войти регистрация публикация новость компания песочница устройство сайт компания документ соглашение конфиденциальность корпоративный медийный реклама нативный образовательный стартап мегапроект настройка язык технический поддержка вернуться старый © –,2
4,Генеральный директор Mozilla покинула свой пост,"Митчелл Бейкер, гендиректор Mozilla с 2020 года, объявила, что покидает свой пост и возвращается на должность председателя совета директоров Mozilla Corporation, которую она занимала ранее. Временным генеральным директором компании станет член правления Лора Чемберс. «За 25 лет работы в Mozilla я побывала на многих должностях. Мой теперешний шаг вызван желанием сосредоточить внимание на предстоящих задачах. Я руководила бизнесом Mozilla в период преобразований, а также курировала миссию Mozilla в более широком смысле. Стало очевидно, что оба направления требуют преданного и постоянного руководства», — заявила Бейкер в сообщении в блоге Mozilla. Митчелл работает в Mozilla с эпохи Netscape Communications. Она основала Mozilla Foundation и учредила лицензию Mozilla Public License. 12 минут назад Генеральный директор Mozilla покинула свой пост  107 IT-компании, Управление персоналом*, Карьера в IT-индустрии  Зарплаты IT-специалистов Новый год → новая жизнь → новые с… Войти Моя лента Все потоки Разработка Администрирование Дизайн Менеджмент Маркетинг Научпоп 141 Карма 145.1 Рейтинг @AnnieBronson Информационная служба Хабра Реклама Комментарии Здесь пока нет ни одного комментария, вы можете стать первым! Другие новости 5ут назад Лора Чемберс в должность генерального директора до конца этого года. Она входила в состав совета директоров Mozilla в течение трёх последних лет, а до этого работала в Airbnb, PayPal, eBay и Willow Innovations. По словам Бейкер, внимание Лоры « будет сосредоточено на предоставлении успешных продуктов, продвигающих миссию компании, и создании платформ, ускоряющих её развитие».  «Мы находимся на критическом этапе, когда общественное доверие к институтам, правительствам и Интернету достигло беспрецедентно низкого уровня. Происходит тектонический сдвиг: каждый борется за будущее ИИ. Это возможность и необходимость для Mozilla создать лучшее будущее», — заключила Бейкер. Теги:  mozilla, mozilla foundation Хабы:  IT-компании, Управление персоналом, Карьера в IT-индустрии Редакторский дайджест Присылаем лучшие статьи раз в месяц Электропочта Только полноправные пользователи могут оставлять комментарии. Войдите, пожалуйста. ai.sbergraduate.ru РЕКЛАМА Вакансии для студентов без опыта работы Sberseasons: подай заявку на стажировку по IT и другим специальностям SpaceX планирует использовать беспилотные баржи в качестве морских интернет-станций для Starlink 2 мин SLY_G 3 часа назад Биологи научились регулировать кислотность клеток человека при помощи света  CloudMTS 3 часа назад Облачный дайджест: затраты на VDI растут, SAP закрывает доступ, дата-центр строят на 3D-принтере 2 мин Cloud4Y 4 часа назад Что делает тихоходок настолько живучими? Новое исследование указывает на свободные радикалы 6 мин IgnatChuker 5 часов назад В Австралии приняли в первом чтении закон о праве работника игнорировать рабочие звонки и сообщения в нерабочее время 2 мин 5 часов назад Microsoft изменила интерфейс Copilot для Windows, чтобы сервис по умолчанию запускался с большим окном чата  301 +5 0 0 448 +6 0 0 633 1 0 0 2.8K +5 4 3 +3 3.2K +23 8 29 +29 1.6K avouner 5 часов назад Российские банки выступили против оборотных штрафов до 500 млн рублей за утечки данных 2 мин LizzieSimpson 5 часов назад Disney за $1,5 млрд купит долю в Epic Games  daniilshat 5 часов назад Безопасность конфигураций веб-сервера Angie PRO теперь контролирует X-Config  Travis_Macrif 5 часов назад Министерство внутренней безопасности США создало новое подразделение под названием AI Corps 2 мин Показать еще МИНУТОЧКУ ВНИМАНИЯ 0 0 7 7 2.2K +5 1 7 7 874 +5 0 3 +3 183 +4 0 0 490 +3 0 2 +2 Интересно Интересно  Турбо ВОПРОСЫ И ОТВЕТЫ Есть ли плагин-""мусорка"" закладок для браузера Огнелис? Mozilla ·  · 1 ответ Где скачать русскоязычную модель для TTS от Mozilla? Mozilla ·  · 1 ответ Что делать, если сайт некорректно отображается в Mozilla FireFox? Mozilla ·  · 1 ответ Огромные лаги в интерфейсе Firefox. Как исправить? Mozilla · 2 ответа Почему не работает слайдер jquery.jcarousel.js в браузерах Фаерфокс и ИЕ? Mozilla · 0 ответов Больше вопросов на Хабр Q&A Зарплаты IT-специалистов во второй половине 2023 Ах, этот скидочный снегопад: поймай свою снежинку Хабракалендарь, отворись! Какие IT-ивенты ждут нас в 2024 Реклама ЧИТАЮТ СЕЙЧАС Тинькофф банк вернул 200 тысяч. Это был не дипфейк Люди не понимают ООП В России госведомства начали объявлять тендеры на уничтожение техники Apple Yandex N.V. запретили в течение пяти лет создавать аналогичные «Яндексу» сервисы «МегаФон» повысил цены на связь для некоторых абонентов, так как они от этого не отказались 5.8K 26 +26 50K 247 +247 45K 218 +218 13K 25 +25 8.8K 52 +52 sberbank.com Кешбэк до 10% бонусами СберСпасибо — сервис СберПремьер 4,6 Рейтинг организации Акция для владельцев. Оформите онлайн пакет услуг и получайте выгоду от покупок Оформить Выделенная линия Узнать больше РЕКЛАМА Знаете, что поменять в обучении ИБ? Рассказывайте! Спецпроект ИСТОРИИ БЛИЖАЙШИЕ СОБЫТИЯ Реклама Хорошие статьи из блогов компаний Зарплаты в IT во второй половине 2023 Учим английский Не работай через силу Позовите автора! Конк Хабр Как использовать облачные платформы Сloud.ru: серия демо- встреч по четвергам  1 – 29 февраля  11:00 Онлайн Подробнее в календаре Конкурс грантов на обучение IT-профессиям от Хекслета  5 – 29 февраля Онлайн Подробнее в календаре Открытый урок «Behaviour Tree в   8 февраля  19 Онлайн Подробнее в календаре ADRIVER Ваш аккаунт Войти Регистрация Разделы Статьи Новости Хабы Компании Авторы Песочница Информация Устройство сайта Для авторов Для компаний Документы Соглашение Конфиденциальность Услуги Корпоративный блог Медийная реклама Нативные проекты Образовательные программы Стартапам Настройка языка Техническая поддержка © 2006–2024, Habr ",12 минут назад,"Хабы:  IT-компании, Управление персоналом, Карьера в IT-индустрии ",145.1,митчелл бейкер гендиректор  с года объявила что покидает свой пост и возвращается на должность председателя совета директоров   которую она занимала ранее временным генеральным директором компании станет член правления лора чемберс за лет работы в  я побывала на многих должностях мой теперешний шаг вызван желанием сосредоточить внимание на предстоящих задачах я руководила бизнесом  в период преобразований а также курировала миссию  в более широком смысле стало очевидно что оба направления требуют преданного и постоянного руководства заявила бейкер в сообщении в блоге  митчелл работает в  с эпохи   она основала   и учредила лицензию    минут назад генеральный директор  покинула свой пост  компании управление персоналом карьера в  индустрии зарплаты  специалистов новый год → новая жизнь → новые с… войти моя лента все потоки разработка администрирование дизайн менеджмент маркетинг научпоп карма рейтинг  информационная служба хабра реклама комментарии здесь пока нет ни одного комментария вы можете стать первым другие новости ут назад лора чемберс в должность генерального директора до конца этого года она входила в состав совета директоров  в течение трёх последних лет а до этого работала в    и   по словам бейкер внимание лоры будет сосредоточено на предоставлении успешных продуктов продвигающих миссию компании и создании платформ ускоряющих её развитие мы находимся на критическом этапе когда общественное доверие к институтам правительствам и интернету достигло беспрецедентно низкого уровня происходит тектонический сдвиг каждый борется за будущее ии это возможность и необходимость для  создать лучшее будущее заключила бейкер теги    хабы  компании управление персоналом карьера в  индустрии редакторский дайджест присылаем лучшие статьи раз в месяц электропочта только полноправные пользователи могут оставлять комментарии войдите пожалуйста    реклама вакансии для студентов без опыта работы  подай заявку на стажировку по  и другим специальностям  планирует использовать беспилотные баржи в качестве морских интернет станций для  мин   часа назад биологи научились регулировать кислотность клеток человека при помощи света  часа назад облачный дайджест затраты на  растут  закрывает доступ дата центр строят на  принтере мин   часа назад что делает тихоходок настолько живучими новое исследование указывает на свободные радикалы мин  часов назад в австралии приняли в первом чтении закон о праве работника игнорировать рабочие звонки и сообщения в нерабочее время мин часов назад  изменила интерфейс  для  чтобы сервис по умолчанию запускался с большим окном чата     часов назад российские банки выступили против оборотных штрафов до млн рублей за утечки данных мин  часов назад  за млрд купит долю в    часов назад безопасность конфигураций веб сервера   теперь контролирует     часов назад министерство внутренней безопасности сша создало новое подразделение под названием   мин показать еще минуточку внимания  интересно интересно турбо вопросы и ответы есть ли плагин мусорка закладок для браузера огнелис  · · ответ где скачать русскоязычную модель для  от   · · ответ что делать если сайт некорректно отображается в    · · ответ огромные лаги в интерфейсе  как исправить  · ответа почему не работает слайдер    в браузерах фаерфокс и ие  · ответов больше вопросов на хабр   зарплаты  специалистов во второй половине ах этот скидочный снегопад поймай свою снежинку хабракалендарь отворись какие  ивенты ждут нас в реклама читают сейчас тинькофф банк вернул тысяч это был не дипфейк люди не понимают ооп в россии госведомства начали объявлять тендеры на уничтожение техники     запретили в течение пяти лет создавать аналогичные яндексу сервисы мегафон повысил цены на связь для некоторых абонентов так как они от этого не отказались        кешбэк до бонусами сберспасибо сервис сберпремьер рейтинг организации акция для владельцев оформите онлайн пакет услуг и получайте выгоду от покупок оформить выделенная линия узнать больше реклама знаете что поменять в обучении иб рассказывайте спецпроект истории ближайшие события реклама хорошие статьи из блогов компаний зарплаты в  во второй половине учим английский не работай через силу позовите автора конк хабр как использовать облачные платформы сloud  серия демо встреч по четвергам – февраля онлайн подробнее в календаре конкурс грантов на обучение  профессиям от хекслета – февраля онлайн подробнее в календаре открытый урок   в февраля онлайн подробнее в календаре  ваш аккаунт войти регистрация разделы статьи новости хабы компании авторы песочница информация устройство сайта для авторов для компаний документы соглашение конфиденциальность услуги корпоративный блог медийная реклама нативные проекты образовательные программы стартапам настройка языка техническая поддержка © –  ,митчелл бейкер гендиректор объявила покидает свой возвращается должность председателя совета директоров которую занимала ранее временным генеральным директором компании станет член правления лора чемберс работы побывала многих должностях теперешний шаг вызван желанием сосредоточить внимание предстоящих задачах руководила бизнесом период преобразований также курировала миссию широком смысле стало очевидно оба направления требуют преданного постоянного руководства заявила бейкер сообщении блоге митчелл работает эпохи основала учредила лицензию минут назад генеральный директор покинула свой компании управление персоналом карьера индустрии зарплаты специалистов новый → новая → новые с… войти лента потоки разработка администрирование дизайн менеджмент маркетинг научпоп информационная служба хабра реклама одного комментария можете стать первым другие новости ут назад лора чемберс должность генерального директора конца входила состав совета директоров течение трёх последних работала словам бейкер внимание лоры сосредоточено предоставлении успешных продуктов продвигающих миссию компании создании платформ ускоряющих её развитие находимся критическом этапе общественное доверие институтам правительствам интернету достигло беспрецедентно низкого уровня происходит тектонический сдвиг каждый борется будущее ии возможность необходимость лучшее будущее заключила бейкер теги компании управление персоналом карьера индустрии редакторский дайджест присылаем лучшие электропочта полноправные пользователи могут оставлять войдите пожалуйста реклама вакансии студентов опыта работы подай заявку стажировку другим специальностям планирует беспилотные баржи качестве морских интернет станций мин часа назад биологи научились регулировать кислотность клеток человека помощи света часа назад облачный дайджест затраты растут закрывает доступ дата центр строят принтере мин часа назад делает тихоходок настолько живучими новое исследование указывает свободные радикалы мин часов назад австралии приняли первом чтении закон праве работника игнорировать рабочие звонки сообщения нерабочее мин часов назад изменила интерфейс сервис умолчанию запускался большим окном чата часов назад российские банки выступили против оборотных штрафов млн рублей утечки мин часов назад млрд купит долю часов назад безопасность конфигураций веб сервера контролирует часов назад министерство внутренней безопасности сша создало новое подразделение названием мин показать минуточку внимания интересно интересно турбо вопросы ответы плагин мусорка закладок браузера огнелис · · ответ скачать русскоязычную модель · · ответ делать сайт некорректно отображается · · ответ огромные лаги интерфейсе исправить · ответа почему работает слайдер браузерах фаерфокс ие · ответов вопросов зарплаты специалистов второй половине ах скидочный снегопад поймай снежинку хабракалендарь отворись какие ивенты ждут реклама читают тинькофф банк вернул тысяч дипфейк люди понимают ооп россии госведомства начали объявлять тендеры уничтожение техники запретили течение пяти создавать аналогичные яндексу сервисы мегафон повысил цены связь некоторых абонентов отказались кешбэк бонусами сберспасибо сервис сберпремьер организации акция владельцев оформите онлайн пакет услуг получайте выгоду покупок оформить выделенная линия узнать реклама знаете поменять обучении иб рассказывайте спецпроект истории ближайшие события реклама хорошие блогов компаний зарплаты второй половине учим английский работай силу позовите автора конк облачные платформы сloud серия демо встреч четвергам – февраля онлайн календаре конкурс грантов обучение профессиям хекслета – февраля онлайн календаре открытый урок февраля онлайн календаре ваш аккаунт войти регистрация разделы новости компании авторы песочница информация устройство сайта авторов компаний документы соглашение конфиденциальность услуги корпоративный медийная реклама нативные проекты образовательные программы стартапам настройка языка техническая поддержка © –,митчелл бейкер гендиректор объяв покида сво возвраща должност председател совет директор котор занима ран времен генеральн директор компан станет член правлен лор чемберс работ побыва мног должност теперешн шаг вызва желан сосредоточ вниман предстоя задач руковод бизнес период преобразован такж курирова мисс широк смысл стал очевидн об направлен треб преда постоя руководств заяв бейкер сообщен блог митчелл работа эпох основа учред лиценз минут назад генеральн директор покинул сво компан управлен персонал карьер индустр зарплат специалист нов → нов → нов с… войт лент поток разработк администрирован дизайн менеджмент маркетинг научпоп информацион служб хабр реклам одн комментар может стат перв друг новост ут назад лор чемберс должност генеральн директор конц вход соста совет директор течен трех последн работа слов бейкер вниман лор сосредоточ предоставлен успешн продукт продвига мисс компан создан платформ ускоря е развит наход критическ этап обществен довер институт правительств интернет достигл беспрецедентн низк уровн происход тектоническ сдвиг кажд борет будущ и возможн необходим лучш будущ заключ бейкер тег компан управлен персонал карьер индустр редакторск дайджест присыла лучш электропочт полноправн пользовател могут оставля войд пожалуйст реклам ваканс студент опыт работ пода заявк стажировк друг специальн планир беспилотн барж качеств морск интернет станц мин час назад биолог науч регулирова кислотн клеток человек помощ свет час назад облачн дайджест затрат растут закрыва доступ дат центр стро принтер мин час назад дела тихоходок настольк живуч нов исследован указыва свободн радикал мин час назад австрал приня перв чтен закон прав работник игнорирова рабоч звонк сообщен нерабоч мин час назад измен интерфейс сервис умолчан запуска больш окн чат час назад российск банк выступ прот оборотн штраф млн рубл утечк мин час назад млрд куп дол час назад безопасн конфигурац веб сервер контролир час назад министерств внутрен безопасн сша созда нов подразделен назван мин показа минуточк вниман интересн интересн турб вопрос ответ плагин мусорк закладок браузер огнелис · · ответ скача русскоязычн модел · · ответ дела сайт некорректн отобража · · ответ огромн лаг интерфейс исправ · ответ поч работа слайдер браузер фаерфокс и · ответ вопрос зарплат специалист втор половин ах скидочн снегопад пойма снежинк хабракалендар отвор как ивент ждут реклам чита тинькофф банк вернул тысяч дипфейк люд понима ооп росс госведомств нача объявля тендер уничтожен техник запрет течен пят создава аналогичн яндекс сервис мегафон повыс цен связ некотор абонент отказа кешбэк бонус сберспасиб сервис сберпремьер организац акц владельц оформ онлайн пакет услуг получа выгод покупок оформ выделен лин узна реклам знает поменя обучен иб рассказыва спецпроект истор ближайш событ реклам хорош блог компан зарплат втор половин уч английск работа сил позов автор конк облачн платформ слоуд сер дем встреч четверг – феврал онлайн календар конкурс грант обучен професс хекслет – феврал онлайн календар открыт урок феврал онлайн календар ваш аккаунт войт регистрац раздел новост компан автор песочниц информац устройств сайт автор компан документ соглашен конфиденциальн услуг корпоративн медийн реклам нативн проект образовательн программ стартап настройк язык техническ поддержк © –,митчелла бейкер гендиректор объявить покидать свой возвращаться должность председатель совет директор который занимать ранее временной генеральный директор компания стать член правление лор чемберс побывать многий должность теперешний шаг вызвать желание сосредоточить внимание предстоящий руководить бизнес период преобразование также курировать миссия широкий смысл стать очевидный оба направление требовать предать постоянный руководство заявить бейкер сообщение митчелла работать эпоха основать учредить лицензия минута назад генеральный директор покинуть свой компания управление персонал карьера индустрия зарплата специалист новый → новый → новый с… войти лента поток разработка администрирование дизайн менеджмент маркетинг научпоп информационный служба хабра реклама мочь стать первый новость ут назад лор чемберс должность генеральный директор конец входить состав совет директор течение последний работать слово бейкер внимание лора сосредоточить предоставление успешный продукт продвигать миссия компания создание платформа ускорять её развитие находиться критический этап общественный доверие институт правительство интернет достигнуть беспрецедентный низкий уровень происходить тектонический сдвиг каждый бороться будущее ия возможность необходимость хороший будущее заключить бейкер тег компания управление персонал карьера индустрия редакторский дайджест присылать хороший электропочта полноправный мочь оставлять войти пожалуйста реклама вакансия студент опыт подать заявка стажировка специальность планировать беспилотный баржа качество морской интернет станция мина час назад биолог научиться регулировать кислотность клетка человек помощь свет час назад облачный дайджест затрата расти закрывать доступ дата центр строить принтер мина час назад делать тихоходка настолько живучий новый исследование указывать свободный радикал мина час назад австралия принять первый чтение закон право работник игнорировать рабочий звонок сообщение нерабочий мина час назад изменить интерфейс сервис умолчание запускаться больший окно чат час назад российский банк выступить против оборотный штраф млн рубль утечка мина час назад млрд купить доля час назад безопасность конфигурация веб контролировать час назад министерство внутренний безопасность сша новый подразделение название мина показать минуточка внимание интересно интересно турбо вопрос ответ плагин мусорк закладка браузер огнелиса · · ответ скачать русскоязычный модель · · ответ делать сайт некорректно отображаться · · ответ огромный лаг интерфейс исправить · ответ почему работать слайдер браузер фаерфокс ие · ответ вопрос зарплата специалист второй половина ах скидочный снегопад поймать снежинка хабракалендарь отвориться ивента ждать реклама тинькофф банк вернуть тысяча дипфейк человек понимать ооп россия госведомство начать объявлять тендер уничтожение техника запретить течение пять создавать аналогичный яндекс сервис мегафон повысить цена связь некоторый абонент отказаться кешбэк бонус сберспасибо сервис сберпремьер организация акция владелец оформить онлайн пакет услуга получать выгода покупка оформить выделить линия узнать реклама знать поменять обучение иб рассказывать спецпроект история близкий событие реклама хороший компания зарплата второй половина учить английский работать сила позвать конк облачный платформа сloud серия дть встреча четверг – февраль онлайн календарь конкурс грант обучение профессия хекслёт – февраль онлайн календарь открытый урок февраль онлайн календарь ваш аккаунт войти регистрация раздел новость компания песочница информация устройство сайт компания документ соглашение конфиденциальность услуга корпоративный медийный реклама нативный образовательный стартап настройка язык технический поддержка © –,3
5,ИИ-агенты в Альфа-Банке: нейросети создают автотесты без участия человека,"404.32 Рейтинг Альфа-Банк Лучший мобильный банк по версии Markswebb Подписаться В Альфа-Банке мы внедрили ИИ-агентов, которые проектируют, разрабатывают и проверяют автотесты. При этом полностью автономно, как QA-инженеры, но в разы быстрее и точнее. Подобных примеров, когда ИИ разрабатывает автотесты от анализа требований до пул-реквеста, в нашей стране, пожалуй, ещё не было. Что умеют агенты? Анализировать контекст из Jira и Confluence, вычленяя суть задачи. Прогнозировать риски, зависимости и даже «пограничные» сценарии. Генерировать DTO для REST API и превращать ручные сценарии в Java-тесты за минуты. Сверять код с бизнес-логикой и техстандартами Альфы, защищая прод от случайных ошибок. Создавать вариативные проверки — от позитивных кейсов до сложных негативных условий. Автоматизировать рутину. В ИИ-команде QA есть несколько агентов, каждый работает над своей частью из перечная выше. Сейчас решение пилотируется в нескольких продуктовых командах, но результаты уже видны: 2 часа назад ИИ-агенты в Альфа-Банке: нейросети создают автотесты без участия человека  717 Блог компании Альфа-Банк, Искусственный интеллект, Тестирование IT-систем* Войти Моя лента Все потоки Разработка Администрирование Дизайн Менеджмент Маркетинг Научпоп  Зарплаты айтишников Миграция за ночь? Легко! Без сна и с адре… Альфа-Банк Лучший мобильный банк по версии Markswebb Сайт Хабр Карьера 14 Карма 0.3 Рейтинг @AlfaTeam Пользователь Сайт Facebook ВКонтакте Другие новости mefdayy 1ут назад Nvidia и Broadcom тестируют передовой процесс производства чипов Intel 2 мин меньше ошибок в проде, предсказуемые дедлайны и высвобожденные ресурсы для творческих задач. «Одна команда ИИ-агентов экономит десятки часов работы, увеличивает скорость релизов и находит на 30% больше багов» Святослав Соловьев, Директор по генеративному ИИ в ИТ Альфа-Банка. В ближайшее время подробнее опишем как устроены агенты, какие технологии используем и как мы измеряем их эффективность. Теги: автоматизация, искусственный интеллект, тестирование, автотесты Хабы: Блог компании Альфа-Банк, Искусственный интеллект, Тестирование IT-систем Редакторский дайджест Присылаем лучшие статьи раз в месяц Электропочта Комментарии 11 123 Подписаться ",2 часа назад,"Хабы: Блог компании Альфа-Банк, Искусственный интеллект, Тестирование IT-систем ",404.32, рейтинг альфа банк лучший мобильный банк по версии  подписаться в альфа банке мы внедрили ии агентов которые проектируют разрабатывают и проверяют автотесты при этом полностью автономно как  инженеры но в разы быстрее и точнее подобных примеров когда ии разрабатывает автотесты от анализа требований до пул реквеста в нашей стране пожалуй ещё не было что умеют агенты анализировать контекст из  и  вычленяя суть задачи прогнозировать риски зависимости и даже пограничные сценарии генерировать  для   и превращать ручные сценарии в  тесты за минуты сверять код с бизнес логикой и техстандартами альфы защищая прод от случайных ошибок создавать вариативные проверки от позитивных кейсов до сложных негативных условий автоматизировать рутину в ии команде  есть несколько агентов каждый работает над своей частью из перечная выше сейчас решение пилотируется в нескольких продуктовых командах но результаты уже видны часа назад ии агенты в альфа банке нейросети создают автотесты без участия человека блог компании альфа банк искусственный интеллект тестирование  систем войти моя лента все потоки разработка администрирование дизайн менеджмент маркетинг научпоп зарплаты айтишников миграция за ночь легко без сна и с адре… альфа банк лучший мобильный банк по версии  сайт хабр карьера карма рейтинг  пользователь сайт  вконтакте другие новости  ут назад  и  тестируют передовой процесс производства чипов  мин меньше ошибок в проде предсказуемые дедлайны и высвобожденные ресурсы для творческих задач одна команда ии агентов экономит десятки часов работы увеличивает скорость релизов и находит на больше багов святослав соловьев директор по генеративному ии в ит альфа банка в ближайшее время подробнее опишем как устроены агенты какие технологии используем и как мы измеряем их эффективность теги автоматизация искусственный интеллект тестирование автотесты хабы блог компании альфа банк искусственный интеллект тестирование  систем редакторский дайджест присылаем лучшие статьи раз в месяц электропочта комментарии подписаться ,альфа банк лучший мобильный банк версии подписаться альфа банке внедрили ии агентов которые проектируют разрабатывают проверяют автотесты полностью автономно инженеры разы быстрее точнее подобных примеров ии разрабатывает автотесты анализа требований пул реквеста нашей стране пожалуй ещё умеют агенты анализировать контекст вычленяя суть прогнозировать риски зависимости пограничные сценарии генерировать превращать ручные сценарии тесты минуты сверять бизнес логикой техстандартами альфы защищая прод случайных ошибок создавать вариативные проверки позитивных кейсов сложных негативных условий автоматизировать рутину ии команде несколько агентов каждый работает своей частью перечная выше пилотируется нескольких продуктовых командах результаты видны часа назад ии агенты альфа банке нейросети создают автотесты участия человека компании альфа банк искусственный интеллект тестирование систем войти лента потоки разработка администрирование дизайн менеджмент маркетинг научпоп зарплаты айтишников миграция ночь легко сна адре… альфа банк лучший мобильный банк версии сайт карьера сайт вконтакте другие новости ут назад тестируют передовой процесс производства чипов мин меньше ошибок проде предсказуемые дедлайны высвобожденные ресурсы творческих задач одна команда ии агентов экономит десятки часов работы увеличивает скорость релизов находит багов святослав соловьев директор генеративному ии ит альфа банка ближайшее опишем устроены агенты какие технологии используем измеряем эффективность теги автоматизация искусственный интеллект тестирование автотесты компании альфа банк искусственный интеллект тестирование систем редакторский дайджест присылаем лучшие электропочта подписаться,альф банк лучш мобильн банк верс подписа альф банк внедр и агент котор проектир разрабатыва проверя автотест полност автономн инженер раз быстр точн подобн пример и разрабатыва автотест анализ требован пул реквест наш стран пожал ещ умеют агент анализирова контекст вычлен сут прогнозирова риск зависим пограничн сценар генерирова превраща ручн сценар тест минут сверя бизнес логик техстандарт альф защищ прод случайн ошибок создава вариативн проверк позитивн кейс сложн негативн услов автоматизирова рутин и команд нескольк агент кажд работа сво част перечн выш пилотир нескольк продуктов команд результат видн час назад и агент альф банк нейросет созда автотест участ человек компан альф банк искусствен интеллект тестирован сист войт лент поток разработк администрирован дизайн менеджмент маркетинг научпоп зарплат айтишник миграц ноч легк сна адре… альф банк лучш мобильн банк верс сайт карьер сайт вконтакт друг новост ут назад тестир передов процесс производств чип мин меньш ошибок прод предсказуем дедлайн высвобожден ресурс творческ задач одн команд и агент эконом десятк час работ увеличива скорост релиз наход баг святосла солов директор генеративн и ит альф банк ближайш опиш устро агент как технолог использу измеря эффективн тег автоматизац искусствен интеллект тестирован автотест компан альф банк искусствен интеллект тестирован сист редакторск дайджест присыла лучш электропочт подписа,альфа банк хороший мобильный банк подписаться альфа банк внедрить ия агент который проектировать разрабатывать проверять автотест полностью автономно инженер быстрый точнее подобный ия разрабатывать автотест анализ требование пул реквест наш страна пожалуй ещё уметь агент анализировать контекст вычленять прогнозировать риск зависимость пограничный сценарий генерировать превращать ручной сценарий тест минута сверять бизнес логика техстандарт альф защищать прод случайный ошибка создавать вариативный проверка позитивный кейс сложный негативный условие автоматизировать рутина ия команда несколько агент каждый работать свой часть перечный выше пилотироваться несколько продуктовый команда результат видный час назад ия агент альфа банк нейросеть создавать автотест участие человек компания альфа банк искусственный интеллект тестирование система войти лента поток разработка администрирование дизайн менеджмент маркетинг научпоп зарплата айтишник миграция ночь легко сон адре… альфа банк хороший мобильный банк сайт карьера сайт вконтакте новость ут назад тестировать передовой процесс производство чип мина маленький ошибка продя предсказуемый дедлайн высвободить ресурс творческий команда ия агент экономить десятка час увеличивать скорость релиз находить баг святослав соловьёв директор генеративный ия ит альфа банк близкий описать устроить агент технология измерять эффективность тег автоматизация искусственный интеллект тестирование автотест компания альфа банк искусственный интеллект тестирование система редакторский дайджест присылать хороший электропочта подписаться,0
6,"Инструменты наблюдаемости, о которых нужно знать в 2023 году","2376.9 Рейтинг   Автор оригинала: Lahiru Hewawasam  4 часа назад   Инструменты наблюдаемости, о которых нужно знать в 2023 году 752 Блог компании  ,  Open source* ,  Хранение данных* ,  Облачные сервисы* ,  Мик Перевод  Когда организации переходят в облако, их системы тоже начинают стремиться к распределённым архитектурам. Один из самых распространённых примеров этого — использование микросервисов. Однако это также создаёт новые сложности с точки зрения наблюдаемости. Необходимо подбирать подходящие инструменты для мониторинга, отслеживания и трассировки этих систем при помощи анализа выходных результатов посредством метрик, логов и трассировок. Это позволяет командам разработчиков быстро выявлять первопричины проблем, устранять их и оптимизировать производительность приложений, ускоряя выпуск кода. В этой статье мы рассмотрим возможности, ограничения и важные особенности одиннадцати популярных инструментов наблюдаемости, что позволит вам выбрать наиболее подходящий для вашего проекта. Helios Helios — это решение по обеспечению наблюдаемости для разработчиков, предоставляющее информацию по всему потоку приложений. Оно включает в себя фреймворк распространения контекста OpenTelemetry и обеспечивает наблюдение за микросервисами, serverless-функциями, базами данных и сторонними API. Можно протестировать песочницу продукта или использовать его бесплатно, зарегистрировавшись здесь. ▍ Основные возможности • Обеспечение полного контроля: Helios предоставляет информацию о распределённой трассировке в полном контексте, показывает, как передаются данные через всё приложение в любом окружении. • Визуализация: позволяет пользователям собирать и визуализировать данные трассировок из множественных источников данных, чтобы исследовать и устранять потенциальные проблемы. • Многоязыковая поддержка: поддерживает множество языков и фреймворков, в том числе Python, JavaScript, Node.js, Java, Ruby, .NET, Go, C++ и Collector. • Обмен и многократное использование: вы с лёгкостью можете сотрудничать с участниками команды, обмениваясь через Helios трассировками, тестами и триггерами. Кроме того, Helios позволяет многократно использовать запросы и полезные нагрузки между участниками команды. • Автоматическая генерация тестов: автоматически генерирует тесты на основании данных трассировок. • Простота интеграций: интегрируется в существующую экосистему, включая логи, тесты, мониторинг ошибок и многое другое. • Воссоздание процессов: Helios всего за несколько кликов позволяет в точности воссоздавать рабочие процессы, в том числе HTTP-запросы, сообщения Kafka и RabbitMQ, а также вызовы Lambda. ▍ Популярные способы использования • Распределённая трассировка • Интеграция трассировок в многоязыковое приложение • Наблюдаемость serverless-приложения • Устранение неполадок в тестах • Информация о вызовах API • Анализ и выявление узких мест Prometheus Prometheus — это опенсорсный инструмент, широко используемый для обеспечения наблюдаемости в нативных облачных окружениях. Он может собирать и хранить данные временных последовательностей и предоставляет инструменты визуализации для анализа собранных данных. ▍ Основные возможности • Сбор данных: он может скрейпить метрики из различных источников, в том числе из приложений, сервисов и систем. Также он «из коробки» поддерживает множество форматов данных, в том числе логи, трассировки и метрики. • Хранилище данных: он сохраняет собранные данные в базе данных временных последовательностей, позволяя эффективно запрашивать и агрегировать данные с течением времени. • Система алертов: инструмент включает в себя встроенную систему алертов, которая может запускать алерты на основании запросов. • Исследование сервисов: он может автоматически распознавать и скрейпить метрики сервисов, работающих в различных окружениях, например, Kubernetes и в других системах управления контейнерами. • Интеграция с Grafana: инструмент имеет гибкую интеграцию с Grafana, позволяющей создавать дэшборды для отображения и анализа метрик Prometheus. ▍ Ограничения • Ограниченные возможности анализа первопричин: инструмент в первую очередь предназначен для мониторинга и алертов. Поэтому он не предоставляет встроенных возможностей аналитики первопричин проблем. • Масштабирование: хотя инструмент может обрабатывать множество метрик, это может привести к большой трате ресурсов, поскольку Prometheus хранит все данные в памяти. • Моделирование данных: содержит модель данных на основе пар «ключ-значение» и не поддерживает вложенных полей и join. ▍ Популярные способы применения • Сбор и хранение метрик • Система алертов • Исследование сервисов Grafana Grafana — это опенсорсный инструмент, в первую очередь используемый для визуализации и мониторинга данных. Он позволяет с лёгкостью создавать интерактивные дэшборды для визуализации и анализа данных из различных источников. ▍ Основные возможности • Визуализация данных: создаёт настраиваемые и интерактивные дэшборды для визуализации метрик и логов из различных источников данных. • Система алертов: позволяет настраивать алерты на основании состония метрик для информирования о потенциальных проблемах. • Выявление аномалий: позволяет настроить выявление аномалий для автоматического определения и отправки алертов в случае аномального поведения в метриках. • Анализ первопричин: позволяет углубиться в метрики для анализа первопричин, предоставляя подробную информацию с историческим контекстом. ▍ Ограничения • Хранение данных: архитектура инструмента не поддерживает долговременное хранение и для сохранения метрик и логов требует дополнительных инструментов наподобие Prometheus или Elasticsearch. • Моделирование данных: Grafana не предоставляет расширенных возможностей моделирования данных. То есть она не позволяет моделировать конкретные типы данных и выполнять сложные запросы. • Агрегирование данных: Grafana не содержит встроенных функций агрегирования. ▍ Популярные способы применения • Визуализация метрик • Система алертов • Выявление аномалий Elasticsearch, Logstash и Kibana (ELK) Стек ELK — это популярное опенсорсное решение, помогающее управлять логами и анализировать данные. Оно состоит из трёх компонентов: Elasticsearch, Logstash и Kibana. Elasticsearch — это движок распределённого поиска и аналитики, способный обрабатывать большие объёмы структурированных и неструктурированных данных; он позволяет хранить и индексировать большие массивы данных, а также выполнять поиск по ним. Logstash — это конвейер сбора и обработки данных, позволяющий собирать, обрабатывать и обогащать данные из множества источников, например, файлов логов. Kibana — это инструмент визуализации и исследования данных, позволяющий создавать интерактивные дэшборды и визуализации на основе данных, находящихся в Elasticsearch. ▍ Основные возможности • Управление логами: ELK позволяет собирать, обрабатывать, хранить и анализировать данные логов и метрики из множества источников, предоставляя централизованную консоль для поиска по логам. • Поиск и анализ: позволяет выполнять поиск и анализ релевантных данных логов, что критически важно для выявления и устранения первопричин проблем. • Визуализация данных: Kibana позволяет создавать настраиваемые дэшборды, которые способны визуализировать данные логов и метрики из множества источников данных. • Выявление аномалий: Kibana позволяет создавать алерты для аномальной активности в данных логов. • Анализ первопричин: стек ELK позволяет глубоко изучать данные логов, чтобы лучше понять первопричины, предоставляя подробные логи и исторический контекст. ▍ Ограничения • Трассировка: ELK нативно не поддерживает распределённую трассировку. Поэтому может понадобиться применение дополнительных инструментов наподобие Jaeger. • Мониторинг в реальном времени: архитектура ELK позволяет ему качественно выполнять задачи платформы управления логами и анализа данных. Однако в отчётности логов присутствует незначительная задержка, и пользователям приходится ждать. • Сложная настройка и поддержка: для платформы требуется сложный процесс настройки и поддержки. Кроме того, для управления большими объёмами данных и множественными источниками данных требуются специфические знания. ▍ Популярные способы применения • Управление логами • Визуализация данных • Комплаенс и безопасность InfluxDB и Telegraf InfluxDB и Telegraf — это опенсорсные инструменты, популярные благодаря своим возможностям по хранению и мониторингу данных временных последовательностей. InfluxDB — это база данных временных последовательностей, хранящая большие объёмы данных временных последовательностей и выполняющая запросы к ним при помощи своего языка запросов, напоминающего SQL. Telegraf — это хорошо известный агент сбора данных, способный собирать и отправлять метрики широкому выбору получателей, например, InfluxDB. Также он поддерживает многие источники данных. ▍ Основные возможности Комбинация из InfluxDB и Telegraf предоставляет множество возможностей, повышающих наблюдаемость приложений. • Сбор и хранение метрик: Telegraf позволяет собирать метрики из множества источников и отправлять их в InfluxDB для хранения и анализа. • Визуализация данных: InfluxDB можно интегрировать со сторонними инструментами визуализации наподобие Grafana для создания интерактивных дэшбордов. • Масштабируемость: архитектура InfluxDB позволяет обрабатывать большие объёмы данных временных последовательностей и выполнять горизонтальное масштабирование. • Поддержка множества источников данных: Telegraf поддерживает более двухсот плагинов ввода для сбора метрик. ▍ Ограничения • Ограниченные возможности алертинга: в обоих инструментах отсутствуют возможности алертинга и для его подключения необходима интеграция сторонних сервисов. • Ограниченный анализ первопроичин: в этих инструментах отсутствуют нативные возможности анализа первопричин и необходима интеграция сторонних сервисов. ▍ Популярные способы применения • Сбор и хранение метрик • Мониторинг Datadog Datadog — это популярная облачная платформа для мониторинга и аналитики. Она широко используется для получения информации о здоровье и производительности распределённых систем с целью заблаговременного устранения проблем. ▍ Основные возможности • Многооблачная поддержка: пользователи могут выполнять мониторинг приложений, работающих на облачных платформах нескольких поставщиков, например, AWS, Azure, GCP и так далее. • Карты сервисов: позволяют выполнять визуализацию зависимостей сервисов, местоположений, сервисов и контейнеров. • Аналитика трассировок: пользователи могут анализировать трассировки, предоставляя подробную информацию о производительности приложений. • Анализ первопричин: позволяет глубоко изучать метрики и трассировки, чтобы понять первопричину проблем, предоставляя подробную информацию с историческим контекстом. • Выявление аномалий: может настраивать систему выявления аномалий, которая автоматически выявляет аномальное поведение в метриках и создаёт алерты о нём. ▍ Ограничения • Затраты: Datadog — это облачный платный сервис, стоимость которого увеличивается при развёртывании крупномасштабных систем. • Ограниченная поддержка потребления, хранения и индексации логов: Datadog по умолчанию не предоставляет поддержку анализа логов. Необходимо отдельно приобретать поддержку потребления и индексации логов. Поэтому большинство организаций принимает решение хранить ограниченное количество логов, что может вызвать неудобства при устранении проблем, поскольку отсутствует доступ к полной истории проблемы. • Нехватка контроля за хранением данных: Datadog хранит данные на собственных серверах и не позволяет пользователям хранить данные локально или в дата-центрах компании. ▍ Популярные способы применения • Конвейеры наблюдаемости • Распределённая трассировка • Мониторинг контейнеров New Relic New Relic — это облачная платформа мониторинга и аналитики, позволяющая выполнять мониторинг приложений и систем в распределённом окружении. Она использует сервис «New Relic Edge» для распределённой трассировки и способна выполнять наблюдение за 100% трассировок приложения. ▍ Основные возможности • Мониторинг производительности приложений: предоставляет комплексное решение APM для мониторинга производительности приложений и устранения проблем. • Многооблачная поддержка: поддерживает мониторинг приложений на облачных платформах нескольких поставщиков, например, AWS, Azure, GCP и так далее. • Аналитика трассировок: позволяет анализировать трассировки, предоставляя подробную информацию о производительности системы и приложений. • Анализ первопричин: позволяет глубоко изучать матрики и трассировки для анализа первопричин проблем. • Управление логами: собирает, обрабатывает и анализирует данные логов из различных источников, обеспечивая всеобъемлющую картину логов. ▍ Ограничения • Ограниченная опенсорсная интеграция: New Relic — это платформа с закрытыми исходниками, поэтому её интеграция с опенсорсными инструментами может быть ограниченной. • Затраты: New Relic может быть более дорогим по сравнению с другими решениями при работе с крупномасштабными системами. ▍ Популярные способы применения • Мониторинг производительности приложений • Многооблачный мониторинг • Аналитика трассировок AppDynamics AppDynamics — это платформа мониторинга и аналитики, позволяющая отслеживать и визуализировать каждый компонент приложения, а также управлять ими. Кроме того, она позволяет выполнять анализ первопричин для выявления внутренних проблем, которые могут влиять на производительность приложения. ▍ Основные возможности • Сбор данных: пользователи могут собирать метрики и трассировки из множества источников: хостов, контейнеров, облачных сервисов и приложений. • Выявление аномалий: позволяет настраивать систему выявления аномалий, которая выявляет аномальное поведение и сообщает о нём при помощи алертов. • Аналитика трассировок: пользователи могут анализировать трассировки и получать подробную информацию о производительности. Мониторинг производительности приложений: предоставляет комплексное решение APM, позволяющее выполнять мониторинг и устранение проблем производительности приложения. • Ограниченные возможности настройки: по сравнению с другими инструментами, опции настройки не очень гибки, потому что пользователи не могут настраивать решение самостоятельно. ▍ Популярные способы применения • Мониторинг производительности приложений • Многооблачный мониторинг • Управление бизнес-транзакциями Выбор лучшего инструмента наблюдаемости Наблюдаемость — неотъемлемая часть разработки и эксплуатации современного ПО. Она помогает компаниям выполнять мониторинг здоровья и производительности систем и быстро решать проблемы ещё до того, как они станут критичными. В этой статье мы рассказали об одиннадцати лучших инструментах наблюдаемости, о которых должны знать разработчики при работе с распределёнными системами. Как видите, каждый инструмент имеет свои сильные стороны и ограничения. Поэтому чтобы найти подходящий для вас инструмент, следует сравнить его с требованиями вашей системы. Выбор наилучшего инструмента наблюдаемости для вашей организации зависит от конкретных потребностей, таких, как окружение, технологический стек, опыт разработчиков, профили пользователей, требования к мониторингу и устранению проблем, а также рабочие процессы. Надеюсь, эта статья была для вас полезной. Telegram-канал с розыгрышами призов, новостями IT и постами о ретроиграх  ️   Telegram ВКонтакте Twitter 327 Карма 576 Рейтинг @ Пользователь Комментарии 3 Публикации Теги:   ruvds_перевод , наблюдаемость , observability , graphana , prometheus , helios , логи , метрики , трассировка Хабы:   Блог компании  , Open source , Хранение данных , Облачные сервисы , Микросервисы 9 21 3 ЛУЧШИЕ ЗА СУТКИ  ПОХОЖИЕ Ваш аккаунт Разделы Информация Услуги  ·   ·   ·   ·   ·   ·   ·   ·   ·   ·  ИНФОРМАЦИЯ Сайт ruvds.com Дата регистрации 18 марта 2016 Дата основания 27 июля 2015 Численность 11–30 человек Местоположение Россия Представитель ruvds Войти Регистрация Публикации Новости Хабы Компании Авторы Песочница Устройство сайта Для авторов Для компаний Документы Соглашение Конфиденциальность Корпоративный блог Медийная реклама Нативные проекты Образовательные программы Стартапам Мегапроекты Настройка языка Техническая поддержка Вернуться на старую версию © 2006–2023, Habr ",4 часа назад,"Хабы:   Блог компании  , Open source , Хранение данных , Облачные сервисы , Микросервисы ",2376.9, рейтинг автор оригинала   часа назад инструменты наблюдаемости о которых нужно знать в году блог компании   хранение данных облачные сервисы мик перевод когда организации переходят в облако их системы тоже начинают стремиться к распределённым архитектурам один из самых распространённых примеров этого использование микросервисов однако это также создаёт новые сложности с точки зрения наблюдаемости необходимо подбирать подходящие инструменты для мониторинга отслеживания и трассировки этих систем при помощи анализа выходных результатов посредством метрик логов и трассировок это позволяет командам разработчиков быстро выявлять первопричины проблем устранять их и оптимизировать производительность приложений ускоряя выпуск кода в этой статье мы рассмотрим возможности ограничения и важные особенности одиннадцати популярных инструментов наблюдаемости что позволит вам выбрать наиболее подходящий для вашего проекта   это решение по обеспечению наблюдаемости для разработчиков предоставляющее информацию по всему потоку приложений оно включает в себя фреймворк распространения контекста  и обеспечивает наблюдение за микросервисами  функциями базами данных и сторонними  можно протестировать песочницу продукта или использовать его бесплатно зарегистрировавшись здесь ▍ основные возможности • обеспечение полного контроля  предоставляет информацию о распределённой трассировке в полном контексте показывает как передаются данные через всё приложение в любом окружении • визуализация позволяет пользователям собирать и визуализировать данные трассировок из множественных источников данных чтобы исследовать и устранять потенциальные проблемы • многоязыковая поддержка поддерживает множество языков и фреймворков в том числе          и  • обмен и многократное использование вы с лёгкостью можете сотрудничать с участниками команды обмениваясь через  трассировками тестами и триггерами кроме того  позволяет многократно использовать запросы и полезные нагрузки между участниками команды • автоматическая генерация тестов автоматически генерирует тесты на основании данных трассировок • простота интеграций интегрируется в существующую экосистему включая логи тесты мониторинг ошибок и многое другое • воссоздание процессов  всего за несколько кликов позволяет в точности воссоздавать рабочие процессы в том числе  запросы сообщения  и  а также вызовы  ▍ популярные способы использования • распределённая трассировка • интеграция трассировок в многоязыковое приложение • наблюдаемость  приложения • устранение неполадок в тестах • информация о вызовах  • анализ и выявление узких мест   это опенсорсный инструмент широко используемый для обеспечения наблюдаемости в нативных облачных окружениях он может собирать и хранить данные временных последовательностей и предоставляет инструменты визуализации для анализа собранных данных ▍ основные возможности • сбор данных он может скрейпить метрики из различных источников в том числе из приложений сервисов и систем также он из коробки поддерживает множество форматов данных в том числе логи трассировки и метрики • хранилище данных он сохраняет собранные данные в базе данных временных последовательностей позволяя эффективно запрашивать и агрегировать данные с течением времени • система алертов инструмент включает в себя встроенную систему алертов которая может запускать алерты на основании запросов • исследование сервисов он может автоматически распознавать и скрейпить метрики сервисов работающих в различных окружениях например  и в других системах управления контейнерами • интеграция с  инструмент имеет гибкую интеграцию с  позволяющей создавать дэшборды для отображения и анализа метрик  ▍ ограничения • ограниченные возможности анализа первопричин инструмент в первую очередь предназначен для мониторинга и алертов поэтому он не предоставляет встроенных возможностей аналитики первопричин проблем • масштабирование хотя инструмент может обрабатывать множество метрик это может привести к большой трате ресурсов поскольку  хранит все данные в памяти • моделирование данных содержит модель данных на основе пар ключ значение и не поддерживает вложенных полей и  ▍ популярные способы применения • сбор и хранение метрик • система алертов • исследование сервисов   это опенсорсный инструмент в первую очередь используемый для визуализации и мониторинга данных он позволяет с лёгкостью создавать интерактивные дэшборды для визуализации и анализа данных из различных источников ▍ основные возможности • визуализация данных создаёт настраиваемые и интерактивные дэшборды для визуализации метрик и логов из различных источников данных • система алертов позволяет настраивать алерты на основании состония метрик для информирования о потенциальных проблемах • выявление аномалий позволяет настроить выявление аномалий для автоматического определения и отправки алертов в случае аномального поведения в метриках • анализ первопричин позволяет углубиться в метрики для анализа первопричин предоставляя подробную информацию с историческим контекстом ▍ ограничения • хранение данных архитектура инструмента не поддерживает долговременное хранение и для сохранения метрик и логов требует дополнительных инструментов наподобие  или  • моделирование данных  не предоставляет расширенных возможностей моделирования данных то есть она не позволяет моделировать конкретные типы данных и выполнять сложные запросы • агрегирование данных  не содержит встроенных функций агрегирования ▍ популярные способы применения • визуализация метрик • система алертов • выявление аномалий   и   стек  это популярное опенсорсное решение помогающее управлять логами и анализировать данные оно состоит из трёх компонентов   и   это движок распределённого поиска и аналитики способный обрабатывать большие объёмы структурированных и неструктурированных данных он позволяет хранить и индексировать большие массивы данных а также выполнять поиск по ним  это конвейер сбора и обработки данных позволяющий собирать обрабатывать и обогащать данные из множества источников например файлов логов  это инструмент визуализации и исследования данных позволяющий создавать интерактивные дэшборды и визуализации на основе данных находящихся в  ▍ основные возможности • управление логами  позволяет собирать обрабатывать хранить и анализировать данные логов и метрики из множества источников предоставляя централизованную консоль для поиска по логам • поиск и анализ позволяет выполнять поиск и анализ релевантных данных логов что критически важно для выявления и устранения первопричин проблем • визуализация данных  позволяет создавать настраиваемые дэшборды которые способны визуализировать данные логов и метрики из множества источников данных • выявление аномалий  позволяет создавать алерты для аномальной активности в данных логов • анализ первопричин стек  позволяет глубоко изучать данные логов чтобы лучше понять первопричины предоставляя подробные логи и исторический контекст ▍ ограничения • трассировка  нативно не поддерживает распределённую трассировку поэтому может понадобиться применение дополнительных инструментов наподобие  • мониторинг в реальном времени архитектура  позволяет ему качественно выполнять задачи платформы управления логами и анализа данных однако в отчётности логов присутствует незначительная задержка и пользователям приходится ждать • сложная настройка и поддержка для платформы требуется сложный процесс настройки и поддержки кроме того для управления большими объёмами данных и множественными источниками данных требуются специфические знания ▍ популярные способы применения • управление логами • визуализация данных • комплаенс и безопасность  и   и  это опенсорсные инструменты популярные благодаря своим возможностям по хранению и мониторингу данных временных последовательностей  это база данных временных последовательностей хранящая большие объёмы данных временных последовательностей и выполняющая запросы к ним при помощи своего языка запросов напоминающего   это хорошо известный агент сбора данных способный собирать и отправлять метрики широкому выбору получателей например  также он поддерживает многие источники данных ▍ основные возможности комбинация из  и  предоставляет множество возможностей повышающих наблюдаемость приложений • сбор и хранение метрик  позволяет собирать метрики из множества источников и отправлять их в  для хранения и анализа • визуализация данных  можно интегрировать со сторонними инструментами визуализации наподобие  для создания интерактивных дэшбордов • масштабируемость архитектура  позволяет обрабатывать большие объёмы данных временных последовательностей и выполнять горизонтальное масштабирование • поддержка множества источников данных  поддерживает более двухсот плагинов ввода для сбора метрик ▍ ограничения • ограниченные возможности алертинга в обоих инструментах отсутствуют возможности алертинга и для его подключения необходима интеграция сторонних сервисов • ограниченный анализ первопроичин в этих инструментах отсутствуют нативные возможности анализа первопричин и необходима интеграция сторонних сервисов ▍ популярные способы применения • сбор и хранение метрик • мониторинг   это популярная облачная платформа для мониторинга и аналитики она широко используется для получения информации о здоровье и производительности распределённых систем с целью заблаговременного устранения проблем ▍ основные возможности • многооблачная поддержка пользователи могут выполнять мониторинг приложений работающих на облачных платформах нескольких поставщиков например    и так далее • карты сервисов позволяют выполнять визуализацию зависимостей сервисов местоположений сервисов и контейнеров • аналитика трассировок пользователи могут анализировать трассировки предоставляя подробную информацию о производительности приложений • анализ первопричин позволяет глубоко изучать метрики и трассировки чтобы понять первопричину проблем предоставляя подробную информацию с историческим контекстом • выявление аномалий может настраивать систему выявления аномалий которая автоматически выявляет аномальное поведение в метриках и создаёт алерты о нём ▍ ограничения • затраты  это облачный платный сервис стоимость которого увеличивается при развёртывании крупномасштабных систем • ограниченная поддержка потребления хранения и индексации логов  по умолчанию не предоставляет поддержку анализа логов необходимо отдельно приобретать поддержку потребления и индексации логов поэтому большинство организаций принимает решение хранить ограниченное количество логов что может вызвать неудобства при устранении проблем поскольку отсутствует доступ к полной истории проблемы • нехватка контроля за хранением данных  хранит данные на собственных серверах и не позволяет пользователям хранить данные локально или в дата центрах компании ▍ популярные способы применения • конвейеры наблюдаемости • распределённая трассировка • мониторинг контейнеров     это облачная платформа мониторинга и аналитики позволяющая выполнять мониторинг приложений и систем в распределённом окружении она использует сервис    для распределённой трассировки и способна выполнять наблюдение за трассировок приложения ▍ основные возможности • мониторинг производительности приложений предоставляет комплексное решение  для мониторинга производительности приложений и устранения проблем • многооблачная поддержка поддерживает мониторинг приложений на облачных платформах нескольких поставщиков например    и так далее • аналитика трассировок позволяет анализировать трассировки предоставляя подробную информацию о производительности системы и приложений • анализ первопричин позволяет глубоко изучать матрики и трассировки для анализа первопричин проблем • управление логами собирает обрабатывает и анализирует данные логов из различных источников обеспечивая всеобъемлющую картину логов ▍ ограничения • ограниченная опенсорсная интеграция   это платформа с закрытыми исходниками поэтому её интеграция с опенсорсными инструментами может быть ограниченной • затраты   может быть более дорогим по сравнению с другими решениями при работе с крупномасштабными системами ▍ популярные способы применения • мониторинг производительности приложений • многооблачный мониторинг • аналитика трассировок   это платформа мониторинга и аналитики позволяющая отслеживать и визуализировать каждый компонент приложения а также управлять ими кроме того она позволяет выполнять анализ первопричин для выявления внутренних проблем которые могут влиять на производительность приложения ▍ основные возможности • сбор данных пользователи могут собирать метрики и трассировки из множества источников хостов контейнеров облачных сервисов и приложений • выявление аномалий позволяет настраивать систему выявления аномалий которая выявляет аномальное поведение и сообщает о нём при помощи алертов • аналитика трассировок пользователи могут анализировать трассировки и получать подробную информацию о производительности мониторинг производительности приложений предоставляет комплексное решение  позволяющее выполнять мониторинг и устранение проблем производительности приложения • ограниченные возможности настройки по сравнению с другими инструментами опции настройки не очень гибки потому что пользователи не могут настраивать решение самостоятельно ▍ популярные способы применения • мониторинг производительности приложений • многооблачный мониторинг • управление бизнес транзакциями выбор лучшего инструмента наблюдаемости наблюдаемость неотъемлемая часть разработки и эксплуатации современного по она помогает компаниям выполнять мониторинг здоровья и производительности систем и быстро решать проблемы ещё до того как они станут критичными в этой статье мы рассказали об одиннадцати лучших инструментах наблюдаемости о которых должны знать разработчики при работе с распределёнными системами как видите каждый инструмент имеет свои сильные стороны и ограничения поэтому чтобы найти подходящий для вас инструмент следует сравнить его с требованиями вашей системы выбор наилучшего инструмента наблюдаемости для вашей организации зависит от конкретных потребностей таких как окружение технологический стек опыт разработчиков профили пользователей требования к мониторингу и устранению проблем а также рабочие процессы надеюсь эта статья была для вас полезной  канал с розыгрышами призов новостями  и постами о ретроиграх ️  вконтакте  карма рейтинг пользователь комментарии публикации теги  перевод наблюдаемость     логи метрики трассировка хабы блог компании   хранение данных облачные сервисы микросервисы лучшие за сутки похожие ваш аккаунт разделы информация услуги · · · · · · · · · · информация сайт   дата регистрации марта дата основания июля численность – человек местоположение россия представитель  войти регистрация публикации новости хабы компании авторы песочница устройство сайта для авторов для компаний документы соглашение конфиденциальность корпоративный блог медийная реклама нативные проекты образовательные программы стартапам мегапроекты настройка языка техническая поддержка вернуться на старую версию © –  ,оригинала часа назад инструменты наблюдаемости которых нужно знать году компании хранение облачные сервисы мик перевод организации переходят облако системы начинают стремиться распределённым архитектурам самых распространённых примеров микросервисов однако также создаёт новые сложности точки зрения наблюдаемости необходимо подбирать подходящие инструменты мониторинга отслеживания трассировки этих систем помощи анализа выходных результатов посредством метрик логов трассировок позволяет командам разработчиков быстро выявлять первопричины проблем устранять оптимизировать производительность приложений ускоряя выпуск статье рассмотрим возможности ограничения важные особенности одиннадцати популярных инструментов наблюдаемости позволит выбрать наиболее подходящий вашего проекта обеспечению наблюдаемости разработчиков предоставляющее информацию всему потоку приложений оно включает фреймворк распространения контекста обеспечивает наблюдение микросервисами функциями базами сторонними протестировать песочницу продукта бесплатно зарегистрировавшись ▍ основные возможности • обеспечение полного контроля предоставляет информацию распределённой трассировке полном контексте показывает передаются всё приложение любом окружении • визуализация позволяет пользователям собирать визуализировать трассировок множественных источников исследовать устранять потенциальные проблемы • многоязыковая поддержка поддерживает множество языков фреймворков числе • обмен многократное лёгкостью можете сотрудничать участниками команды обмениваясь трассировками тестами триггерами кроме позволяет многократно запросы полезные нагрузки участниками команды • автоматическая генерация тестов автоматически генерирует тесты основании трассировок • простота интеграций интегрируется существующую экосистему включая логи тесты мониторинг ошибок многое другое • воссоздание процессов несколько кликов позволяет точности воссоздавать рабочие процессы числе запросы сообщения также вызовы ▍ популярные способы использования • распределённая трассировка • интеграция трассировок многоязыковое приложение • наблюдаемость приложения • устранение неполадок тестах • информация вызовах • анализ выявление узких мест опенсорсный инструмент широко используемый обеспечения наблюдаемости нативных облачных окружениях собирать хранить временных последовательностей предоставляет инструменты визуализации анализа собранных ▍ основные возможности • сбор скрейпить метрики различных источников числе приложений сервисов систем также коробки поддерживает множество форматов числе логи трассировки метрики • хранилище сохраняет собранные базе временных последовательностей позволяя эффективно запрашивать агрегировать течением времени • система алертов инструмент включает встроенную систему алертов которая запускать алерты основании запросов • исследование сервисов автоматически распознавать скрейпить метрики сервисов работающих различных окружениях например других системах управления контейнерами • интеграция инструмент имеет гибкую интеграцию позволяющей создавать дэшборды отображения анализа метрик ▍ ограничения • ограниченные возможности анализа первопричин инструмент первую очередь предназначен мониторинга алертов поэтому предоставляет встроенных возможностей аналитики первопричин проблем • масштабирование хотя инструмент обрабатывать множество метрик привести большой трате ресурсов поскольку хранит памяти • моделирование содержит модель основе пар ключ значение поддерживает вложенных полей ▍ популярные способы применения • сбор хранение метрик • система алертов • исследование сервисов опенсорсный инструмент первую очередь используемый визуализации мониторинга позволяет лёгкостью создавать интерактивные дэшборды визуализации анализа различных источников ▍ основные возможности • визуализация создаёт настраиваемые интерактивные дэшборды визуализации метрик логов различных источников • система алертов позволяет настраивать алерты основании состония метрик информирования потенциальных проблемах • выявление аномалий позволяет настроить выявление аномалий автоматического определения отправки алертов случае аномального поведения метриках • анализ первопричин позволяет углубиться метрики анализа первопричин предоставляя подробную информацию историческим контекстом ▍ ограничения • хранение архитектура инструмента поддерживает долговременное хранение сохранения метрик логов требует дополнительных инструментов наподобие • моделирование предоставляет расширенных возможностей моделирования позволяет моделировать конкретные типы выполнять сложные запросы • агрегирование содержит встроенных функций агрегирования ▍ популярные способы применения • визуализация метрик • система алертов • выявление аномалий стек популярное опенсорсное помогающее управлять логами анализировать оно состоит трёх компонентов движок распределённого поиска аналитики способный обрабатывать большие объёмы структурированных неструктурированных позволяет хранить индексировать большие массивы также выполнять поиск конвейер сбора обработки позволяющий собирать обрабатывать обогащать множества источников например файлов логов инструмент визуализации исследования позволяющий создавать интерактивные дэшборды визуализации основе находящихся ▍ основные возможности • управление логами позволяет собирать обрабатывать хранить анализировать логов метрики множества источников предоставляя централизованную консоль поиска логам • поиск анализ позволяет выполнять поиск анализ релевантных логов критически важно выявления устранения первопричин проблем • визуализация позволяет создавать настраиваемые дэшборды которые способны визуализировать логов метрики множества источников • выявление аномалий позволяет создавать алерты аномальной активности логов • анализ первопричин стек позволяет глубоко изучать логов понять первопричины предоставляя подробные логи исторический контекст ▍ ограничения • трассировка нативно поддерживает распределённую трассировку поэтому понадобиться применение дополнительных инструментов наподобие • мониторинг реальном времени архитектура позволяет качественно выполнять платформы управления логами анализа однако отчётности логов присутствует незначительная задержка пользователям приходится ждать • сложная настройка поддержка платформы требуется сложный процесс настройки поддержки кроме управления большими объёмами множественными источниками требуются специфические знания ▍ популярные способы применения • управление логами • визуализация • комплаенс безопасность опенсорсные инструменты популярные благодаря своим возможностям хранению мониторингу временных последовательностей временных последовательностей хранящая большие объёмы временных последовательностей выполняющая запросы помощи своего языка запросов напоминающего известный агент сбора способный собирать отправлять метрики широкому выбору получателей например также поддерживает многие источники ▍ основные возможности комбинация предоставляет множество возможностей повышающих наблюдаемость приложений • сбор хранение метрик позволяет собирать метрики множества источников отправлять хранения анализа • визуализация интегрировать сторонними инструментами визуализации наподобие создания интерактивных дэшбордов • масштабируемость архитектура позволяет обрабатывать большие объёмы временных последовательностей выполнять горизонтальное масштабирование • поддержка множества источников поддерживает двухсот плагинов ввода сбора метрик ▍ ограничения • ограниченные возможности алертинга обоих инструментах отсутствуют возможности алертинга подключения необходима интеграция сторонних сервисов • ограниченный анализ первопроичин этих инструментах отсутствуют нативные возможности анализа первопричин необходима интеграция сторонних сервисов ▍ популярные способы применения • сбор хранение метрик • мониторинг популярная облачная платформа мониторинга аналитики широко используется получения информации здоровье производительности распределённых систем целью заблаговременного устранения проблем ▍ основные возможности • многооблачная поддержка пользователи могут выполнять мониторинг приложений работающих облачных платформах нескольких поставщиков например далее • карты сервисов позволяют выполнять визуализацию зависимостей сервисов местоположений сервисов контейнеров • аналитика трассировок пользователи могут анализировать трассировки предоставляя подробную информацию производительности приложений • анализ первопричин позволяет глубоко изучать метрики трассировки понять первопричину проблем предоставляя подробную информацию историческим контекстом • выявление аномалий настраивать систему выявления аномалий которая автоматически выявляет аномальное поведение метриках создаёт алерты нём ▍ ограничения • затраты облачный платный сервис стоимость которого увеличивается развёртывании крупномасштабных систем • ограниченная поддержка потребления хранения индексации логов умолчанию предоставляет поддержку анализа логов необходимо отдельно приобретать поддержку потребления индексации логов поэтому большинство организаций принимает хранить ограниченное количество логов вызвать неудобства устранении проблем поскольку отсутствует доступ полной истории проблемы • нехватка контроля хранением хранит собственных серверах позволяет пользователям хранить локально дата центрах компании ▍ популярные способы применения • конвейеры наблюдаемости • распределённая трассировка • мониторинг контейнеров облачная платформа мониторинга аналитики позволяющая выполнять мониторинг приложений систем распределённом окружении использует сервис распределённой трассировки способна выполнять наблюдение трассировок приложения ▍ основные возможности • мониторинг производительности приложений предоставляет комплексное мониторинга производительности приложений устранения проблем • многооблачная поддержка поддерживает мониторинг приложений облачных платформах нескольких поставщиков например далее • аналитика трассировок позволяет анализировать трассировки предоставляя подробную информацию производительности системы приложений • анализ первопричин позволяет глубоко изучать матрики трассировки анализа первопричин проблем • управление логами собирает обрабатывает анализирует логов различных источников обеспечивая всеобъемлющую картину логов ▍ ограничения • ограниченная опенсорсная интеграция платформа закрытыми исходниками поэтому её интеграция опенсорсными инструментами ограниченной • затраты дорогим сравнению другими решениями работе крупномасштабными системами ▍ популярные способы применения • мониторинг производительности приложений • многооблачный мониторинг • аналитика трассировок платформа мониторинга аналитики позволяющая отслеживать визуализировать каждый компонент приложения также управлять ими кроме позволяет выполнять анализ первопричин выявления внутренних проблем которые могут влиять производительность приложения ▍ основные возможности • сбор пользователи могут собирать метрики трассировки множества источников хостов контейнеров облачных сервисов приложений • выявление аномалий позволяет настраивать систему выявления аномалий которая выявляет аномальное поведение сообщает нём помощи алертов • аналитика трассировок пользователи могут анализировать трассировки получать подробную информацию производительности мониторинг производительности приложений предоставляет комплексное позволяющее выполнять мониторинг устранение проблем производительности приложения • ограниченные возможности настройки сравнению другими инструментами опции настройки очень гибки пользователи могут настраивать самостоятельно ▍ популярные способы применения • мониторинг производительности приложений • многооблачный мониторинг • управление бизнес транзакциями выбор лучшего инструмента наблюдаемости наблюдаемость неотъемлемая часть разработки эксплуатации современного помогает компаниям выполнять мониторинг здоровья производительности систем быстро решать проблемы ещё станут критичными статье рассказали одиннадцати лучших инструментах наблюдаемости которых должны знать разработчики работе распределёнными системами видите каждый инструмент имеет свои сильные стороны ограничения поэтому подходящий инструмент следует сравнить требованиями вашей системы выбор наилучшего инструмента наблюдаемости вашей организации зависит конкретных потребностей таких окружение технологический стек опыт разработчиков профили пользователей требования мониторингу устранению проблем также рабочие процессы надеюсь эта полезной канал розыгрышами призов новостями постами ретроиграх ️ вконтакте публикации теги перевод наблюдаемость логи метрики трассировка компании хранение облачные сервисы микросервисы лучшие сутки похожие ваш аккаунт разделы информация услуги · · · · · · · · · · информация сайт дата регистрации марта дата основания июля численность – человек местоположение россия представитель войти регистрация публикации новости компании авторы песочница устройство сайта авторов компаний документы соглашение конфиденциальность корпоративный медийная реклама нативные проекты образовательные программы стартапам мегапроекты настройка языка техническая поддержка вернуться старую версию © –,оригина час назад инструмент наблюдаем котор нужн знат год компан хранен облачн сервис мик перевод организац переход облак систем начина стрем распределен архитектур сам распространен пример микросервис однак такж созда нов сложност точк зрен наблюдаем необходим подбира подходя инструмент мониторинг отслеживан трассировк эт сист помощ анализ выходн результат посредств метрик лог трассировок позволя команд разработчик быстр выявля первопричин пробл устраня оптимизирова производительн приложен ускор выпуск стат рассмотр возможн ограничен важн особен одиннадцат популярн инструмент наблюдаем позвол выбра наибол подходя ваш проект обеспечен наблюдаем разработчик предоставля информац всем поток приложен он включа фреймворк распространен контекст обеспечива наблюден микросервис функц баз сторон протестирова песочниц продукт бесплатн зарегистрирова ▍ основн возможн • обеспечен полн контрол предоставля информац распределен трассировк полн контекст показыва переда все приложен люб окружен • визуализац позволя пользовател собира визуализирова трассировок множествен источник исследова устраня потенциальн проблем • многоязыков поддержк поддержива множеств язык фреймворк числ • обм многократн легкост может сотруднича участник команд обменив трассировк тест триггер кром позволя многократн запрос полезн нагрузк участник команд • автоматическ генерац тест автоматическ генерир тест основан трассировок • простот интеграц интегрир существ экосист включ лог тест мониторинг ошибок мног друг • воссоздан процесс нескольк клик позволя точност воссоздава рабоч процесс числ запрос сообщен такж вызов ▍ популярн способ использован • распределен трассировк • интеграц трассировок многоязыков приложен • наблюдаем приложен • устранен неполадок тест • информац вызов • анализ выявлен узк мест опенсорсн инструмент широк используем обеспечен наблюдаем нативн облачн окружен собира хран времен последовательн предоставля инструмент визуализац анализ собра ▍ основн возможн • сбор скрейп метрик различн источник числ приложен сервис сист такж коробк поддержива множеств формат числ лог трассировк метрик • хранилищ сохраня собра баз времен последовательн позвол эффективн запрашива агрегирова течен времен • систем алерт инструмент включа встроен сист алерт котор запуска алерт основан запрос • исследован сервис автоматическ распознава скрейп метрик сервис работа различн окружен например друг систем управлен контейнер • интеграц инструмент имеет гибк интеграц позволя создава дэшборд отображен анализ метрик ▍ ограничен • ограничен возможн анализ первопричин инструмент перв очеред предназнач мониторинг алерт поэт предоставля встроен возможн аналитик первопричин пробл • масштабирован хот инструмент обрабатыва множеств метрик привест больш трат ресурс поскольк хран памят • моделирован содерж модел основ пар ключ значен поддержива вложен пол ▍ популярн способ применен • сбор хранен метрик • систем алерт • исследован сервис опенсорсн инструмент перв очеред используем визуализац мониторинг позволя легкост создава интерактивн дэшборд визуализац анализ различн источник ▍ основн возможн • визуализац созда настраива интерактивн дэшборд визуализац метрик лог различн источник • систем алерт позволя настраива алерт основан состон метрик информирован потенциальн проблем • выявлен аномал позволя настро выявлен аномал автоматическ определен отправк алерт случа аномальн поведен метрик • анализ первопричин позволя углуб метрик анализ первопричин предоставл подробн информац историческ контекст ▍ ограничен • хранен архитектур инструмент поддержива долговремен хранен сохранен метрик лог треб дополнительн инструмент наподоб • моделирован предоставля расширен возможн моделирован позволя моделирова конкретн тип выполня сложн запрос • агрегирован содерж встроен функц агрегирован ▍ популярн способ применен • визуализац метрик • систем алерт • выявлен аномал стек популярн опенсорсн помога управля лог анализирова он состо трех компонент движок распределен поиск аналитик способн обрабатыва больш объем структурирова неструктурирова позволя хран индексирова больш массив такж выполня поиск конвейер сбор обработк позволя собира обрабатыва обогаща множеств источник например файл лог инструмент визуализац исследован позволя создава интерактивн дэшборд визуализац основ находя ▍ основн возможн • управлен лог позволя собира обрабатыва хран анализирова лог метрик множеств источник предоставл централизова консол поиск лог • поиск анализ позволя выполня поиск анализ релевантн лог критическ важн выявлен устранен первопричин пробл • визуализац позволя создава настраива дэшборд котор способн визуализирова лог метрик множеств источник • выявлен аномал позволя создава алерт аномальн активн лог • анализ первопричин стек позволя глубок изуча лог поня первопричин предоставл подробн лог историческ контекст ▍ ограничен • трассировк нативн поддержива распределен трассировк поэт понадоб применен дополнительн инструмент наподоб • мониторинг реальн времен архитектур позволя качествен выполня платформ управлен лог анализ однак отчетн лог присутств незначительн задержк пользовател приход ждат • сложн настройк поддержк платформ треб сложн процесс настройк поддержк кром управлен больш объем множествен источник треб специфическ знан ▍ популярн способ применен • управлен лог • визуализац • комплаенс безопасн опенсорсн инструмент популярн благодар сво возможн хранен мониторинг времен последовательн времен последовательн храня больш объем времен последовательн выполня запрос помощ сво язык запрос напомина известн агент сбор способн собира отправля метрик широк выбор получател например такж поддержива мног источник ▍ основн возможн комбинац предоставля множеств возможн повыша наблюдаем приложен • сбор хранен метрик позволя собира метрик множеств источник отправля хранен анализ • визуализац интегрирова сторон инструмент визуализац наподоб создан интерактивн дэшборд • масштабируем архитектур позволя обрабатыва больш объем времен последовательн выполня горизонтальн масштабирован • поддержк множеств источник поддержива двухсот плагин ввод сбор метрик ▍ ограничен • ограничен возможн алертинг обо инструмент отсутств возможн алертинг подключен необходим интеграц сторон сервис • ограничен анализ первопроичин эт инструмент отсутств нативн возможн анализ первопричин необходим интеграц сторон сервис ▍ популярн способ применен • сбор хранен метрик • мониторинг популярн облачн платформ мониторинг аналитик широк использ получен информац здоров производительн распределен сист цел заблаговремен устранен пробл ▍ основн возможн • многооблачн поддержк пользовател могут выполня мониторинг приложен работа облачн платформ нескольк поставщик например дал • карт сервис позволя выполня визуализац зависим сервис местоположен сервис контейнер • аналитик трассировок пользовател могут анализирова трассировк предоставл подробн информац производительн приложен • анализ первопричин позволя глубок изуча метрик трассировк поня первопричин пробл предоставл подробн информац историческ контекст • выявлен аномал настраива сист выявлен аномал котор автоматическ выявля аномальн поведен метрик созда алерт нем ▍ ограничен • затрат облачн платн сервис стоимост котор увеличива развертыван крупномасштабн сист • ограничен поддержк потреблен хранен индексац лог умолчан предоставля поддержк анализ лог необходим отдельн приобрета поддержк потреблен индексац лог поэт большинств организац принима хран ограничен количеств лог вызва неудобств устранен пробл поскольк отсутств доступ полн истор проблем • нехватк контрол хранен хран собствен сервер позволя пользовател хран локальн дат центр компан ▍ популярн способ применен • конвейер наблюдаем • распределен трассировк • мониторинг контейнер облачн платформ мониторинг аналитик позволя выполня мониторинг приложен сист распределен окружен использ сервис распределен трассировк способн выполня наблюден трассировок приложен ▍ основн возможн • мониторинг производительн приложен предоставля комплексн мониторинг производительн приложен устранен пробл • многооблачн поддержк поддержива мониторинг приложен облачн платформ нескольк поставщик например дал • аналитик трассировок позволя анализирова трассировк предоставл подробн информац производительн систем приложен • анализ первопричин позволя глубок изуча матрик трассировк анализ первопричин пробл • управлен лог собира обрабатыва анализир лог различн источник обеспечив всеобъемлющ картин лог ▍ ограничен • ограничен опенсорсн интеграц платформ закрыт исходник поэт е интеграц опенсорсн инструмент ограничен • затрат дорог сравнен друг решен работ крупномасштабн систем ▍ популярн способ применен • мониторинг производительн приложен • многооблачн мониторинг • аналитик трассировок платформ мониторинг аналитик позволя отслежива визуализирова кажд компонент приложен такж управля им кром позволя выполня анализ первопричин выявлен внутрен пробл котор могут влия производительн приложен ▍ основн возможн • сбор пользовател могут собира метрик трассировк множеств источник хост контейнер облачн сервис приложен • выявлен аномал позволя настраива сист выявлен аномал котор выявля аномальн поведен сообща нем помощ алерт • аналитик трассировок пользовател могут анализирова трассировк получа подробн информац производительн мониторинг производительн приложен предоставля комплексн позволя выполня мониторинг устранен пробл производительн приложен • ограничен возможн настройк сравнен друг инструмент опц настройк очен гибк пользовател могут настраива самостоятельн ▍ популярн способ применен • мониторинг производительн приложен • многооблачн мониторинг • управлен бизнес транзакц выбор лучш инструмент наблюдаем наблюдаем неотъемлем част разработк эксплуатац современ помога компан выполня мониторинг здоров производительн сист быстр реша проблем ещ станут критичн стат рассказа одиннадцат лучш инструмент наблюдаем котор должн знат разработчик работ распределен систем вид кажд инструмент имеет сво сильн сторон ограничен поэт подходя инструмент след сравн требован ваш систем выбор наилучш инструмент наблюдаем ваш организац завис конкретн потребн так окружен технологическ стек оп разработчик проф пользовател требован мониторинг устранен пробл такж рабоч процесс над эт полезн кана розыгрыш приз новост пост ретроигр ️ вконтакт публикац тег перевод наблюдаем лог метрик трассировк компан хранен облачн сервис микросервис лучш сутк похож ваш аккаунт раздел информац услуг · · · · · · · · · · информац сайт дат регистрац март дат основан июл числен – человек местоположен росс представител войт регистрац публикац новост компан автор песочниц устройств сайт автор компан документ соглашен конфиденциальн корпоративн медийн реклам нативн проект образовательн программ стартап мегапроект настройк язык техническ поддержк вернут стар верс © –,оригинал час назад инструмент наблюдаемость который нужно знать компания хранение облачный сервис мик перевод организация переходить облако система начинать стремиться распределённый архитектура самый распространить микросервис однако также создавать новый сложность точка зрение наблюдаемость необходимо подбирать подходящий инструмент мониторинг отслеживание трассировка система помощь анализ выходной результат посредством метрика лог трассировка позволять команда разработчик быстро выявлять первопричина проблема устранять оптимизировать производительность приложение ускорять выпуск рассмотреть возможность ограничение важный особенность одиннадцать популярный инструмент наблюдаемость позволить выбрать наиболее подходящий ваш обеспечение наблюдаемость разработчик предоставлять информация весь поток приложение оно включать фреймворк распространение контекст обеспечивать наблюдение микросервис сторонний протестировать песочница продукт бесплатно зарегистрироваться ▍ основной возможность • обеспечение полный контроль предоставлять информация распределить трассировка полный контекст показывать передаваться всё приложение любой окружение • визуализация позволять собирать визуализировать трассировка множественный источник исследовать устранять потенциальный проблема • многоязыковый поддержка поддерживать множество язык фреймворк число • обмен многократный лёгкость мочь сотрудничать участник команда обмениваться трассировка тест триггер кроме позволять многократно запрос полезный нагрузка участник команда • автоматический генерация тест автоматически генерировать тест основание трассировка • простота интеграция интегрироваться существующий экосистема включая лог тест мониторинг ошибка многое • воссоздание процесс несколько клик позволять точность воссоздавать рабочий процесс число запрос сообщение также вызов ▍ популярный способ • распределённый трассировка • интеграция трассировка многоязыковый приложение • наблюдаемость приложение • устранение неполадка тест • информация вызов • анализ выявление узкий место опенсорсный инструмент широко обеспечение наблюдаемость нативный облачный окружение собирать хранить временной последовательность предоставлять инструмент визуализация анализ собранный ▍ основной возможность • сбор скрейпить метрика различный источник число приложение сервис система также коробка поддерживать множество формат число лог трассировка метрика • хранилище сохранять собранный временной последовательность позволять эффективно запрашивать агрегировать течение • система алерот инструмент включать встроить система алерот который запускать алерот основание запрос • исследование сервис автоматически распознавать скрейпить метрика сервис работать различный окружение например система управление контейнер • интеграция инструмент иметь гибкий интеграция позволять создавать дэшборд отображение анализ метрика ▍ ограничение • ограниченный возможность анализ первопричина инструмент первый очередь предназначить мониторинг алерот поэтому предоставлять встроить возможность аналитик первопричина проблема • масштабирование хотя инструмент обрабатывать множество метрика привести большой трата ресурс поскольку хранить память • моделирование содержать модель основа пара ключ значение поддерживать вложить поле ▍ популярный способ применение • сбор хранение метрика • система алерот • исследование сервис опенсорсный инструмент первый очередь визуализация мониторинг позволять лёгкость создавать интерактивный дэшборд визуализация анализ различный источник ▍ основной возможность • визуализация создавать настраивать интерактивный дэшборд визуализация метрика лог различный источник • система алерот позволять настраивать алерот основание состония метрика информирование потенциальный проблема • выявление аномалия позволять настроить выявление аномалия автоматический определение отправка алерот случай аномальный поведение метрика • анализ первопричина позволять углубиться метрика анализ первопричина предоставлять подробный информация исторический контекст ▍ ограничение • хранение архитектура инструмент поддерживать долговременный хранение сохранение метрика лог требовать дополнительный инструмент наподобие • моделирование предоставлять расширить возможность моделирование позволять моделировать конкретный тип выполнять сложный запрос • агрегирование содержать встроить агрегирование ▍ популярный способ применение • визуализация метрика • система алерот • выявление аномалия стек популярный опенсорсный помогать управлять лог анализировать оно состоять компонент движок распределённый поиск аналитик способный обрабатывать больший объём структурировать неструктурированный позволять хранить индексировать больший массив также выполнять поиск конвейер сбор обработка позволять собирать обрабатывать обогащать множество источник например лог инструмент визуализация исследование позволять создавать интерактивный дэшборд визуализация основа находиться ▍ основной возможность • управление лог позволять собирать обрабатывать хранить анализировать лог метрика множество источник предоставлять централизовать консоль поиск лог • поиск анализ позволять выполнять поиск анализ релевантный лог критически важно выявление устранение первопричина проблема • визуализация позволять создавать настраивать дэшборд который способный визуализировать лог метрика множество источник • выявление аномалия позволять создавать алерот аномальный активность лог • анализ первопричина стек позволять глубоко изучать лог понять первопричина предоставлять подробный лог исторический контекст ▍ ограничение • трассировка нативный поддерживать распределённый трассировка поэтому понадобиться применение дополнительный инструмент наподобие • мониторинг реальный архитектура позволять качественно выполнять платформа управление лог анализ однако отчётность лог присутствовать незначительный задержка приходиться ждать • сложный настройка поддержка платформа требоваться сложный процесс настройка поддержка кроме управление больший объём множественный источник требоваться специфический знание ▍ популярный способ применение • управление лог • визуализация • комплаенс безопасность опенсорсный инструмент популярный благодаря свой возможность хранение мониторинг временной последовательность временной последовательность хранить больший объём временной последовательность выполнять запрос помощь свой язык запрос напоминать известный агент сбор способный собирать отправлять метрика широкий выбор получатель например также поддерживать многие источник ▍ основной возможность комбинация предоставлять множество возможность повышать наблюдаемость приложение • сбор хранение метрика позволять собирать метрика множество источник отправлять хранение анализ • визуализация интегрировать сторонний инструмент визуализация наподобие создание интерактивный дэшбордовый • масштабируемость архитектура позволять обрабатывать больший объём временной последовательность выполнять горизонтальный масштабирование • поддержка множество источник поддерживать двести плагин ввод сбор метрика ▍ ограничение • ограниченный возможность алертинг оба инструмент отсутствовать возможность алертинг подключение необходимый интеграция сторонний сервис • ограниченный анализ первопроичина инструмент отсутствовать нативный возможность анализ первопричина необходимый интеграция сторонний сервис ▍ популярный способ применение • сбор хранение метрика • мониторинг популярный облачный платформа мониторинг аналитик широко использоваться получение информация здоровье производительность распределённый система цель заблаговременный устранение проблема ▍ основной возможность • многооблачный поддержка мочь выполнять мониторинг приложение работать облачный платформа несколько поставщик например далее • карта сервис позволять выполнять визуализация зависимость сервис местоположение сервис контейнер • аналитика трассировка мочь анализировать трассировка предоставлять подробный информация производительность приложение • анализ первопричина позволять глубоко изучать метрика трассировка понять первопричина проблема предоставлять подробный информация исторический контекст • выявление аномалия настраивать система выявление аномалия который автоматически выявлять аномальный поведение метрика создавать алерот ▍ ограничение • затрата облачный платный сервис стоимость который увеличиваться развёртывание крупномасштабный система • ограниченный поддержка потребление хранение индексация лог умолчание предоставлять поддержка анализ лог необходимо отдельно приобретать поддержка потребление индексация лог поэтому большинство организация принимать хранить ограниченный количество лог вызвать неудобство устранение проблема поскольку отсутствовать доступ полный история проблема • нехватка контроль хранение хранить собственный позволять хранить локально дата центр компания ▍ популярный способ применение • конвейер наблюдаемость • распределённый трассировка • мониторинг контейнер облачный платформа мониторинг аналитик позволять выполнять мониторинг приложение система распределённый окружение сервис распределить трассировка способный выполнять наблюдение трассировка приложение ▍ основной возможность • мониторинг производительность приложение предоставлять комплексный мониторинг производительность приложение устранение проблема • многооблачный поддержка поддерживать мониторинг приложение облачный платформа несколько поставщик например далее • аналитика трассировка позволять анализировать трассировка предоставлять подробный информация производительность система приложение • анализ первопричина позволять глубоко изучать матрик трассировка анализ первопричина проблема • управление лог собирать обрабатывать анализировать лог различный источник обеспечивать всеобъемлющий картина лог ▍ ограничение • ограниченный опенсорсный интеграция платформа закрытый исходник поэтому её интеграция опенсорсный инструмент ограниченный • затрата дорогой сравнение крупномасштабный система ▍ популярный способ применение • мониторинг производительность приложение • многооблачный мониторинг • аналитика трассировка платформа мониторинг аналитик позволять отслеживать визуализировать каждый компонент приложение также управлять кроме позволять выполнять анализ первопричина выявление внутренний проблема который мочь влиять производительность приложение ▍ основной возможность • сбор мочь собирать метрика трассировка множество источник хост контейнер облачный сервис приложение • выявление аномалия позволять настраивать система выявление аномалия который выявлять аномальный поведение сообщать помощь алерот • аналитика трассировка мочь анализировать трассировка получать подробный информация производительность мониторинг производительность приложение предоставлять комплексный позволять выполнять мониторинг устранение проблема производительность приложение • ограниченный возможность настройка сравнение инструмент опция настройка очень гибкий мочь настраивать самостоятельно ▍ популярный способ применение • мониторинг производительность приложение • многооблачный мониторинг • управление бизнес транзакция выбор хороший инструмент наблюдаемость наблюдаемость неотъемлемый часть разработка эксплуатация современный помогать компания выполнять мониторинг здоровье производительность система быстро решать проблема ещё стать критичный рассказать одиннадцать хороший инструмент наблюдаемость который должный знать разработчик распределённый система видеть каждый инструмент иметь свой сильный сторона ограничение поэтому подходящий инструмент следовать сравнить требование ваш система выбор хороший инструмент наблюдаемость ваш организация зависеть конкретный потребность окружение технологический стек опыт разработчик профиль требование мониторинг устранение проблема также рабочий процесс надеяться полезный канал розыгрыш приз новость ретроигра ️ вконтакте публикация тег перевод наблюдаемость лог метрика трассировка компания хранение облачный сервис микросервис хороший сутки похожий ваш аккаунт раздел информация услуга · · · · · · · · · · информация сайт дата регистрация март дата основание июль численность – человек местоположение россия представитель войти регистрация публикация новость компания песочница устройство сайт компания документ соглашение конфиденциальность корпоративный медийный реклама нативный образовательный стартап мегапроект настройка язык технический поддержка вернуться старый © –,0
7,История российской науки: напишем вместе? 1.3K,"4.58 Оценка 353.18 Рейтинг Хабр Экосистема для развития людей, вовлеченных в IT 8 февраля — день российской науки. Этот праздник отмечается в Академии Наук, в НИИ, вузах, исследовательских лабораториях по всей стране. Судьба российской науки непростая, всегда переплетённая с историей страны и ею же обусловленная: непростой путь к открытию МГУ, талантливые кулибины (и И.Кулибин) из глубинки, учёные в изгнании, Туполевская шарага, достижения института Гамалеи… Всё смешано, переплетено и влияло и влияет на весь мир. Величие российской науки прежде всего в людях, которые её создают, которые разрабатывают, изобретают, экспериментирую и точно знают, что делают.  В этот день всегда спорят медики, биологи, инженеры, программисты, филологи, физики, химики — чьи учёные научнее и главнее, кто определял и создавал будущее? Ответ простой: все, каждый — в своей сфере. Предлагаем сегодня собрать российские  открытия и учёных, которые вас вдохновляют, впечатляют, будоражат воображение и влияют (или повлияли) на вас. Напишем эту статью вместе? 10 часов назад История российской науки: напишем вместе?   1.3K Блог компании Хабр, Научно-популярное Ретроспектива  Технотекст Добавь свой раздел в статью про российскую науку Войти Моя лента Все потоки Разработка Администрирование Дизайн Менеджмент Маркетинг Научпоп Правила создания статьи Вы в комментариях рассказываете о том самом учёном и его изобретении, которые важны именно для вас, а мы добавляем ваши истории в общую статью и формируем самый крутой лонгрид об истории российской науки. Формат свободный, желательно (не обязательно!) отразить: ФИО учёного, его годы жизни основные изобретения краткая биография наиболее значимое изобретение (на ваш взгляд) чем вас вдохновил учёный, как повлиял на вас изображения приветствуются. Комментарии будут сохраняться и вы сможете их обсуждать — так, как и всегда. Автор самого заплюсованного описания получит приятный сюрприз от команды Хабра. Чур, википедию не копировать! Итак, поехали.  Николай Иванович Пирогов (1810 — 1881) великий российский врач, хирург Николай Пирогов в 14 лет поступил на первый курс медицинского факультета МГУ (тогда Московского университета). По окончании вуза он в числе семи лучших студентов отправился в Депт (Тарту) заниматься анатомическими исследованиями и готовиться к профессорской деятельности. Считается одним из лучших анатомов мира, родоначальник топографической анатомии. Именно он разрезал замороженное человеческое тело в четырёх плоскостях и создал атлас топографической анатомии, который стал незаменимым пособием для хирургов. Это был не просто учебный материал, но прежде всего возможность оперировать с минимальным травматизмом для пациента. Пирогов брался за любые операции, от ампутаций и извлечения камней до глазных манипуляций и сосудистых вмешательств. Именно он провёл в 1847 году первую свою операцию под наркозом, тщательно изучив свойства эфира и хлороформа. Затем в течение года прошло 300 подобных операций. Николай Пирогов — автор алгоритма сортировки раненных на поле брани, благодаря чему удалось спасти огромное количество жизней, а сам алгоритм до сих пор служит организации военной медицины. Именно он ввёл в практику российской медицины обеззараживание хлорной водой и настойкой йода. До сих пор хлорка, йодопирон, йодинол и йод служат хирургам и всем медикам верную службу. Николай Пирогов был первым учёным от медицины, о котором я узнала в возрасте 7 или 8 лет, уже будучи немного горящей «стать доктором». Жизнь повернулась самым причудливым образом, но изучение истории медицины сделало моё мышление структурным, комплексным и навсегда привило любовь к людям. Какие бы они ни были, они — люди, с болью, со стрессом, с заболеваниями и радостью выздоровления. Совершенно особенное ощущение. Художественный фильм «Пирогов» Гааз и Пирогов — лекторий «Достоевский». Хотя конкретно в этом фильме история Гааза потрясает гораздо больше. Семён Николаевич Корсаков (1787-1853) создатель первой в мире перфокарточной машины (табулятора) «для сравнения идей» Рассказывает @Motanto Его история меня когда-то поразила: только подумайте, кто-то что-то делал в программировании до Бэббиджа, да ещё и в Российской Империи. Ещё больше поразил тот факт, что Корсаков был обвинён современниками в пустой трате времени на изобретения, а его славные дела дошли до мирового научного сообщества и до нас с вами благодаря ""раскопкам"" учёных XX века, в частности благодаря математику и кибернетику Г.Н. Поварову. Потомственный дворянин, Семён Корсаков стал прародителем отечественной кибернетики. Он всегда видел своей задачей усиление работы разума с помочью различных механических устройств (чем вам не первобытное программирование?!). Кроме изобретённых им гомеоскопов и идеоскопа, он подарил миру идею перфокарт. Именно гомеоскопические перфорированные таблицы стали прототипом тех самых картонных карт. Устройства Корсакова помогали сравнивать таблицы и обрабатывать большие массивы данных, с помощью его устройств можно было решать задачи классификации. Корсаков видел бытовое применение своим изобретениям (реестры, каталоги, регистрации), ничего не патентовал и просто представил машины общественности. С.Н.Корсаков и машина для сравнения идей Однако комиссия из пяти ученых, возглавляемая молодым математиком академиком М. В. Остроградским, вынесла вердикт: «Господин Корсаков потратил чересчур много своих интеллектуальных сил, пытаясь научить других, как вовсе без оного интеллекта прожить». Кажется, это лучшее определение ИТ-сферы целиком ;-) Такая вот биг дата доэлектрической эры. Павел Петрович Аносов (10 июля 1796 — 25 мая 1851) горный инженер, учёный-металлург Рассказывает @Mimizavr Талантами Русь богата И вот, старики говорят, Что сталь дамасских булатов Рассек уральский булат. Павел Петрович Аносов - на мой взгляд, совершенно фантастическая фигура, благодаря которой в 19 веке очень сильно развилась металлургия на Урале. Будучи горным инженером по специальности, он занимался научной работой в сфере металлургии, стал крупным организатором горнозаводской промышленности на Урале, исследовал природу Южного Урала, вел геологическую разведку месторождений россыпного золота и железных руд, изобрел ряд устройств и механизмов (в том числе и эффективную золотопромывную машину), разработал технологию производства огнеупорных тиглей (первый в России), стал десятым губернатором Томской губернии. Павел Петрович известен, в первую очередь, как создатель русского булата. Булат — особый вид стали, очень прочный и упругий, с узором на поверхности, который является не украшением, а показателем качества металла. Впервые оружие из такой стали начали использовать воины Древней Индии. Такими мечами разрубали камни и легкие воздушные ткани. Несколько веков спустя центром по изготовлению булатных клинков стал Дамаск. Как мастера 12-15 веков могли варить такую удивительную сталь, оставалось загадкой, разгадать которую сумел лишь Павел Аносов. До Павла Аносова создать булат пытались многие, но никому это не удавалось. За несколько лет работы мастер испробовал 189 способов сталеварения, но ни один из них не не дал булат. И лишь в 190-ый раз смешивая компоненты, создавая необходимые температурные условия мастер открыл тайну. Игорь Васильевич Курчатов (1903–1960) физик, «отец» атомной бомбы СССР Говорит и показывает @Boomburum Игорь Васильевич Курчатов (1903–1960) — один из первопроходцев в области ядерной физики, «отец» атомной бомбы СССР. В числе его заслуг — создание первого в Европе атомного реактора, первой в СССР атомной бомбы и первой в мире термоядерной бомбы. Но были заслуги и в развитии мирного атома — под его руководством была сооружена первая в мире атомная электростанция (Обнинская АЭС).  Самый засекреченный ученый Самый засекреченный ученый Теги:  российская наука, российские учёные Хабы:  Блог компании Хабр, Научно-популярное Редакторский дайджест Присылаем лучшие статьи раз в месяц Хабр Экосистема для развития людей, вовлеченных в IT Хабр Карьера Facebook Twitter ВКонтакте Instagram 244 Карма 128.3 Рейтинг @Exosphere модератор «Хабра», куратор-эксперт ОПРОС Вы знаете, что такое IT-менторство и как оно работает? Знаю, я — ментор или у меня была консультация с ментором Знаю и хочу попробовать, но пока опыта нет Знаю и не хочу пробовать, менторство не решает мой запрос Не знаю, но мне интересно Не знаю и мне неинтересно Голосовать Воздержаться Проголосовал 1061 пользователь. Воздержались 219 пользователей. Электропочта Комментарии 8 ИНФОРМАЦИЯ Сайт habr.com Дата регистрации 9 августа 2008 Дата основания 26 мая 2006 Ваш аккаунт Войти Регистрация Разделы Статьи Новости Информация Устройство сайта Для авторов Услуги Корпоративный блог Медийная реклама Численность 51–100 человек Местоположение Россия Представитель Алексей ССЫЛКИ Хабр Карьера career.habr.com Хабр Q&A qna.habr.com Хабр Фриланс freelance.habr.com ВИДЖЕТ ВКОНТАКТЕ Хабы Компании Авторы Песочница Для компаний Документы Соглашение Конфиденциальность Нативные проекты Образовательные программы Стартапам Настройка языка Техническая поддержка © 2006–2024, Habr Хабр Подписан 1 друг Подписаться на новости БЛОГ НА ХАБРЕ 10 часов назад История российской науки: напишем вместе? 31 янв в 15:03 10 «золотых» советов авторам любых текстов 28 янв в 12:22 Истории, достойные экранизации, или День защиты персональных данных 31 дек 2023 в 02:19 Поздравление-загадка от Хабра 29 дек 2023 в 18:31 Анонимный Дед Мороз на Хабре: хвастаемся подарками 1.3K 8 8.5K 41 +41 7.6K 16 16 4K 44 +44 4.1K 97 97 ",10 часов назад,"Хабы:  Блог компании Хабр, Научно-популярное ",353.18, оценка рейтинг хабр экосистема для развития людей вовлеченных в  февраля день российской науки этот праздник отмечается в академии наук в нии вузах исследовательских лабораториях по всей стране судьба российской науки непростая всегда переплетённая с историей страны и ею же обусловленная непростой путь к открытию мгу талантливые кулибины и и кулибин из глубинки учёные в изгнании туполевская шарага достижения института гамалеи… всё смешано переплетено и влияло и влияет на весь мир величие российской науки прежде всего в людях которые её создают которые разрабатывают изобретают экспериментирую и точно знают что делают в этот день всегда спорят медики биологи инженеры программисты филологи физики химики чьи учёные научнее и главнее кто определял и создавал будущее ответ простой все каждый в своей сфере предлагаем сегодня собрать российские открытия и учёных которые вас вдохновляют впечатляют будоражат воображение и влияют или повлияли на вас напишем эту статью вместе часов назад история российской науки напишем вместе  блог компании хабр научно популярное ретроспектива технотекст добавь свой раздел в статью про российскую науку войти моя лента все потоки разработка администрирование дизайн менеджмент маркетинг научпоп правила создания статьи вы в комментариях рассказываете о том самом учёном и его изобретении которые важны именно для вас а мы добавляем ваши истории в общую статью и формируем самый крутой лонгрид об истории российской науки формат свободный желательно не обязательно отразить фио учёного его годы жизни основные изобретения краткая биография наиболее значимое изобретение на ваш взгляд чем вас вдохновил учёный как повлиял на вас изображения приветствуются комментарии будут сохраняться и вы сможете их обсуждать так как и всегда автор самого заплюсованного описания получит приятный сюрприз от команды хабра чур википедию не копировать итак поехали николай иванович пирогов великий российский врач хирург николай пирогов в лет поступил на первый курс медицинского факультета мгу тогда московского университета по окончании вуза он в числе семи лучших студентов отправился в депт тарту заниматься анатомическими исследованиями и готовиться к профессорской деятельности считается одним из лучших анатомов мира родоначальник топографической анатомии именно он разрезал замороженное человеческое тело в четырёх плоскостях и создал атлас топографической анатомии который стал незаменимым пособием для хирургов это был не просто учебный материал но прежде всего возможность оперировать с минимальным травматизмом для пациента пирогов брался за любые операции от ампутаций и извлечения камней до глазных манипуляций и сосудистых вмешательств именно он провёл в году первую свою операцию под наркозом тщательно изучив свойства эфира и хлороформа затем в течение года прошло подобных операций николай пирогов автор алгоритма сортировки раненных на поле брани благодаря чему удалось спасти огромное количество жизней а сам алгоритм до сих пор служит организации военной медицины именно он ввёл в практику российской медицины обеззараживание хлорной водой и настойкой йода до сих пор хлорка йодопирон йодинол и йод служат хирургам и всем медикам верную службу николай пирогов был первым учёным от медицины о котором я узнала в возрасте или лет уже будучи немного горящей стать доктором жизнь повернулась самым причудливым образом но изучение истории медицины сделало моё мышление структурным комплексным и навсегда привило любовь к людям какие бы они ни были они люди с болью со стрессом с заболеваниями и радостью выздоровления совершенно особенное ощущение художественный фильм пирогов гааз и пирогов лекторий достоевский хотя конкретно в этом фильме история гааза потрясает гораздо больше семён николаевич корсаков создатель первой в мире перфокарточной машины табулятора для сравнения идей рассказывает  его история меня когда то поразила только подумайте кто то что то делал в программировании до бэббиджа да ещё и в российской империи ещё больше поразил тот факт что корсаков был обвинён современниками в пустой трате времени на изобретения а его славные дела дошли до мирового научного сообщества и до нас с вами благодаря раскопкам учёных  века в частности благодаря математику и кибернетику г н поварову потомственный дворянин семён корсаков стал прародителем отечественной кибернетики он всегда видел своей задачей усиление работы разума с помочью различных механических устройств чем вам не первобытное программирование кроме изобретённых им гомеоскопов и идеоскопа он подарил миру идею перфокарт именно гомеоскопические перфорированные таблицы стали прототипом тех самых картонных карт устройства корсакова помогали сравнивать таблицы и обрабатывать большие массивы данных с помощью его устройств можно было решать задачи классификации корсаков видел бытовое применение своим изобретениям реестры каталоги регистрации ничего не патентовал и просто представил машины общественности с н корсаков и машина для сравнения идей однако комиссия из пяти ученых возглавляемая молодым математиком академиком м в остроградским вынесла вердикт господин корсаков потратил чересчур много своих интеллектуальных сил пытаясь научить других как вовсе без оного интеллекта прожить кажется это лучшее определение ит сферы целиком такая вот биг дата доэлектрической эры павел петрович аносов июля мая горный инженер учёный металлург рассказывает  талантами русь богата и вот старики говорят что сталь дамасских булатов рассек уральский булат павел петрович аносов на мой взгляд совершенно фантастическая фигура благодаря которой в веке очень сильно развилась металлургия на урале будучи горным инженером по специальности он занимался научной работой в сфере металлургии стал крупным организатором горнозаводской промышленности на урале исследовал природу южного урала вел геологическую разведку месторождений россыпного золота и железных руд изобрел ряд устройств и механизмов в том числе и эффективную золотопромывную машину разработал технологию производства огнеупорных тиглей первый в россии стал десятым губернатором томской губернии павел петрович известен в первую очередь как создатель русского булата булат особый вид стали очень прочный и упругий с узором на поверхности который является не украшением а показателем качества металла впервые оружие из такой стали начали использовать воины древней индии такими мечами разрубали камни и легкие воздушные ткани несколько веков спустя центром по изготовлению булатных клинков стал дамаск как мастера веков могли варить такую удивительную сталь оставалось загадкой разгадать которую сумел лишь павел аносов до павла аносова создать булат пытались многие но никому это не удавалось за несколько лет работы мастер испробовал способов сталеварения но ни один из них не не дал булат и лишь в ый раз смешивая компоненты создавая необходимые температурные условия мастер открыл тайну игорь васильевич курчатов – физик отец атомной бомбы ссср говорит и показывает  игорь васильевич курчатов – один из первопроходцев в области ядерной физики отец атомной бомбы ссср в числе его заслуг создание первого в европе атомного реактора первой в ссср атомной бомбы и первой в мире термоядерной бомбы но были заслуги и в развитии мирного атома под его руководством была сооружена первая в мире атомная электростанция обнинская аэс самый засекреченный ученый самый засекреченный ученый теги российская наука российские учёные хабы блог компании хабр научно популярное редакторский дайджест присылаем лучшие статьи раз в месяц хабр экосистема для развития людей вовлеченных в  хабр карьера   вконтакте  карма рейтинг  модератор хабра куратор эксперт опрос вы знаете что такое  менторство и как оно работает знаю я ментор или у меня была консультация с ментором знаю и хочу попробовать но пока опыта нет знаю и не хочу пробовать менторство не решает мой запрос не знаю но мне интересно не знаю и мне неинтересно голосовать воздержаться проголосовал пользователь воздержались пользователей электропочта комментарии информация сайт   дата регистрации августа дата основания мая ваш аккаунт войти регистрация разделы статьи новости информация устройство сайта для авторов услуги корпоративный блог медийная реклама численность – человек местоположение россия представитель алексей ссылки хабр карьера    хабр      хабр фриланс    виджет вконтакте хабы компании авторы песочница для компаний документы соглашение конфиденциальность нативные проекты образовательные программы стартапам настройка языка техническая поддержка © –  хабр подписан друг подписаться на новости блог на хабре часов назад история российской науки напишем вместе янв в золотых советов авторам любых текстов янв в истории достойные экранизации или день защиты персональных данных дек в поздравление загадка от хабра дек в анонимный дед мороз на хабре хвастаемся подарками      ,оценка экосистема развития людей вовлеченных февраля день российской науки праздник отмечается академии наук нии вузах исследовательских лабораториях всей стране судьба российской науки непростая переплетённая историей страны ею обусловленная непростой путь открытию мгу талантливые кулибины кулибин глубинки учёные изгнании туполевская шарага достижения института гамалеи… всё смешано переплетено влияло влияет весь мир величие российской науки прежде людях которые её создают которые разрабатывают изобретают экспериментирую точно знают делают день спорят медики биологи инженеры программисты филологи физики химики чьи учёные научнее главнее определял создавал будущее ответ простой каждый своей сфере предлагаем собрать российские открытия учёных которые вдохновляют впечатляют будоражат воображение влияют повлияли напишем статью вместе часов назад история российской науки напишем вместе компании научно популярное ретроспектива технотекст добавь свой раздел статью российскую науку войти лента потоки разработка администрирование дизайн менеджмент маркетинг научпоп правила создания комментариях рассказываете самом учёном изобретении которые важны именно добавляем ваши истории общую статью формируем самый крутой лонгрид истории российской науки формат свободный желательно обязательно отразить фио учёного годы жизни основные изобретения краткая биография наиболее значимое изобретение ваш взгляд вдохновил учёный повлиял изображения приветствуются будут сохраняться сможете обсуждать самого заплюсованного описания получит приятный сюрприз команды хабра чур википедию копировать итак поехали николай иванович пирогов великий российский врач хирург николай пирогов поступил первый курс медицинского факультета мгу московского университета окончании вуза числе семи лучших студентов отправился депт тарту заниматься анатомическими исследованиями готовиться профессорской деятельности считается одним лучших анатомов мира родоначальник топографической анатомии именно разрезал замороженное человеческое тело четырёх плоскостях создал атлас топографической анатомии который стал незаменимым пособием хирургов просто учебный материал прежде возможность оперировать минимальным травматизмом пациента пирогов брался любые операции ампутаций извлечения камней глазных манипуляций сосудистых вмешательств именно провёл году первую операцию наркозом тщательно изучив свойства эфира хлороформа затем течение прошло подобных операций николай пирогов алгоритма сортировки раненных поле брани благодаря чему удалось спасти огромное количество жизней алгоритм сих пор служит организации военной медицины именно ввёл практику российской медицины обеззараживание хлорной водой настойкой йода сих пор хлорка йодопирон йодинол йод служат хирургам всем медикам верную службу николай пирогов первым учёным медицины котором узнала возрасте будучи немного горящей стать доктором повернулась самым причудливым образом изучение истории медицины сделало моё мышление структурным комплексным навсегда привило любовь людям какие люди болью стрессом заболеваниями радостью выздоровления совершенно особенное ощущение художественный фильм пирогов гааз пирогов лекторий достоевский хотя конкретно фильме история гааза потрясает гораздо семён николаевич корсаков создатель первой мире перфокарточной машины табулятора сравнения идей рассказывает история поразила подумайте делал программировании бэббиджа ещё российской империи ещё поразил факт корсаков обвинён современниками пустой трате времени изобретения славные дела дошли мирового научного сообщества вами благодаря раскопкам учёных века частности благодаря математику кибернетику г н поварову потомственный дворянин семён корсаков стал прародителем отечественной кибернетики видел своей задачей усиление работы разума помочью различных механических устройств первобытное программирование кроме изобретённых гомеоскопов идеоскопа подарил миру идею перфокарт именно гомеоскопические перфорированные таблицы стали прототипом тех самых картонных карт устройства корсакова помогали сравнивать таблицы обрабатывать большие массивы устройств решать классификации корсаков видел бытовое применение своим изобретениям реестры каталоги регистрации патентовал просто представил машины общественности н корсаков машина сравнения идей однако комиссия пяти ученых возглавляемая молодым математиком академиком м остроградским вынесла вердикт господин корсаков потратил чересчур своих интеллектуальных сил пытаясь научить других вовсе оного интеллекта прожить лучшее определение ит сферы целиком такая биг дата доэлектрической эры павел петрович аносов июля мая горный инженер учёный металлург рассказывает талантами русь богата старики говорят сталь дамасских булатов рассек уральский булат павел петрович аносов взгляд совершенно фантастическая фигура благодаря которой веке очень сильно развилась металлургия урале будучи горным инженером специальности занимался научной работой сфере металлургии стал крупным организатором горнозаводской промышленности урале исследовал природу южного урала вел геологическую разведку месторождений россыпного золота железных руд изобрел ряд устройств механизмов числе эффективную золотопромывную машину разработал технологию производства огнеупорных тиглей первый россии стал десятым губернатором томской губернии павел петрович известен первую очередь создатель русского булата булат особый вид стали очень прочный упругий узором поверхности который украшением показателем качества металла впервые оружие стали начали воины древней индии такими мечами разрубали камни легкие воздушные ткани несколько веков спустя центром изготовлению булатных клинков стал дамаск мастера веков могли варить такую удивительную сталь оставалось загадкой разгадать которую сумел лишь павел аносов павла аносова булат пытались многие никому удавалось несколько работы мастер испробовал способов сталеварения дал булат лишь ый смешивая компоненты создавая необходимые температурные условия мастер открыл тайну игорь васильевич курчатов – физик отец атомной бомбы ссср говорит показывает игорь васильевич курчатов – первопроходцев области ядерной физики отец атомной бомбы ссср числе заслуг создание первого европе атомного реактора первой ссср атомной бомбы первой мире термоядерной бомбы заслуги развитии мирного атома руководством сооружена первая мире атомная электростанция обнинская аэс самый засекреченный ученый самый засекреченный ученый теги российская наука российские учёные компании научно популярное редакторский дайджест присылаем лучшие экосистема развития людей вовлеченных карьера вконтакте модератор хабра куратор эксперт опрос знаете такое менторство оно работает знаю ментор консультация ментором знаю попробовать опыта знаю пробовать менторство решает запрос знаю интересно знаю неинтересно голосовать воздержаться проголосовал воздержались пользователей электропочта информация сайт дата регистрации августа дата основания мая ваш аккаунт войти регистрация разделы новости информация устройство сайта авторов услуги корпоративный медийная реклама численность – человек местоположение россия представитель алексей ссылки карьера фриланс виджет вконтакте компании авторы песочница компаний документы соглашение конфиденциальность нативные проекты образовательные программы стартапам настройка языка техническая поддержка © – подписан друг подписаться новости хабре часов назад история российской науки напишем вместе янв золотых советов авторам любых текстов янв истории достойные экранизации день защиты персональных дек поздравление загадка хабра дек анонимный дед мороз хабре хвастаемся подарками,оценк экосистем развит люд вовлечен феврал ден российск наук праздник отмеча академ наук ни вуз исследовательск лаборатор все стран судьб российск наук непрост переплетен истор стран е обусловлен непрост пут открыт мгу талантлив кулибин кулибин глубинк учен изгнан туполевск шараг достижен институт гамалеи… все смеша переплет влия влия ве мир велич российск наук прежд люд котор е созда котор разрабатыва изобрета экспериментир точн знают дела ден спор медик биолог инженер программист филолог физик химик чьи учен научн главн определя создава будущ ответ прост кажд сво сфер предлага собра российск открыт учен котор вдохновля впечатля будоражат воображен влия повлия напиш стат вмест час назад истор российск наук напиш вмест компан научн популярн ретроспектив технотекст добав сво раздел стат российск наук войт лент поток разработк администрирован дизайн менеджмент маркетинг научпоп прав создан комментар рассказыва сам учен изобретен котор важн имен добавля ваш истор общ стат формиру сам крут лонгрид истор российск наук формат свободн желательн обязательн отраз фи учен год жизн основн изобретен кратк биограф наибол значим изобретен ваш взгляд вдохнов учен повлия изображен приветств будут сохраня сможет обсужда сам заплюсова описан получ приятн сюрприз команд хабр чур википед копирова итак поеха никола иванович пирог велик российск врач хирург никола пирог поступ перв курс медицинск факультет мгу московск университет окончан вуз числ сем лучш студент отправ депт тарт занима анатомическ исследован готов профессорск деятельн счита одн лучш анатом мир родоначальник топографическ анатом имен разреза заморожен человеческ тел четырех плоскост созда атлас топографическ анатом котор стал незаменим пособ хирург прост учебн материа прежд возможн оперирова минимальн травматизм пациент пирог брал люб операц ампутац извлечен камн глазн манипуляц сосудист вмешательств имен провел год перв операц наркоз тщательн изуч свойств эфир хлороформ зат течен прошл подобн операц никола пирог алгоритм сортировк ранен пол бран благодар чем уда спаст огромн количеств жизн алгоритм сих пор служ организац воен медицин имен ввел практик российск медицин обеззараживан хлорн вод настойк йод сих пор хлорк йодопирон йодинол йод служат хирург всем медик верн служб никола пирог перв учен медицин котор узна возраст будуч немн горя стат доктор повернул сам причудлив образ изучен истор медицин сдела мо мышлен структурн комплексн навсегд прив любов люд как люд бол стресс заболеван радост выздоровлен совершен особен ощущен художествен фильм пирог гааз пирог лектор достоевск хот конкретн фильм истор гааз потряса горазд сем николаевич корсак создател перв мир перфокарточн машин табулятор сравнен ид рассказыва истор пораз подума дела программирован бэббидж ещ российск импер ещ пораз факт корсак обвин современник пуст трат времен изобретен славн дел дошл миров научн сообществ вам благодар раскопк учен век частност благодар математик кибернетик г н поваров потомствен дворянин сем корсак стал прародител отечествен кибернетик видел сво задач усилен работ разум помоч различн механическ устройств первобытн программирован кром изобретен гомеоскоп идеоскоп подар мир ид перфокарт имен гомеоскопическ перфорирова таблиц стал прототип тех сам картон карт устройств корсаков помога сравнива таблиц обрабатыва больш массив устройств реша классификац корсак видел бытов применен сво изобретен реестр каталог регистрац патентова прост представ машин обществен н корсак машин сравнен ид однак комисс пят учен возглавля молод математик академик м остроградск вынесл вердикт господин корсак потрат чересчур сво интеллектуальн сил пыт науч друг вовс он интеллект прож лучш определен ит сфер целик так биг дат доэлектрическ эр павел петрович анос июл ма горн инженер учен металлург рассказыва талант ру богат старик говор стал дамасск булат рассек уральск булат павел петрович анос взгляд совершен фантастическ фигур благодар котор век очен сильн разв металлург урал будуч горн инженер специальн занима научн работ сфер металлург стал крупн организатор горнозаводск промышлен урал исследова природ южн ура вел геологическ разведк месторожден россыпн золот железн руд изобрел ряд устройств механизм числ эффективн золотопромывн машин разработа технолог производств огнеупорн тигл перв росс стал десят губернатор томск губерн павел петрович извест перв очеред создател русск булат булат особ вид стал очен прочн упруг узор поверхн котор украшен показател качеств металл вперв оруж стал нача воин древн инд так меч разруба камн легк воздушн ткан нескольк век спуст центр изготовлен булатн клинк стал дамаск мастер век могл вар так удивительн стал остава загадк разгада котор сумел лиш павел анос павл аносов булат пыта мног ник удава нескольк работ мастер испробова способ сталеварен дал булат лиш ы смешив компонент создав необходим температурн услов мастер откр тайн игор васильевич курчат – физик отец атомн бомб ссср говор показыва игор васильевич курчат – первопроходц област ядерн физик отец атомн бомб ссср числ заслуг создан перв европ атомн реактор перв ссср атомн бомб перв мир термоядерн бомб заслуг развит мирн атом руководств сооруж перв мир атомн электростанц обнинск аэс сам засекречен учен сам засекречен учен тег российск наук российск учен компан научн популярн редакторск дайджест присыла лучш экосистем развит люд вовлечен карьер вконтакт модератор хабр куратор эксперт опрос знает так менторств он работа зна ментор консультац ментор зна попробова опыт зна пробова менторств реша запрос зна интересн зна неинтересн голосова воздержа проголосова воздержа пользовател электропочт информац сайт дат регистрац август дат основан ма ваш аккаунт войт регистрац раздел новост информац устройств сайт автор услуг корпоративн медийн реклам числен – человек местоположен росс представител алекс ссылк карьер фриланс виджет вконтакт компан автор песочниц компан документ соглашен конфиденциальн нативн проект образовательн программ стартап настройк язык техническ поддержк © – подписа друг подписа новост хабр час назад истор российск наук напиш вмест янв золот совет автор люб текст янв истор достойн экранизац ден защит персональн дек поздравлен загадк хабр дек анонимн дед мороз хабр хваста подарк,оценка экосистема развитие человек вовлечь февраль день российский наука праздник отмечаться академия наука нии вуз исследовательский лаборатория весь страна судьба российский наука непростой переплести история страна обусловить непростой путь открытие мгу талантливый кулибина кулибина глубинка учёный изгнание туполевский шарага достижение институт гамалеи… всё смешать переплести влиять влиять весь мир величие российский наука прежде человек который её создавать который разрабатывать изобретать экспериментировать точно знать делать день спорить медик биолог инженер программист филолог физика химик чей учёный научный главный определять создавать будущее ответ простой каждый свой сфера предлагать собрать российский открытие учёный который вдохновлять впечатлять будоражить воображение влиять повлиять вместе час назад история российский наука вместе компания научно популярный ретроспектива технотекст добавить свой раздел российский наука войти лента поток разработка администрирование дизайн менеджмент маркетинг научпоп правило создание рассказывать учёный изобретение который важный именно добавлять ваш история общий формировать самый крутой лонгрид история российский наука формат свободный желательно обязательно отразить фио учёный основной изобретение краткий биография наиболее значимый изобретение ваш взгляд вдохновить учёный повлиять изображение приветствоваться сохраняться смочь обсуждать заплюсовать описание приятный сюрприз команда хабра чур википедия копировать итак поехать николай иванович пирог великий российский врач хирург николай пирог поступить первый курс медицинский факультет мгу московский университет окончание вуз число семь хороший студент отправиться депт тарту заниматься анатомический исследование готовиться профессорский деятельность считаться хороший анатом мир родоначальник топографический анатомия именно разрезать заморозить человеческий тело четыре плоскость атлас топографический анатомия который стать незаменимый пособие хирург просто учебный материал прежде возможность оперировать минимальный травматизм пациент пирог браться любой операция ампутация извлечение камень глазной манипуляция сосудистый вмешательство именно провести первый операция наркоз тщательно изучить свойство эфир хлороформ затем течение пройти подобный операция николай пирог алгоритм сортировка ранить поле брань благодаря удаться спасти огромный количество алгоритм сей пора служить организация военный медицина именно ввести практика российский медицина обеззараживание хлорный вода настойка йод сей пора хлорка йодопирон йодинол йод служить хирург весь медик верный служба николай пирог первый учёный медицина который узнать возраст немного гореть стать доктор повернуться самый причудливый образ изучение история медицина мышление структурный комплексный навсегда привить любовь человек человек боль стресс заболевание радость выздоровление совершенно особенный ощущение художественный фильм пирог гааз пирог лекторий достоевский хотя конкретно фильм история гааз потрясать гораздо семён николаевич корсак создатель первый мир перфокарточный машина табулятор сравнение идея рассказывать история поразить подумать делать программирование бэббидж ещё российский империя ещё поразить факт корсак обвинить современник пустой трата изобретение славный дело дойти мировой научный сообщество благодаря раскопка учёный век частность благодаря математика кибернетик г н поваров потомственный дворянин семён корсак стать прародитель отечественный кибернетика видеть свой усиление разум помочь различный механический устройство первобытный программирование кроме изобрести гомеоскоп идеоскоп подарить мир идея перфокарта именно гомеоскопический перфорированный таблица стать прототип самый картонный карта устройство корсаков помогать сравнивать таблица обрабатывать больший массив устройство решать классификация корсак видеть бытовой применение свой изобретение реестр каталог регистрация патентовать просто представить машина общественность н корсак машина сравнение идея однако комиссия пять учёный возглавлять молодой математик академик м остроградский вынести вердикт господин корсак потратить чересчур свой интеллектуальный сила пытаться научить вовсе оное интеллект прожить хороший определение ит сфера целиком биг дата доэлектрический эра павел петрович аносов июль май горный инженер учёный металлург рассказывать талант русь богатый старик говорить сталь дамасский булат рассечь уральский булат павел петрович аносов взгляд совершенно фантастический фигура благодаря который век очень сильно развиться металлургия урал горный инженер специальность заниматься научный сфера металлургия стать крупный организатор горнозаводский промышленность урал исследовать природа южный урал вести геологический разведка месторождение россыпный золото железный руда изобрести ряд устройство механизм число эффективный золотопромывной машина разработать технология производство огнеупорный тигль первый россия стать десятый губернатор томский губерния павел петрович известный первый очередь создатель русский булат булат особый вид стать очень прочный упругий узор поверхность который украшение показатель качество металл впервые оружие стать начать воин древний индия меч разрубать камень лёгкий воздушный ткань несколько век спустя центр изготовление булатный клинковый стать дамаск мастер век мочь варить удивительный сталь оставаться загадка разгадать который суметь лишь павел аносов павел аносов булат пытаться многие никто удаваться несколько мастер испробовать способ сталеварение дать булат лишь ый смешивать компонент создавать необходимый температурный условие мастер открыть тайна игорь василиевич курчатов – физик отец атомный бомба ссср говорить показывать игорь василиевич курчатов – первопроходец область ядерный физика отец атомный бомба ссср число заслуга создание первый европа атомный реактор первый ссср атомный бомба первый мир термоядерный бомба заслуга развитие мирный атом руководство соорудить первый мир атомный электростанция обнинский аэс самый засекретить учёный самый засекретить учёный тег российский наука российский учёный компания научно популярный редакторский дайджест присылать хороший экосистема развитие человек вовлечь карьера вконтакте модератор хабра куратор эксперт опрос знать менторство оно работать знать ментор консультация ментор знать попробовать опыт знать пробовать менторство решать запрос знать интересно знать неинтересный голосовать воздержаться проголосовать воздержаться электропочта информация сайт дата регистрация август дата основание май ваш аккаунт войти регистрация раздел новость информация устройство сайт услуга корпоративный медийный реклама численность – человек местоположение россия представитель алексей карьера фриланс виджет вконтакте компания песочница компания документ соглашение конфиденциальность нативный образовательный стартап настройка язык технический поддержка © – подписать друг подписаться новость хабра час назад история российский наука вместе янв золотой совет любой текст янв история достойный экранизация день защита персональный дек поздравление загадка хабра дек анонимный дед мороз хабра хвастаться подарок,0
8,Как создать аппаратный эмулятор CD-ROM без паяльника,"2394.92 Рейтинг   Несмотря на то, что постепенно оптические диски уходят в прошлое, использование ISO- образов этих дисков остаётся актуальным. Многие операционные системы поставляются в виде ISO-образов, а администраторам необходимо поддерживать разношёрстный парк старых персональных компьютеров.  20 мар в 14:00 Как создать аппаратный эмулятор CD-ROM без паяльника Средний 1 9.2K Блог компании , Системное администрирование*, Разработка под Linux*, Разработка на Raspberry Pi*,   Вызовы для k8s. Чего ждать операторам в будущем Существует множество решений, как можно установить операционную систему с ISO- образа без записи его на оптический носитель. Я уже затрагивал тему ISO-образов в моих статьях: «Раскрываем секреты загрузочных ISO-образов» и «Что вам нужно знать о внешних загрузочных дисках». В этой статье я хочу рассказать о ещё одном способе, который, как оказывается, вшит в ядро Linux. Если ваш одноплатный компьютер имеет USB OTG-разъём, и на него возможна установка Linux, то вы c большой долей вероятности можете сделать из одноплатника аппаратный эмулятор привода оптических дисков. Меня этот способ заинтересовал. Я проверил его сам и, получив положительный результат у себя, решил поделиться с вами. Я сам узнал много интересного, систематизировал свои знания, поэтому надеюсь, что чтение будет познавательно и интересно для вас. Как всегда, если вы хотите посмотреть, что получится в итоге, уточнить детали, вы всегда можете найти исходный код в моём репозитории на GitHub. При написании статьи я поставил себе следующие цели: 1. Аппаратный эмулятор CD-ROM должен быть реализован без использования паяльника и макетных плат. 2. Реализация должна быть понятна человеку, имеющему лишь базовые представления о Linux, USB и Bluetooth. 3. Решение должно быть таким, чтобы его можно было с небольшими изменениями реализовать на различных одноплатных компьютерах. 4. Побудить интерес читателя к изучению используемых в статье технологий. 5. Изложить материал, необходимый для решения задачи лаконично и просто. Не уверен, что у меня это получилось из-за большого объёма темы. Буду признателен, если вы в отзывах напишете своё мнение. Оглавление Суть решения Проверка решения на практике От проверки идеи до реализации Операционная система Linux USB Bluetooth Сборка и модификация дистрибутива Raspberry Pi OS Реализация Как пользоваться эмулятором Особенности моего эмулятора Выводы Суть решения Решение заключается в том, что, модифицируя операционную систему Linux на одноплатном компьютере (встраиваемой системе), можно получить из него устройство, которое будет распознаваться компьютером как внешний оптический привод USB или флеш-накопитель. В ядро Linux включена поддержка эмуляции CD-ROM и эмуляции флеш-накопителя. Но это не значит, что любую встраиваемую систему можно превратить в них. Для этого ещё необходимо, чтобы встраиваемая система имела USB OTG-контроллер или USB- контроллер периферийного устройства. Проверка решения на практике Я делал эмулятор оптических дисков, используя Raspberry Pi Zero 2 W. Но вы можете использовать и другие одноплатные компьютеры. Естественно, вам тогда придётся самим разбираться с некоторыми проблемами, которые с большой долей вероятностью у вас возникнут. У меня других одноплатных компьютеров кроме Raspberry Pi не было, поэтому привожу алгоритм, как делал я. 1. Скачать образ Raspberry OS Light с сайта raspberrypi.org. 2. Записать образ на SD-карту. Я использовал программу balenaEtcher. 3. Добавить строку dtoverlay=dwc2  в файле config.txt на SD-карте. 4. Записать файлы ssh и wpa_supplicant.conf на SD-карту. Файл userconf.txt нужен, чтобы установить пароль для пользователя, ssh — чтобы включить SSH, wpa_supplicant.conf — чтобы указать точку доступа и пароль для Wi-Fi. 5. Вставить SD-карту в Raspberry Pi Zero 2 W. 6. Подключить USB-разъём Raspberry Pi Zero 2 W к USB-разъёму компьютера. 7. Подождать, пока выполнится первая загрузка и Raspberry Pi Zero 2 W подключится к Wi-Fi-сети. 8. Найти IP-адрес Raspberry Pi Zero 2 W в Wi-Fi-сети и подключиться к нему по протоколу SFTP. Я использовал приложение WinSCP. 9. Записать ISO-образы, которые вы хотите эмулировать, в файловую систему Raspberry Pi. 10. Подключиться через SSH к Raspberry Pi W 2. Это можно сделать при помощи приложения PuTTY. 11. Для того, чтобы ваш Raspberry Pi Zero 2 W стал внешним USB CD-ROM, ввести команду: $ sudo modprobe g_mass_storage cdrom=y removable=y stall=n file=/full/filename/w После чего у вас на компьютере распознается внешний USB CD-ROM, в который вставлен диск. 12. Для прекращения эмуляции ввести команду: $ sudo modprobe -r g_mass_storage Приведённый файл userconf.txt устанавливает для пользователя pi пароль «raspberry». Файл ssh — это пустой файл, который не содержит никаких данных. От проверки идеи до реализации Приведённая выше последовательность шагов позволяет вам посмотреть работу эмуляции в действии. Однако это решение обладает рядом недостатков. 1. Чтобы загрузить и выбрать образ для эмуляции, необходимо наличие Wi-Fi. Файл userconf.txt Файл wpa_supplicant.conf 2. При перезагрузке Raspberry Pi необходимо заново монтировать образ. 3. Если нужно эмулировать образ для загрузки с него операционной системы, понадобится ещё один компьютер для управления Raspberry Pi. 4. Эмулировать можно образ размером максимум 2 Gib. Если вам интересно, как избавиться от этих недостатков, у вас есть время и интерес разобраться в этом вопросе, то предлагаю продолжить чтение. Краткое содержание моей реализации следующее: 1. Для общения с Raspberry Pi будет использоваться Bluetooth. 2. Чтобы работа устройства была возможна в автономном режиме (без подключений Wi- Fi и Bluetooth), управляющий скрипт оформляется в виде службы Systemd. 3. Для управления по Bluetooth будет использоваться приложение Serial Bluetooth Terminal c Google Play. 4. Для эмуляции оптических дисков с образов размером больше 2Gib необходимо внести небольшие изменения в модуль ядра Linux и выполнить перекомпиляцию. Приведу кратко, что вам нужно знать, чтобы лучше понять суть того, что мы будем делать. Операционная система Linux ▍ Ядро Linux Ядро Linux содержит в себе абстракции для работы с устройствами там, где оно запускается. Реализуются эти абстракции в специальных программах, называемых драйверами. В ОС Linux драйвер может находиться непосредственно в файле ядра, а может быть оформлен в виде отдельного модуля. В большинстве случаев предпочтителен второй способ, так как модули можно динамически удалять и добавлять. Например, если устройство не подключено к системе или с ним не осуществляется работа, драйвер нам не нужен, и его можно выгрузить из памяти или не загружать вообще. При загрузке ядра ему необходима информация об устройствах, которые присутствуют в системе, чтобы корректно загрузить драйверы (модули) для них. Эта информация может передаваться из различных источников. Например, в архитектуре x86 это будет ACPI. В архитектуре ARM это Device Tree. ▍ Device Tree и Overlays Иногда Device Tree нужно модифицировать, чтобы можно было загрузить корректно драйвера для устройств. Делается это при помощи подключения overlays. Они содержат информацию, что необходимо изменить в исходном Device Tree. ▍ Headless-режим работы Raspberry Pi Очень часто в различных статьях и самоучителях по работе с Raspberry Pi необходимо подключение монитора, клавиатуры и мыши. Но на самом деле есть возможность работать с ним в так называемом headless-режиме. В этом режиме вы работаете с Raspberry Pi при помощи эмулятора терминала. Соединение его с Raspberry Pi может быть UART, USB, Bluetooth, Ethernet, Wi-Fi. Главная сложность заключается в том, как можно работать в этом режиме с самого начала, сразу после записи образа операционной системы на SD-карту, если у вас нет лишнего монитора и клавиатуры. Как активировать SSH, настроить Wi-Fi на использование определённой точки доступа? В Raspberry Pi OS такая возможность есть. Достаточно разместить определённые файлы в разделе FAT32 на SD-карте и загрузиться с неё. Raspberry Pi OS сделает необходимые настройки сама. ▍ Файловые системы, блочные устройства, разделы, монтирование Меня всегда восхищала идея, что в Linux всё является файлом. Правильно используя средства Linux, можно практически без программирования выполнять сложные задачи. Блочное устройство — это некоторый файл, в который можно записывать и считывать данные блоками байтов различной длины. Что будет происходить при этом, зависит от того, с чем реально ассоциирован этот файл. Например, если он ассоциирован с жёстким диском, то тогда будут читаться/записываться данные на жёсткий диск, не обращая внимание на разделы и файловые системы. Если он ассоциирован с разделом жёсткого диска, то будут читаться/записываться данные, не обращая внимание на файловую систему. При помощи команды losetup можно добиться того, что он будет ассоциироваться с обычным файлом на диске, что позволит создавать образы разделов и дисков. Ещё полезной командой Linux является команда kpartx, которая создаёт блочные устройства из файла образа диска. Каждое из устройств будет ассоциировано с образом раздела, который хранится в этом файле. Форматирование раздела в Linux выполняется одной командой. В качестве параметра необходимо передать имя файла блочного устройства. Например, для создания файловой системы exFAT на блочном устройстве /dev/mmcblk0p3: $ mkfs.exfat /dev/mmcblk0p3 Чтобы можно было работать с файлами файловой системы, размещённой на блочном устройстве, нужно примонтировать файловую систему к корневой файловой системе при помощи команды mount. $ mkdir -p /mnt/data $ mount -t auto /dev/mmcblk0p3 /mnt/data Обратите внимание, что директория, куда будет производиться монтирование, должна существовать до того, как вы будете монтировать. Если нужно размонтировать файловую систему, используется команда umount. $umount /mnt/data Чтобы посмотреть, какие у вас есть блочные устройства, и куда они примонтированы, можно использовать команду: $ lsblk ▍ Systemd Загрузка Linux происходит в несколько этапов. Сначала загружается ядро операционной системы, затем ядро запускает процесс init. Задача процесса init загрузить и инициализировать процессы пространства пользователя и находиться в памяти до перезагрузки или выключения компьютера (устройства). За долгие годы существования Linux было написано множество реализаций init. На данный момент во многих Linux- дистрибутивах используется реализация, называемая systemd. Её мы и будем использовать. Минимум команд, которые необходимо знать для работы с systemd. Команда Назначение systemctl start sn.service запустить службу systemctl stop sn.service остановить службу systemctl status sn.service посмотреть статус службы systemctl enable sn.service включить службу (служба будет автоматически запущена при следующей загрузке Linux) systemctl disable sn.service выключить службу journalctl -u sn.service -b посмотреть логи службы, начиная с момента последней загрузки Linux ▍ Терминалы, PuTTY, sshd, agetty Для администрирования ОС Linux из Windows часто используют эмулятор терминала PuTTY. Он позволяет подключаться к компьютеру или устройству c ОС Linux с помощью различных соединений (Ethernet, Wi-Fi, эмулируемого последовательного порта на Bluetooth или USB) и работать удалённо с консолью Linux в Windows. Чтобы такое было возможно, в ОС Linux должна быть запущена специальная программа, которая будет взаимодействовать с PuTTY. Это может быть sshd в случае SSH-соединения или agetty в случае последовательного порта. При подключении через последовательный порт по умолчанию вы увидите чёрно-белый экран без поддержки манипулятора мышь. Чтобы добавить поддержку мыши и цветного экрана, необходимо изменить значение переменной окружения TERM в файле /usr/lib/systemd/system/serial-getty@.service. [Service] Environment=TERM=xterm USB Чтобы два USB-устройства могли работать друг с другом, необходимо наличие у каждого из них USB-контроллера. USB-контроллер в конкретный момент времени может работать в режиме хоста (Host) или режиме периферийного устройства (Device). Если одно из взаимодействующих устройств работает в режиме Host, то другое должно работать в режиме Device. Существуют следующие виды USB-контроллеров: Host — всегда работает в режиме Host. Device — всегда работает в режиме Device. OTG — может работать или в режиме хоста или в режиме периферийного устройства. Переключение режимов может быть аппаратным (при помощи особой распайки кабеля OTG кабель переводит в контроллер режим хоста) или программным Режим хоста подразумевает посылку команд, а режим периферийного устройства — их обработку. ▍ OTG USB-контроллер Возьмём Android-телефон с OTG-контроллером. Это означает, что при сопряжении по USB с компьютером (для записи файлов с компьютера на телефон), он будет играть роль периферийного устройства, а при сопряжении по USB с периферийным устройством (мышью, клавиатурой, сетевой картой, флэш-накопителем, монитором, принтером) телефон будет играть роль хоста. Обычно USB-контроллер периферийного устройства или USB OTG-контроллер присутствуют во встраиваемых устройствах. Также они могут быть интегрированы в однокристальную систему (SoC). Но по факту на устройстве может отсутствовать физический USB-разъём для подключения. Например, на всех Raspberry Pi установлена SoC, которая имеет OTG-контроллер, но фактически физический разъём для него есть только в Raspberry Pi Zero (Zero W, Zero 2 W) и в Raspberry Pi 4. ▍ Дескрипторы USB Каждое USB-устройство имеет дескрипторы. Дескрипторы — это информация о USB- устройстве, которая используется операционной системой для корректного выбора драйвера для устройства. Мне понравилось описание, которое приведено на сайте Microsoft. ▍ Создание USB-устройств в Linux Ядро Linux содержит модули, которые позволяют создавать виртуальные USB-устройства. Это может быть Mass Storage, последовательный порт, сетевая карта. Загрузив и настроив эти модули, вы можете сделать так, чтобы компьютером ваш одноплатник распознавался одним или несколькими такими устройствами. Если вам достаточно одного устройства, то вы можете загрузить модуль для этого устройства, опционально передав ему параметры для конфигурации при помощи команды modprobe. Когда отпадёт необходимость в этом устройстве, его можно выгрузить при помощи команды modprobe -r. Чтобы на одном физическом порту у вас распознавалось несколько устройств одновременно, нужно использовать модуль libcomposite и сконфигурировать эти устройства при помощи создания структур в файловой системе ConfigFS в директории /sys/kernel/config/usb_gadget. Такие устройства называются композитными USB-устройствами. Вы, скорее всего, встречались с такими, например, если у вас беспроводная клавиатура и мышь, а для них используется один приёмопередатчик. В нашем случае мы создадим композитное USB-устройство, которое будет последовательным портом и устройством хранения. Последовательный порт мы будем использовать для подключения к нашему эмулятору оптических дисков через PuTTY. Изначально я хотел, что бы это была сетевая карта и SSH, но карта требует настройки в операционной системе компьютера, поэтому для простоты отказался от этой идеи в пользу последовательного порта. ▍ Создание композитного USB-устройства при помощи ConfigFS 1. Загружаем модуль libcomposite. modprobe libcomposite 2. Заполняем дескрипторы для устройства. $ usb_dev=/sys/kernel/config/usb_gadget/cdemu $ mkdir -p $usb_dev $ echo 0x0137 > $usb_dev/idProduct $ echo 0x0100 > $usb_dev/bcdDevice $ echo 0x0200 > $usb_dev/bcdUSB $ echo 0xEF  > $usb_dev/bDeviceClass $ echo 0x02 > $usb_dev/bDeviceSubClass $ echo 0x01 > $usb_dev/bDeviceProtocol $ mkdir -p $usb_dev/strings/0x409 $ echo ""abababababababa"" > $usb_dev/strings/0x409/serialnumber $ echo ""Linux Foundation"" > $usb_dev/strings/0x409/manufacturer $ echo ""USB CD-ROM Emulator"" > $usb_dev/strings/0x409/product 3. Создаём конфигурацию. mkdir -p $usb_dev/configs/c.1 mkdir -p $usb_dev/configs/c.1/strings/0x409 echo ""acm+usb"" > $usb_dev/configs/c.1/strings/0x409/configuration echo ""0x80"" > $usb_dev/configs/c.1/bmAttributes echo 250 > $usb_dev/configs/c.1/MaxPower 4.Создаём и подключаем функцию acm (последовательный порт через USB). $ mkdir -p $usb_dev/functions/acm.usb0 $ ln -s $usb_dev/functions/acm.usb0 $usb_dev/configs/c.1 5. Создаём и подключаем функцию mass_storage. Mass_storage в данном случае — это эмуляция CD-ROM для ISO-образа /home/pi/1.iso. $ mkdir -p $usb_dev/functions/mass_storage.usb0/lun.0 $ echo 1 > $usb_dev/functions/mass_storage.usb0/lun.0/cdrom $ echo 1 > $usb_dev/functions/mass_storage.usb0/lun.0/removable $ echo 0 > $usb_dev/functions/mass_storage.usb0/lun.0/nofua $ echo 0 > $usb_dev/functions/mass_storage.usb0/stall $ echo ""/home/pi/1.iso"" > $usb_dev/functions/mass_storage.usb0/lun.0/file $ ln -s $usb_dev/functions/mass_storage.usb0 $usb_dev/configs/c.1 6. Активируем созданное устройство. $ ls /sys/class/udc > $usb_dev/UDC ▍ Удаление композитного USB-устройства при помощи ConfigFS 1. Деактивируем устройство. $ usb_dev=/sys/kernel/config/usb_gadget/cdemu $ echo """"> $usb_dev/UDC 2. Удаляем функцию mass_storage. $ rm $usb_dev/configs/c.1/mass_storage.usb0 $ rmdir $usb_dev/functions/mass_storage.usb0 3. Удаляем функцию acm. $ rm $usb_dev/configs/c.1/acm.usb0 $ rmdir $usb_dev/functions/acm.usb0 4. Удаляем конфигурацию. $ rmdir $usb_dev/configs/c.1/strings/0x409 $ rmdir $usb_dev/configs/c.1 5. Удаляем устройство. $ rmdir $usb_dev/strings/0x409 $ rmdir $usb_dev 6. Выгружаем загруженные устройством модули. $ modprobe -r usb_f_mass_storage $ modprobe -r usb_f_acm $ modprobe -r libcomposite Cтруктура файловой системы для созданного эмулятора CD-ROM Bluetooth Тема Bluetooth очень объёмная, и её невозможно изложить в одной статье, поэтому приведу только тот минимум, который позволяет понять, как мы будем использовать Bluetooth. Bluetooth — технология, которая позволяет связывать устройства без проводов по радиоканалу. На данный момент существует множество версий спецификации Bluetooth. Спецификация Bluetooth освещает множество вопросов. Чтобы передать данные с одного устройства на другое, необходимо наличие на обоих устройствах контроллеров и стеков Bluetooth. Bluetooth-контроллер — аппаратное устройство, обычно выполненное в виде микросхемы или части более сложной микросхемы, позволяющее получать/передавать данные по радиоканалу в соответствии со спецификацией Bluetooth. Bluetooth-стек — программная реализация протоколов, описанных в спецификации Bluetooth. Протоколы Bluetooth, предназначенные для решения определённых задач, группируются в профили Bluetooth. Мы будем использовать два профиля Bluetooth: 1. Generic Access Profile (GAP), который поддерживается всеми Bluetooth-устройствами. 2. Serial Port Profile (SPP), который подразумевает использование последовательного порта поверх соединения Bluetooth. ▍ Поддержка Bluetooth операционными системами Bluetooth-контроллеры могут иметь различные аппаратные интерфейсы для доступа. Это может быть UART, USB, PCIe. В случае операционной системы многие детали скрываются, и можно о них не думать. С контроллером можно работать на низком уровне через драйвер или уже используя высокоуровневые библиотеки и приложения, предоставляемые стеком Bluetooth, например, в Linux широко распространён стек BlueZ. ▍ BlueZ Стек Bluetooth BlueZ состоит из двух частей. Одна часть представлена модулями ядра Linux, уже включена в ядро. Если она отсутствует, то её нужно включить и перекомпилировать ядро. Вторая часть представлена приложениями для пространства пользователя. Приложения позволяют конфигурировать и работать со стеком Bluetooth. На данный момент многие приложения считаются устаревшими, и разработчики BlueZ рекомендуют использовать более новые приложения и интерфейс D-Bus для работы со стеком. Но, как мне кажется, именно те старые, устаревшие приложения позволяют лучше понять работу Bluetooth, поэтому в учебных целях я буду использовать их, для чего нужно будет инициализировать BlueZ в режиме совместимости. $ bluetoothd --noplugin=sap -C ▍ Протоколы Bluetooth Я не буду утомлять вас различными схемами, диаграммами, которые вы легко можете найти в интернете. Расскажу только о тех протоколах, с которыми нам предстоит столкнуться и нужно будет сконфигурировать. ▍ Service Discovery Protocol (SDP) При помощи протокола SDP можно определить, какие приложения (сервисы) находятся на хосте, и с ними возможен обмен данными через Bluetooth Чтобы можно было увидеть сервис с другого устройства, его необходимо зарегистрировать в SDP database. Например, если мы хотим зарегистрировать службу, представляющую эмуляцию последовательного порта в Bluetooth, это можно сделать следующей командой: $ sdptool add SP Чтобы можно было посмотреть службы, зарегистрированные у вас на хосте, нужно ввести команду: $ sdptool browse local ▍ Radio Frequency Communications (RFCOMM) Протокол RFCOMM позволяет создавать виртуальное соединение по последовательному порту между двумя хостами. На одном из хостов создаётся сервер, которому выделяется канал RFCOMM, второй из хостов подключается к нему, указывая MAC-адрес и номер канала Канал RFCOMM немного напоминает порт в UDP или TCP, но если у них и у источника и у получателя есть порты, то у RFCOMM для источника и получателя один и тот же канал. Поэтому невозможно создать несколько подключений на один и тот же канал. В Linux можно использовать команду rfcomm для создания процесса, который будет слушать определённый канал RFCOMM и при соединении запускать другой процесс. $ rfcomm -r watch hci0 1 /usr/local/bin/cdemu-cmd /dev/rfcomm0 /dev/rfcomm0 В данном случае на Bluetooth-контроллере hci0 RFCOMM будет прослушиваться канал 1 и запускаться процесс cdemu-cmd с двумя параметрами командной строки /dev/rfcomm0 и /dev/rfcomm0. ▍ Утилита bluetoothctl Утилита Bluetoothctl позволяет сопрягать устройство, на котором вы её запустили с другим устройством. Вы можете сделать устройство видимым для обнаружения другими устройствами, а также найти другое устройство и выполнить с ним сопряжение. Более подробно расписано в документации к утилите, которая доступна по команде: $ man bluetoothctl ▍ Serial Bluetooth Terminal Для отладки приложений, использующих Bluetooth, удобно использовать приложение для Android Serial Bluetooth Terminal. Это приложение позволяет работать с Bluetooth- устройствами, у которых доступен профиль SPP. В нашем случае мы будем использовать его как визуальный интерфейс для работы с нашим эмулятором оптических дисков. Сборка и модификация дистрибутива Raspberry Pi OS Чтобы сделать полноценный аппаратный эмулятор оптических дисков, нам придётся немного модифицировать исходный дистрибутив Linux. Это подразумевает перекомпиляцию ядра, изменение нескольких конфигурационных файлов и добавление своего программного кода. Для меня это было удобно сделать при помощи Docker. ▍ Кросс-компиляция ядра Linux Кросс-компиляция позволяет на компьютере с одной архитектурой получать исполняемые файлы для другой архитектуры. Мы можем компилировать ядро Linux для Raspberry Pi на Raspberry Pi, а можем, используя кросс-компиляцию, сделать это на обычном компьютере с архитектурой x86, что существенно сократит время компиляции из-за большего быстродействия компьютера. Подробно о том, как выполнять кросс-компиляцию Raspberry Pi OS, можно почитать тут. ▍ Chroot и запуск бинарных файлов другой архитектуры Команда Linux chroot позволяет запускать процессы с изменённой корневой системой. Это кажется немного запутанным, но суть в следующем. В качестве параметра команде передаётся путь к корневой директории. В результате запуска команды через chroot запущенный процесс будет считать, что корнем файловой системы является та директория, которую передали в качестве параметра. Применений у команды chroot несколько, например, её можно использовать, чтобы запустить команду apt для Raspberry Pi в Docker-контейнере. Интересно, что Docker Desktop для Windows позволяет запускать исполняемые файлы для архитектуры ARM. В Linux-версии Docker такое сделать можно, но нужна дополнительная настройка. Реализация Созданный мной проект состоит из следующих файлов: 1. Dockerfile и скрипт, который выполняется в Docker-контейнере. 2. Файлы, которые необходимо добавить или обновить в исходном дистрибутиве: cdemu — основная логика работы эмулятора оптических дисков, написанная на языке bash; cdemu-cmd — bash-скрипт для обработки команд от пользователя и передачи их эмулятору; bash-utils.sh — bash-скрипт co вспомогательными функциями; cdemu-bluetooth-ui.service — systemd-служба, которая запускает интерпретатор команд на создаваемом RFCOMM-соединении телефона и Raspberry Pi; cdemu.service — systemd-служба, которая запускает эмулятор оптических дисков при загрузке; bluetooth.service — изменённая служба systemd для инициализации bluetooth; serial-getty@.service — изменённая служба systemd для запуска agetty на создаваемом соединении на последовательном порту; firstboot.service — служба systemd для запуска скрипта при первой загрузке операционной системы. Я её позаимствовал из проекта raspberian-firstboot; config.txt — изменённый файл конфигурации для загрузки Raspberry Pi. Содержит подключение overlay dwc. Это необходимо, чтобы USB-контроллер мог работать в device mode; fistboot.sh — скрипт, который запускается службой systemd firstboot.service; userconf.txt — файл, который необходим, чтобы установить пароль для пользователя pi. В последних версиях Raspberry Pi OS пользователь pi не активирован по умолчанию, поэтому необходимо наличие этого файла; ssh — файл необходим, чтобы активировать ssh, который отключён по умолчанию; wpa_supplicant.conf — файл, необходимый, если вы хотите настроить Raspberry Pi на работу с вашей точкой доступа. Листинги файлов не привожу, так как это ещё больше раздует и так большую статью. Ознакомиться вы с ними можете здесь. Как пользоваться эмулятором 1. Собираем Docker-образ. docker build -t raspi-image .  2. Собираем образ RaspberryPi OS. docker run --privileged -v c:\temp:/build --name raspi-image -it --rm raspi-image 3. Записываем образ на SD-карту. Вставляем её в Raspberry Pi. 4. Подключаем Rapsberry Pi Zero 2 W к компьютеру. 5. Через некоторое время у вас появится съёмный накопитель. 6. На этот съёмный накопитель, содержащий файл Readme.txt, копируем образы, которые хотим эмулировать. 7. Находим виртуальный COM-порт, созданный после подключения Raspberry Pi к компьютеру. 8. Подключаемся к Raspberry Pi через с помощью Putty через виртуальный COM-порт. 9. Запускаем интерактивное приложение для управления эмулятором. $ sudo cdemu-cmd 10. Если хотим сделать управление с телефона, то выполняем сопряжение телефона и Raspberry Pi. Для чего вводим в эмуляторе терминала команду: $ sudo bluetoothctl 11. Делаем Raspberry Pi доступным для обнаружения: discoverable on 12. Находим его на телефоне и выполняем полключение. После чего соглашаемся с PIN- кодом на телефоне и Raspberry Pi. yes 13. Выходим из bluetoothctl. exit 14. Запускаем на телефоне Serial Bluetooth Terminal и выполняем подключение к Raspberry Pi из него. Теперь можно посылать команды созданному эмулятору CD-ROM. Команды, которые можно посылать эмулятору: 1. hdd — переключение в режим эмуляции внешних жёстких дисков. 2. cdrom — переключение в режим эмуляции внешних приводов оптических дисков. 3. list — вывести список доступных ISO-образов, которые можно эмулировать. 4. insert <порядковый номер> — поместить ISO-образ для эмуляции. 5. eject — извлечь ISO-образ из эмулятора. 6. help — показать список доступных команд в текущем режиме. Особенности моего эмулятора Интересно, но в Linux по умолчанию нельзя эмулировать ISO-образы размером больше 2 Gib. Я просмотрел исходный код драйвера в файле drivers/usb/gadget/function/storage_common.c и предположил, что нет оснований не применять патч к ядру Linux от Adam Bambuch, который просто удаляет одно условие. Образы эмулировались нормально и при снятии ISO-образа с эмулируемого CD-ROM он был идентичен исходному. Поверял по хеш-коду для файла ISO-образа. Не пойму, почему есть это ограничение в Linux и почему его до сих пор не убрали? Если вы знаете ответ, ответьте в комментариях. Моя реализация не требует никаких дополнительных деталей. Нужен только Raspberry Pi Zero 2 W, один или два кабеля USB и адаптер питания, если будете использовать два кабеля USB. Один для питания, второй для передачи данных. Хоть и использование дополнительного кабеля и адаптера добавляет громоздкости, это решает проблему перезагрузки Raspberry Pi, если компьютер или ноутбук отключает ненадолго питание при перезагрузке. Кроме того, я не использую Python, только bash. Выводы Полученное программно-аппаратное решение, хоть и обладает рядом недостатков по сравнению с карманом Zalman (не поддерживается USB 3.0, нет интерактивного меню на самом устройстве), позволит вам установить практически любую операционную систему на широкий спектр компьютеров путём простого копирования ISO-образа. Решение является прототипом, но вместе с тем позволяет углубить знания по многим темам, или получить, если вы были с ними не знакомы. Так как основной целью была разработка прототипа, я запускал bluetoothd в режиме совместимости, и почти всю логику написал на bash. Я хотел показать возможность превратить встраиваемое устройство с операционной системой Linux в аппаратный эмулятор флеш-накопителя или привода оптических дисков, приложив минимум усилий. Надеюсь, что это удалось. Чтобы уместить всё в одной статье, я лишь поверхностно коснулся тех тем, которые необходимы для понимания. Если вас заинтересовало, вы можете самостоятельно изучить их углублённо. Объём статьи не позволяет осветить все интересности, с которыми я столкнулся при разработке эмулятора, и решения, которые применял и проверял. Приведу лишь несколько из них. Например, я долго боролся с зависанием при удалении составного устройства. Помогло использование службы serial-getty вместо getty, хотя во многих статьях упоминалась getty. Я долго разбирался, как можно сделать сопряжение через Bluetooth между Raspberry и телефоном, использовал команду bt-agent, но потом всё-таки отказался от неё в пользу bluetoothctl. При переключении эмулятора в режим HDD для записи ISO-образов изначально я открывал для доступа всю SD-карту и хранил ISO-образы в отдельном разделе, но потом посчитал, что для безопасности лучше хранить образ диска с ISO-образами в отдельном файле и открывать доступ только к нему, хоть это и снизило скорость записи, но пользователя не обескураживают появляющиеся несколько дисков. Разработанный прототип есть куда улучшать. Можно, например, создать более минималистичный дистрибутив Linux, который будет содержать только то, что реально используется для эмуляции, или создать более удобное графическое приложение для Android для работы с эмулятором. А можно упростить работу с Bluetooth, напрямую работая с драйверами bluetooth или используя интерфейс D-Bus для работы с Bluetooth- устройствами. Или вообще всё-таки взяться за паяльник и сделать устройство, более похожее по функционалу на карман Zalman. Но главное, вы увидели, что это реально сделать, а когда видишь положительный результат, это вдохновляет на большее творчество. В процессе тестирования и отладки программного кода было замечено, что на Lenovo X1 Extreme Gen 2 эмулятор CD-ROM дисков великолепно определялся в Windows 10, но отказывался определяться в BIOS. Эмпирически было определено, что помогает отключение режима экономии энергии процессора в BIOS. Также ноутбук отключал питание на usb при перезагрузке, поэтому понадобилось дополнительное питание Raspberry Pi. Интересно, но на ASUS K53E и Gigabyte BRIX всё работает без проблем. Решение с небольшими модификациями можно реализовать на Raspberry Pi 4. Но если вы поняли суть решения, вы его сможете повторить и на других одноплатных компьютерах, которые имеют выведенные USB-порты для OTG или USB-контроллеры периферийных устройств.   Telegram ВКонтакте Twitter 84 Карма 82.1 Рейтинг @ Пользователь Комментарии 17 Dockerfile на данный момент только выполняется в Docker Desktop для Windows. В Linux он работать не будет. В заключение хочу сказать, что существует ещё один способ эмулировать оптические диски, который я не пробовал, но знаю о его существовании из ваших комментариев к одной из моих статей — это программа DriveDroid для Android. Я ей не пользовался, так как для её работы нужно получать права root на телефоне. Но, скорее всего, из-за ограничений в ядре Linux программа поддерживает ISO-образы до 2 Gib и/или работает только с гибридными ISO-образами. Если я не прав, буду рад увидеть ваши опровержения в комментариях. Telegram-канал с розыгрышами призов, новостями IT и постами о ретроиграх 🕹️ Теги:  linux kernel, usb, bluetooth, bluez, linux modules, эмуляция, iso, cd-rom, systemd,  agetty, ruvds_статьи Хабы:  Блог компании , Системное администрирование,  Разработка под Linux, Разработка на Raspberry Pi, DIY или Сделай сам Редакторский дайджест Присылаем лучшие статьи раз в месяц Электропочта Публикации RationalAnswer 9 часов назад Как обнулялся Credit Suisse: разбираем траекторию погружения на дно швейцарского гига-банка 12 мин kesn 10 часов назад Байки погромиста. Если кто-то скажет, что программирование — это скучно  12 мин Tutelka 9 часов назад Обещания — настоящие и не очень  7 мин alizar 9 часов назад Удивительное рядом. Как устроен буфер обмена в Windows и Linux  6 мин ЛУЧШИЕ ЗА СУТКИ ПОХОЖИЕ 12K Обзор 75 26 49 11K Мнение 75 33 9 2.7K Мнение +34 24 10 4.7K +31 46 10 unxed 3 часа назад Linux-порт Far Manager: новости весны 2023 Средний 4 мин Показать еще 1.8K Дайджест +29 14 7 ИНФОРМАЦИЯ Сайт ruvds.com Дата регистрации 18 марта 2016 Дата основания 27 июля 2015 Численность 11–30 человек Местоположение Россия Представитель ruvds ССЫЛКИ VPS / VDS сервер от 130 рублей в месяц. ruvds.com Дата-центры RUVDS в Москве, Санкт-Петербурге, Казани, Екатеринбурге, Новосибирске, Лондоне, Франкфурте, Цюрихе, Амстердаме ruvds.com Помощь и вопросы ruvds.com Партнерская программа RUVDS ruvds.com VPS (CPU 1x2ГГц, RAM 512Mb, SSD 10 Gb) — 190 рублей в месяц ruvds.com VPS Windows от 523 рублей в месяц. Бесплатный тестовый период 3 дня. ruvds.com VDS в Цюрихе. Дата-центр TIER III — швейцарское качество по низкой цене. Ваш аккаунт Войти Регистрация Разделы Публикации Новости Хабы Компании Авторы Песочница Информация Устройство сайта Для авторов Для компаний Документы Соглашение Конфиденциальность Услуги Корпоративный блог Медийная реклама Нативные проекты Образовательные программы Стартапам Мегапроекты Настройка языка Техническая поддержка Вернуться на старую версию © 2006–2023, Habr ruvds.com Антивирусная защита виртуального сервера. Легкий агент для VPS. ruvds.com VPS в Лондоне. Дата-центр TIER III — английская точность за рубли. ruvds.com VPS с видеокартой на мощных серверах 3,4ГГц ruvds.com ПРИЛОЖЕНИЯ RUVDS Client Приложение для мониторинга и управления виртуальными серверами RUVDS с мобильных устройств. Android iOS ВИДЖЕТ БЛОГ НА ХАБРЕ 5 часов назад Как устроено индексирование баз данных 1.7K 0 9 часов назад Удивительное рядом. Как устроен буфер обмена в Windows и Linux вчера в 14:00 Будни техпода. Размещение игрового сервера на VDS вчера в 08:45 Ностальгические игры: Parasite Eve 20 мар в 18:00 Инструменты наблюдаемости, о которых нужно знать в 2023 году 4.7K 10 2.9K 12 3.4K 4 3.2K 4 ",20 мар в 14:00,"Хабы:  Блог компании , Системное администрирование,  Разработка под Linux, Разработка на Raspberry Pi, DIY или Сделай сам ",2394.92, рейтинг несмотря на то что постепенно оптические диски уходят в прошлое использование  образов этих дисков остаётся актуальным многие операционные системы поставляются в виде  образов а администраторам необходимо поддерживать разношёрстный парк старых персональных компьютеров мар в как создать аппаратный эмулятор   без паяльника средний  блог компании системное администрирование разработка под  разработка на   вызовы для   чего ждать операторам в будущем существует множество решений как можно установить операционную систему с  образа без записи его на оптический носитель я уже затрагивал тему  образов в моих статьях раскрываем секреты загрузочных  образов и что вам нужно знать о внешних загрузочных дисках в этой статье я хочу рассказать о ещё одном способе который как оказывается вшит в ядро  если ваш одноплатный компьютер имеет   разъём и на него возможна установка  то вы  большой долей вероятности можете сделать из одноплатника аппаратный эмулятор привода оптических дисков меня этот способ заинтересовал я проверил его сам и получив положительный результат у себя решил поделиться с вами я сам узнал много интересного систематизировал свои знания поэтому надеюсь что чтение будет познавательно и интересно для вас как всегда если вы хотите посмотреть что получится в итоге уточнить детали вы всегда можете найти исходный код в моём репозитории на  при написании статьи я поставил себе следующие цели аппаратный эмулятор   должен быть реализован без использования паяльника и макетных плат реализация должна быть понятна человеку имеющему лишь базовые представления о   и  решение должно быть таким чтобы его можно было с небольшими изменениями реализовать на различных одноплатных компьютерах побудить интерес читателя к изучению используемых в статье технологий изложить материал необходимый для решения задачи лаконично и просто не уверен что у меня это получилось из за большого объёма темы буду признателен если вы в отзывах напишете своё мнение оглавление суть решения проверка решения на практике от проверки идеи до реализации операционная система    сборка и модификация дистрибутива    реализация как пользоваться эмулятором особенности моего эмулятора выводы суть решения решение заключается в том что модифицируя операционную систему  на одноплатном компьютере встраиваемой системе можно получить из него устройство которое будет распознаваться компьютером как внешний оптический привод  или флеш накопитель в ядро  включена поддержка эмуляции   и эмуляции флеш накопителя но это не значит что любую встраиваемую систему можно превратить в них для этого ещё необходимо чтобы встраиваемая система имела   контроллер или  контроллер периферийного устройства проверка решения на практике я делал эмулятор оптических дисков используя     но вы можете использовать и другие одноплатные компьютеры естественно вам тогда придётся самим разбираться с некоторыми проблемами которые с большой долей вероятностью у вас возникнут у меня других одноплатных компьютеров кроме   не было поэтому привожу алгоритм как делал я скачать образ    с сайта   записать образ на  карту я использовал программу  добавить строку   в файле   на  карте записать файлы  и    на  карту файл   нужен чтобы установить пароль для пользователя  чтобы включить     чтобы указать точку доступа и пароль для   вставить  карту в     подключить  разъём     к  разъёму компьютера подождать пока выполнится первая загрузка и     подключится к   сети найти  адрес     в   сети и подключиться к нему по протоколу  я использовал приложение  записать  образы которые вы хотите эмулировать в файловую систему   подключиться через  к    это можно сделать при помощи приложения  для того чтобы ваш     стал внешним    ввести команду                после чего у вас на компьютере распознается внешний    в который вставлен диск для прекращения эмуляции ввести команду       приведённый файл   устанавливает для пользователя  пароль  файл  это пустой файл который не содержит никаких данных от проверки идеи до реализации приведённая выше последовательность шагов позволяет вам посмотреть работу эмуляции в действии однако это решение обладает рядом недостатков чтобы загрузить и выбрать образ для эмуляции необходимо наличие   файл   файл    при перезагрузке   необходимо заново монтировать образ если нужно эмулировать образ для загрузки с него операционной системы понадобится ещё один компьютер для управления   эмулировать можно образ размером максимум  если вам интересно как избавиться от этих недостатков у вас есть время и интерес разобраться в этом вопросе то предлагаю продолжить чтение краткое содержание моей реализации следующее для общения с   будет использоваться  чтобы работа устройства была возможна в автономном режиме без подключений   и  управляющий скрипт оформляется в виде службы  для управления по  будет использоваться приложение       для эмуляции оптических дисков с образов размером больше  необходимо внести небольшие изменения в модуль ядра  и выполнить перекомпиляцию приведу кратко что вам нужно знать чтобы лучше понять суть того что мы будем делать операционная система  ▍ ядро  ядро  содержит в себе абстракции для работы с устройствами там где оно запускается реализуются эти абстракции в специальных программах называемых драйверами в ос  драйвер может находиться непосредственно в файле ядра а может быть оформлен в виде отдельного модуля в большинстве случаев предпочтителен второй способ так как модули можно динамически удалять и добавлять например если устройство не подключено к системе или с ним не осуществляется работа драйвер нам не нужен и его можно выгрузить из памяти или не загружать вообще при загрузке ядра ему необходима информация об устройствах которые присутствуют в системе чтобы корректно загрузить драйверы модули для них эта информация может передаваться из различных источников например в архитектуре  это будет  в архитектуре  это   ▍   и  иногда   нужно модифицировать чтобы можно было загрузить корректно драйвера для устройств делается это при помощи подключения  они содержат информацию что необходимо изменить в исходном   ▍  режим работы   очень часто в различных статьях и самоучителях по работе с   необходимо подключение монитора клавиатуры и мыши но на самом деле есть возможность работать с ним в так называемом  режиме в этом режиме вы работаете с   при помощи эмулятора терминала соединение его с   может быть       главная сложность заключается в том как можно работать в этом режиме с самого начала сразу после записи образа операционной системы на  карту если у вас нет лишнего монитора и клавиатуры как активировать  настроить   на использование определённой точки доступа в    такая возможность есть достаточно разместить определённые файлы в разделе  на  карте и загрузиться с неё    сделает необходимые настройки сама ▍ файловые системы блочные устройства разделы монтирование меня всегда восхищала идея что в  всё является файлом правильно используя средства  можно практически без программирования выполнять сложные задачи блочное устройство это некоторый файл в который можно записывать и считывать данные блоками байтов различной длины что будет происходить при этом зависит от того с чем реально ассоциирован этот файл например если он ассоциирован с жёстким диском то тогда будут читаться записываться данные на жёсткий диск не обращая внимание на разделы и файловые системы если он ассоциирован с разделом жёсткого диска то будут читаться записываться данные не обращая внимание на файловую систему при помощи команды  можно добиться того что он будет ассоциироваться с обычным файлом на диске что позволит создавать образы разделов и дисков ещё полезной командой  является команда  которая создаёт блочные устройства из файла образа диска каждое из устройств будет ассоциировано с образом раздела который хранится в этом файле форматирование раздела в  выполняется одной командой в качестве параметра необходимо передать имя файла блочного устройства например для создания файловой системы  на блочном устройстве         чтобы можно было работать с файлами файловой системы размещённой на блочном устройстве нужно примонтировать файловую систему к корневой файловой системе при помощи команды              обратите внимание что директория куда будет производиться монтирование должна существовать до того как вы будете монтировать если нужно размонтировать файловую систему используется команда     чтобы посмотреть какие у вас есть блочные устройства и куда они примонтированы можно использовать команду  ▍  загрузка  происходит в несколько этапов сначала загружается ядро операционной системы затем ядро запускает процесс  задача процесса  загрузить и инициализировать процессы пространства пользователя и находиться в памяти до перезагрузки или выключения компьютера устройства за долгие годы существования  было написано множество реализаций  на данный момент во многих  дистрибутивах используется реализация называемая  её мы и будем использовать минимум команд которые необходимо знать для работы с  команда назначение     запустить службу     остановить службу     посмотреть статус службы     включить службу служба будет автоматически запущена при следующей загрузке      выключить службу      посмотреть логи службы начиная с момента последней загрузки  ▍ терминалы    для администрирования ос  из  часто используют эмулятор терминала  он позволяет подключаться к компьютеру или устройству  ос  с помощью различных соединений    эмулируемого последовательного порта на  или  и работать удалённо с консолью  в  чтобы такое было возможно в ос  должна быть запущена специальная программа которая будет взаимодействовать с  это может быть  в случае  соединения или  в случае последовательного порта при подключении через последовательный порт по умолчанию вы увидите чёрно белый экран без поддержки манипулятора мышь чтобы добавить поддержку мыши и цветного экрана необходимо изменить значение переменной окружения  в файле             чтобы два  устройства могли работать друг с другом необходимо наличие у каждого из них  контроллера  контроллер в конкретный момент времени может работать в режиме хоста  или режиме периферийного устройства  если одно из взаимодействующих устройств работает в режиме  то другое должно работать в режиме  существуют следующие виды  контроллеров  всегда работает в режиме   всегда работает в режиме   может работать или в режиме хоста или в режиме периферийного устройства переключение режимов может быть аппаратным при помощи особой распайки кабеля  кабель переводит в контроллер режим хоста или программным режим хоста подразумевает посылку команд а режим периферийного устройства их обработку ▍   контроллер возьмём  телефон с  контроллером это означает что при сопряжении по  с компьютером для записи файлов с компьютера на телефон он будет играть роль периферийного устройства а при сопряжении по  с периферийным устройством мышью клавиатурой сетевой картой флэш накопителем монитором принтером телефон будет играть роль хоста обычно  контроллер периферийного устройства или   контроллер присутствуют во встраиваемых устройствах также они могут быть интегрированы в однокристальную систему  но по факту на устройстве может отсутствовать физический  разъём для подключения например на всех   установлена  которая имеет  контроллер но фактически физический разъём для него есть только в        и в   ▍ дескрипторы  каждое  устройство имеет дескрипторы дескрипторы это информация о  устройстве которая используется операционной системой для корректного выбора драйвера для устройства мне понравилось описание которое приведено на сайте  ▍ создание  устройств в  ядро  содержит модули которые позволяют создавать виртуальные  устройства это может быть   последовательный порт сетевая карта загрузив и настроив эти модули вы можете сделать так чтобы компьютером ваш одноплатник распознавался одним или несколькими такими устройствами если вам достаточно одного устройства то вы можете загрузить модуль для этого устройства опционально передав ему параметры для конфигурации при помощи команды  когда отпадёт необходимость в этом устройстве его можно выгрузить при помощи команды   чтобы на одном физическом порту у вас распознавалось несколько устройств одновременно нужно использовать модуль  и сконфигурировать эти устройства при помощи создания структур в файловой системе  в директории      такие устройства называются композитными  устройствами вы скорее всего встречались с такими например если у вас беспроводная клавиатура и мышь а для них используется один приёмопередатчик в нашем случае мы создадим композитное  устройство которое будет последовательным портом и устройством хранения последовательный порт мы будем использовать для подключения к нашему эмулятору оптических дисков через  изначально я хотел что бы это была сетевая карта и  но карта требует настройки в операционной системе компьютера поэтому для простоты отказался от этой идеи в пользу последовательного порта ▍ создание композитного  устройства при помощи  загружаем модуль    заполняем дескрипторы для устройства                                                                          создаём конфигурацию                                      создаём и подключаем функцию  последовательный порт через                    создаём и подключаем функцию     в данном случае это эмуляция   для  образа                                                                        активируем созданное устройство        ▍ удаление композитного  устройства при помощи  деактивируем устройство             удаляем функцию                  удаляем функцию               удаляем конфигурацию             удаляем устройство         выгружаем загруженные устройством модули               cтруктура файловой системы для созданного эмулятора    тема  очень объёмная и её невозможно изложить в одной статье поэтому приведу только тот минимум который позволяет понять как мы будем использовать   технология которая позволяет связывать устройства без проводов по радиоканалу на данный момент существует множество версий спецификации  спецификация  освещает множество вопросов чтобы передать данные с одного устройства на другое необходимо наличие на обоих устройствах контроллеров и стеков   контроллер аппаратное устройство обычно выполненное в виде микросхемы или части более сложной микросхемы позволяющее получать передавать данные по радиоканалу в соответствии со спецификацией   стек программная реализация протоколов описанных в спецификации  протоколы  предназначенные для решения определённых задач группируются в профили  мы будем использовать два профиля      который поддерживается всеми  устройствами     который подразумевает использование последовательного порта поверх соединения  ▍ поддержка  операционными системами  контроллеры могут иметь различные аппаратные интерфейсы для доступа это может быть    в случае операционной системы многие детали скрываются и можно о них не думать с контроллером можно работать на низком уровне через драйвер или уже используя высокоуровневые библиотеки и приложения предоставляемые стеком  например в  широко распространён стек  ▍  стек   состоит из двух частей одна часть представлена модулями ядра  уже включена в ядро если она отсутствует то её нужно включить и перекомпилировать ядро вторая часть представлена приложениями для пространства пользователя приложения позволяют конфигурировать и работать со стеком  на данный момент многие приложения считаются устаревшими и разработчики  рекомендуют использовать более новые приложения и интерфейс   для работы со стеком но как мне кажется именно те старые устаревшие приложения позволяют лучше понять работу  поэтому в учебных целях я буду использовать их для чего нужно будет инициализировать  в режиме совместимости     ▍ протоколы  я не буду утомлять вас различными схемами диаграммами которые вы легко можете найти в интернете расскажу только о тех протоколах с которыми нам предстоит столкнуться и нужно будет сконфигурировать ▍     при помощи протокола  можно определить какие приложения сервисы находятся на хосте и с ними возможен обмен данными через  чтобы можно было увидеть сервис с другого устройства его необходимо зарегистрировать в   например если мы хотим зарегистрировать службу представляющую эмуляцию последовательного порта в  это можно сделать следующей командой    чтобы можно было посмотреть службы зарегистрированные у вас на хосте нужно ввести команду    ▍     протокол  позволяет создавать виртуальное соединение по последовательному порту между двумя хостами на одном из хостов создаётся сервер которому выделяется канал  второй из хостов подключается к нему указывая  адрес и номер канала канал  немного напоминает порт в  или  но если у них и у источника и у получателя есть порты то у  для источника и получателя один и тот же канал поэтому невозможно создать несколько подключений на один и тот же канал в  можно использовать команду  для создания процесса который будет слушать определённый канал  и при соединении запускать другой процесс              в данном случае на  контроллере   будет прослушиваться канал и запускаться процесс   с двумя параметрами командной строки   и   ▍ утилита  утилита  позволяет сопрягать устройство на котором вы её запустили с другим устройством вы можете сделать устройство видимым для обнаружения другими устройствами а также найти другое устройство и выполнить с ним сопряжение более подробно расписано в документации к утилите которая доступна по команде   ▍    для отладки приложений использующих  удобно использовать приложение для     это приложение позволяет работать с  устройствами у которых доступен профиль  в нашем случае мы будем использовать его как визуальный интерфейс для работы с нашим эмулятором оптических дисков сборка и модификация дистрибутива    чтобы сделать полноценный аппаратный эмулятор оптических дисков нам придётся немного модифицировать исходный дистрибутив  это подразумевает перекомпиляцию ядра изменение нескольких конфигурационных файлов и добавление своего программного кода для меня это было удобно сделать при помощи  ▍ кросс компиляция ядра  кросс компиляция позволяет на компьютере с одной архитектурой получать исполняемые файлы для другой архитектуры мы можем компилировать ядро  для   на   а можем используя кросс компиляцию сделать это на обычном компьютере с архитектурой  что существенно сократит время компиляции из за большего быстродействия компьютера подробно о том как выполнять кросс компиляцию    можно почитать тут ▍  и запуск бинарных файлов другой архитектуры команда   позволяет запускать процессы с изменённой корневой системой это кажется немного запутанным но суть в следующем в качестве параметра команде передаётся путь к корневой директории в результате запуска команды через  запущенный процесс будет считать что корнем файловой системы является та директория которую передали в качестве параметра применений у команды  несколько например её можно использовать чтобы запустить команду  для   в  контейнере интересно что   для  позволяет запускать исполняемые файлы для архитектуры  в  версии  такое сделать можно но нужна дополнительная настройка реализация созданный мной проект состоит из следующих файлов  и скрипт который выполняется в  контейнере файлы которые необходимо добавить или обновить в исходном дистрибутиве  основная логика работы эмулятора оптических дисков написанная на языке     скрипт для обработки команд от пользователя и передачи их эмулятору     скрипт  вспомогательными функциями      служба которая запускает интерпретатор команд на создаваемом  соединении телефона и      служба которая запускает эмулятор оптических дисков при загрузке   изменённая служба  для инициализации     изменённая служба  для запуска  на создаваемом соединении на последовательном порту   служба  для запуска скрипта при первой загрузке операционной системы я её позаимствовал из проекта     изменённый файл конфигурации для загрузки   содержит подключение   это необходимо чтобы  контроллер мог работать в     скрипт который запускается службой      файл который необходим чтобы установить пароль для пользователя  в последних версиях    пользователь  не активирован по умолчанию поэтому необходимо наличие этого файла  файл необходим чтобы активировать  который отключён по умолчанию    файл необходимый если вы хотите настроить   на работу с вашей точкой доступа листинги файлов не привожу так как это ещё больше раздует и так большую статью ознакомиться вы с ними можете здесь как пользоваться эмулятором собираем  образ      собираем образ                 записываем образ на  карту вставляем её в   подключаем     к компьютеру через некоторое время у вас появится съёмный накопитель на этот съёмный накопитель содержащий файл   копируем образы которые хотим эмулировать находим виртуальный  порт созданный после подключения   к компьютеру подключаемся к   через с помощью  через виртуальный  порт запускаем интерактивное приложение для управления эмулятором    если хотим сделать управление с телефона то выполняем сопряжение телефона и   для чего вводим в эмуляторе терминала команду   делаем   доступным для обнаружения   находим его на телефоне и выполняем полключение после чего соглашаемся с  кодом на телефоне и    выходим из   запускаем на телефоне    и выполняем подключение к   из него теперь можно посылать команды созданному эмулятору   команды которые можно посылать эмулятору  переключение в режим эмуляции внешних жёстких дисков  переключение в режим эмуляции внешних приводов оптических дисков  вывести список доступных  образов которые можно эмулировать  порядковый номер поместить  образ для эмуляции  извлечь  образ из эмулятора  показать список доступных команд в текущем режиме особенности моего эмулятора интересно но в  по умолчанию нельзя эмулировать  образы размером больше  я просмотрел исходный код драйвера в файле        и предположил что нет оснований не применять патч к ядру  от   который просто удаляет одно условие образы эмулировались нормально и при снятии  образа с эмулируемого   он был идентичен исходному поверял по хеш коду для файла  образа не пойму почему есть это ограничение в  и почему его до сих пор не убрали если вы знаете ответ ответьте в комментариях моя реализация не требует никаких дополнительных деталей нужен только     один или два кабеля  и адаптер питания если будете использовать два кабеля  один для питания второй для передачи данных хоть и использование дополнительного кабеля и адаптера добавляет громоздкости это решает проблему перезагрузки   если компьютер или ноутбук отключает ненадолго питание при перезагрузке кроме того я не использую  только  выводы полученное программно аппаратное решение хоть и обладает рядом недостатков по сравнению с карманом  не поддерживается  нет интерактивного меню на самом устройстве позволит вам установить практически любую операционную систему на широкий спектр компьютеров путём простого копирования  образа решение является прототипом но вместе с тем позволяет углубить знания по многим темам или получить если вы были с ними не знакомы так как основной целью была разработка прототипа я запускал  в режиме совместимости и почти всю логику написал на  я хотел показать возможность превратить встраиваемое устройство с операционной системой  в аппаратный эмулятор флеш накопителя или привода оптических дисков приложив минимум усилий надеюсь что это удалось чтобы уместить всё в одной статье я лишь поверхностно коснулся тех тем которые необходимы для понимания если вас заинтересовало вы можете самостоятельно изучить их углублённо объём статьи не позволяет осветить все интересности с которыми я столкнулся при разработке эмулятора и решения которые применял и проверял приведу лишь несколько из них например я долго боролся с зависанием при удалении составного устройства помогло использование службы   вместо  хотя во многих статьях упоминалась  я долго разбирался как можно сделать сопряжение через  между  и телефоном использовал команду   но потом всё таки отказался от неё в пользу  при переключении эмулятора в режим  для записи  образов изначально я открывал для доступа всю  карту и хранил  образы в отдельном разделе но потом посчитал что для безопасности лучше хранить образ диска с  образами в отдельном файле и открывать доступ только к нему хоть это и снизило скорость записи но пользователя не обескураживают появляющиеся несколько дисков разработанный прототип есть куда улучшать можно например создать более минималистичный дистрибутив  который будет содержать только то что реально используется для эмуляции или создать более удобное графическое приложение для  для работы с эмулятором а можно упростить работу с  напрямую работая с драйверами  или используя интерфейс   для работы с  устройствами или вообще всё таки взяться за паяльник и сделать устройство более похожее по функционалу на карман  но главное вы увидели что это реально сделать а когда видишь положительный результат это вдохновляет на большее творчество в процессе тестирования и отладки программного кода было замечено что на     эмулятор   дисков великолепно определялся в  но отказывался определяться в  эмпирически было определено что помогает отключение режима экономии энергии процессора в  также ноутбук отключал питание на  при перезагрузке поэтому понадобилось дополнительное питание   интересно но на    и   всё работает без проблем решение с небольшими модификациями можно реализовать на   но если вы поняли суть решения вы его сможете повторить и на других одноплатных компьютерах которые имеют выведенные  порты для  или  контроллеры периферийных устройств  вконтакте  карма рейтинг пользователь комментарии  на данный момент только выполняется в   для  в  он работать не будет в заключение хочу сказать что существует ещё один способ эмулировать оптические диски который я не пробовал но знаю о его существовании из ваших комментариев к одной из моих статей это программа  для  я ей не пользовался так как для её работы нужно получать права  на телефоне но скорее всего из за ограничений в ядре  программа поддерживает  образы до  и или работает только с гибридными  образами если я не прав буду рад увидеть ваши опровержения в комментариях  канал с розыгрышами призов новостями  и постами о ретроиграх 🕹️ теги        эмуляция       статьи хабы блог компании системное администрирование разработка под  разработка на    или сделай сам редакторский дайджест присылаем лучшие статьи раз в месяц электропочта публикации  часов назад как обнулялся   разбираем траекторию погружения на дно швейцарского гига банка мин  часов назад байки погромиста если кто то скажет что программирование это скучно мин  часов назад обещания настоящие и не очень мин  часов назад удивительное рядом как устроен буфер обмена в  и  мин лучшие за сутки похожие  обзор  мнение  мнение   часа назад  порт   новости весны средний мин показать еще  дайджест информация сайт   дата регистрации марта дата основания июля численность – человек местоположение россия представитель  ссылки   сервер от рублей в месяц   дата центры  в москве санкт петербурге казани екатеринбурге новосибирске лондоне франкфурте цюрихе амстердаме   помощь и вопросы   партнерская программа       ггц     рублей в месяц     от рублей в месяц бесплатный тестовый период дня    в цюрихе дата центр   швейцарское качество по низкой цене ваш аккаунт войти регистрация разделы публикации новости хабы компании авторы песочница информация устройство сайта для авторов для компаний документы соглашение конфиденциальность услуги корпоративный блог медийная реклама нативные проекты образовательные программы стартапам мегапроекты настройка языка техническая поддержка вернуться на старую версию © –    антивирусная защита виртуального сервера легкий агент для     в лондоне дата центр   английская точность за рубли    с видеокартой на мощных серверах ггц   приложения   приложение для мониторинга и управления виртуальными серверами  с мобильных устройств   виджет блог на хабре часов назад как устроено индексирование баз данных  часов назад удивительное рядом как устроен буфер обмена в  и  вчера в будни техпода размещение игрового сервера на  вчера в ностальгические игры   мар в инструменты наблюдаемости о которых нужно знать в году     ,несмотря постепенно оптические диски уходят прошлое образов этих дисков остаётся актуальным многие операционные системы поставляются виде образов администраторам необходимо поддерживать разношёрстный парк старых персональных компьютеров мар аппаратный эмулятор паяльника средний компании системное администрирование разработка разработка вызовы ждать операторам будущем существует множество решений установить операционную систему образа записи оптический носитель затрагивал тему образов моих статьях раскрываем секреты загрузочных образов нужно знать внешних загрузочных дисках статье рассказать ещё одном способе который оказывается вшит ядро ваш одноплатный компьютер имеет разъём возможна установка большой долей вероятности можете одноплатника аппаратный эмулятор привода оптических дисков способ заинтересовал проверил получив положительный результат решил поделиться вами узнал интересного систематизировал свои знания поэтому надеюсь чтение познавательно интересно хотите посмотреть получится итоге уточнить детали можете исходный моём репозитории написании поставил следующие цели аппаратный эмулятор должен реализован использования паяльника макетных плат реализация должна понятна человеку имеющему лишь базовые представления должно таким небольшими изменениями реализовать различных одноплатных компьютерах побудить интерес читателя изучению используемых статье технологий изложить материал необходимый решения лаконично просто уверен получилось большого объёма темы буду признателен отзывах напишете своё мнение оглавление суть решения проверка решения практике проверки идеи реализации операционная система сборка модификация дистрибутива реализация пользоваться эмулятором особенности моего эмулятора выводы суть решения заключается модифицируя операционную систему одноплатном компьютере встраиваемой системе устройство которое распознаваться компьютером внешний оптический привод флеш накопитель ядро включена поддержка эмуляции эмуляции флеш накопителя значит любую встраиваемую систему превратить ещё необходимо встраиваемая система имела контроллер контроллер периферийного устройства проверка решения практике делал эмулятор оптических дисков используя можете другие одноплатные компьютеры естественно придётся самим разбираться некоторыми проблемами которые большой долей вероятностью возникнут других одноплатных компьютеров кроме поэтому привожу алгоритм делал скачать образ сайта записать образ карту использовал программу добавить строку файле карте записать карту нужен установить пароль пользователя включить указать точку доступа пароль вставить карту подключить разъём разъёму компьютера подождать выполнится первая загрузка подключится сети адрес сети подключиться нему протоколу использовал приложение записать образы которые хотите эмулировать файловую систему подключиться помощи приложения ваш стал внешним ввести команду компьютере распознается внешний который вставлен диск прекращения эмуляции ввести команду приведённый устанавливает пользователя пароль пустой который содержит никаких проверки идеи реализации приведённая выше последовательность шагов позволяет посмотреть работу эмуляции действии однако обладает рядом недостатков загрузить выбрать образ эмуляции необходимо наличие перезагрузке необходимо заново монтировать образ нужно эмулировать образ загрузки операционной системы понадобится ещё компьютер управления эмулировать образ размером максимум интересно избавиться этих недостатков интерес разобраться вопросе предлагаю продолжить чтение краткое содержание моей реализации следующее общения использоваться устройства возможна автономном режиме подключений управляющий скрипт оформляется виде службы управления использоваться приложение эмуляции оптических дисков образов размером необходимо внести небольшие изменения модуль ядра выполнить перекомпиляцию приведу кратко нужно знать понять суть будем делать операционная система ▍ ядро ядро содержит абстракции работы устройствами оно запускается реализуются абстракции специальных программах называемых драйверами ос драйвер находиться непосредственно файле ядра оформлен виде отдельного модуля большинстве случаев предпочтителен второй способ модули динамически удалять добавлять например устройство подключено системе осуществляется драйвер нам нужен выгрузить памяти загружать вообще загрузке ядра необходима информация устройствах которые присутствуют системе корректно загрузить драйверы модули эта информация передаваться различных источников например архитектуре архитектуре ▍ нужно модифицировать загрузить корректно драйвера устройств делается помощи подключения содержат информацию необходимо изменить исходном ▍ режим работы очень различных статьях самоучителях работе необходимо подключение монитора клавиатуры мыши самом деле возможность работать называемом режиме режиме работаете помощи эмулятора терминала соединение главная сложность заключается работать режиме самого начала сразу записи образа операционной системы карту лишнего монитора клавиатуры активировать настроить определённой точки доступа такая возможность достаточно разместить определённые разделе карте загрузиться неё сделает необходимые настройки сама ▍ файловые системы блочные устройства разделы монтирование восхищала идея всё файлом правильно используя средства практически программирования выполнять сложные блочное устройство некоторый который записывать считывать блоками байтов различной длины происходить зависит реально ассоциирован например ассоциирован жёстким диском будут читаться записываться жёсткий диск обращая внимание разделы файловые системы ассоциирован разделом жёсткого диска будут читаться записываться обращая внимание файловую систему помощи команды добиться ассоциироваться обычным файлом диске позволит создавать образы разделов дисков ещё полезной командой команда которая создаёт блочные устройства файла образа диска каждое устройств ассоциировано образом раздела который хранится файле форматирование раздела выполняется одной командой качестве параметра необходимо передать имя файла блочного устройства например создания файловой системы блочном устройстве работать файлами файловой системы размещённой блочном устройстве нужно примонтировать файловую систему корневой файловой системе помощи команды обратите внимание директория производиться монтирование должна существовать будете монтировать нужно размонтировать файловую систему используется команда посмотреть какие блочные устройства примонтированы команду ▍ загрузка происходит несколько этапов сначала загружается ядро операционной системы затем ядро запускает процесс процесса загрузить инициализировать процессы пространства пользователя находиться памяти перезагрузки выключения компьютера устройства долгие годы существования написано множество реализаций данный момент многих дистрибутивах используется реализация называемая её будем минимум команд которые необходимо знать работы команда назначение запустить службу остановить службу посмотреть статус службы включить службу служба автоматически запущена следующей загрузке выключить службу посмотреть логи службы начиная момента последней загрузки ▍ терминалы администрирования ос используют эмулятор терминала позволяет подключаться компьютеру устройству ос различных соединений эмулируемого последовательного порта работать удалённо консолью такое возможно ос должна запущена специальная которая взаимодействовать случае соединения случае последовательного порта подключении последовательный порт умолчанию увидите чёрно белый экран поддержки манипулятора мышь добавить поддержку мыши цветного экрана необходимо изменить значение переменной окружения файле устройства могли работать друг другом необходимо наличие каждого контроллера контроллер конкретный момент времени работать режиме хоста режиме периферийного устройства одно взаимодействующих устройств работает режиме другое должно работать режиме существуют следующие виды контроллеров работает режиме работает режиме работать режиме хоста режиме периферийного устройства переключение режимов аппаратным помощи особой распайки кабеля кабель переводит контроллер режим хоста программным режим хоста подразумевает посылку команд режим периферийного устройства обработку ▍ контроллер возьмём телефон контроллером означает сопряжении компьютером записи файлов компьютера телефон играть роль периферийного устройства сопряжении периферийным устройством мышью клавиатурой сетевой картой флэш накопителем монитором принтером телефон играть роль хоста обычно контроллер периферийного устройства контроллер присутствуют встраиваемых устройствах также могут интегрированы однокристальную систему факту устройстве отсутствовать физический разъём подключения например установлена которая имеет контроллер фактически физический разъём ▍ дескрипторы каждое устройство имеет дескрипторы дескрипторы информация устройстве которая используется операционной системой корректного выбора драйвера устройства понравилось описание которое приведено сайте ▍ создание устройств ядро содержит модули которые позволяют создавать виртуальные устройства последовательный порт сетевая карта загрузив настроив модули можете компьютером ваш одноплатник распознавался одним несколькими такими устройствами достаточно одного устройства можете загрузить модуль устройства опционально передав параметры конфигурации помощи команды отпадёт необходимость устройстве выгрузить помощи команды одном физическом порту распознавалось несколько устройств одновременно нужно модуль сконфигурировать устройства помощи создания структур файловой системе директории такие устройства называются композитными устройствами скорее встречались такими например беспроводная клавиатура мышь используется приёмопередатчик нашем случае создадим композитное устройство которое последовательным портом устройством хранения последовательный порт будем подключения нашему эмулятору оптических дисков изначально сетевая карта карта требует настройки операционной системе компьютера поэтому простоты отказался идеи пользу последовательного порта ▍ создание композитного устройства помощи загружаем модуль заполняем дескрипторы устройства создаём конфигурацию создаём подключаем функцию последовательный порт создаём подключаем функцию данном случае эмуляция образа активируем созданное устройство ▍ удаление композитного устройства помощи деактивируем устройство удаляем функцию удаляем функцию удаляем конфигурацию удаляем устройство выгружаем загруженные устройством модули cтруктура файловой системы созданного эмулятора тема очень объёмная её невозможно изложить одной статье поэтому приведу минимум который позволяет понять будем технология которая позволяет связывать устройства проводов радиоканалу данный момент существует множество версий спецификации спецификация освещает множество вопросов передать одного устройства другое необходимо наличие обоих устройствах контроллеров стеков контроллер аппаратное устройство обычно выполненное виде микросхемы части сложной микросхемы позволяющее получать передавать радиоканалу соответствии спецификацией стек программная реализация протоколов описанных спецификации протоколы предназначенные решения определённых задач группируются профили будем профиля который поддерживается всеми устройствами который подразумевает последовательного порта поверх соединения ▍ поддержка операционными системами контроллеры могут иметь различные аппаратные интерфейсы доступа случае операционной системы многие детали скрываются думать контроллером работать низком уровне драйвер используя высокоуровневые библиотеки приложения предоставляемые стеком например широко распространён стек ▍ стек состоит двух частей одна часть представлена модулями ядра включена ядро отсутствует её нужно включить перекомпилировать ядро вторая часть представлена приложениями пространства пользователя приложения позволяют конфигурировать работать стеком данный момент многие приложения считаются устаревшими разработчики рекомендуют новые приложения интерфейс работы стеком именно те старые устаревшие приложения позволяют понять работу поэтому учебных целях буду нужно инициализировать режиме совместимости ▍ протоколы буду утомлять различными схемами диаграммами которые легко можете интернете расскажу тех протоколах которыми нам предстоит столкнуться нужно сконфигурировать ▍ помощи протокола определить какие приложения сервисы находятся хосте ними возможен обмен данными увидеть сервис другого устройства необходимо зарегистрировать например хотим зарегистрировать службу представляющую эмуляцию последовательного порта следующей командой посмотреть службы зарегистрированные хосте нужно ввести команду ▍ протокол позволяет создавать виртуальное соединение последовательному порту двумя хостами одном хостов создаётся которому выделяется канал второй хостов подключается нему указывая адрес номер канала канал немного напоминает порт источника получателя порты источника получателя канал поэтому невозможно несколько подключений канал команду создания процесса который слушать определённый канал соединении запускать процесс данном случае контроллере прослушиваться канал запускаться процесс двумя параметрами командной строки ▍ утилита утилита позволяет сопрягать устройство котором её запустили другим устройством можете устройство видимым обнаружения другими устройствами также другое устройство выполнить сопряжение подробно расписано документации утилите которая доступна команде ▍ отладки приложений использующих удобно приложение приложение позволяет работать устройствами которых доступен профиль нашем случае будем визуальный интерфейс работы нашим эмулятором оптических дисков сборка модификация дистрибутива полноценный аппаратный эмулятор оптических дисков нам придётся немного модифицировать исходный дистрибутив подразумевает перекомпиляцию ядра изменение нескольких конфигурационных файлов добавление своего программного удобно помощи ▍ кросс компиляция ядра кросс компиляция позволяет компьютере одной архитектурой получать исполняемые архитектуры можем компилировать ядро можем используя кросс компиляцию обычном компьютере архитектурой существенно сократит компиляции большего быстродействия компьютера подробно выполнять кросс компиляцию почитать ▍ запуск бинарных файлов архитектуры команда позволяет запускать процессы изменённой корневой системой немного запутанным суть следующем качестве параметра команде передаётся путь корневой директории результате запуска команды запущенный процесс считать корнем файловой системы та директория которую передали качестве параметра применений команды несколько например её запустить команду контейнере интересно позволяет запускать исполняемые архитектуры версии такое нужна дополнительная настройка реализация созданный мной состоит следующих файлов скрипт который выполняется контейнере которые необходимо добавить обновить исходном дистрибутиве основная логика работы эмулятора оптических дисков написанная языке скрипт обработки команд пользователя передачи эмулятору скрипт вспомогательными функциями служба которая запускает интерпретатор команд создаваемом соединении телефона служба которая запускает эмулятор оптических дисков загрузке изменённая служба инициализации изменённая служба запуска создаваемом соединении последовательном порту служба запуска скрипта первой загрузке операционной системы её позаимствовал проекта изменённый конфигурации загрузки содержит подключение необходимо контроллер мог работать скрипт который запускается службой который необходим установить пароль пользователя последних версиях активирован умолчанию поэтому необходимо наличие файла необходим активировать который отключён умолчанию необходимый хотите настроить работу вашей точкой доступа листинги файлов привожу ещё раздует большую статью ознакомиться ними можете пользоваться эмулятором собираем образ собираем образ записываем образ карту вставляем её подключаем компьютеру некоторое появится съёмный накопитель съёмный накопитель содержащий копируем образы которые хотим эмулировать находим виртуальный порт созданный подключения компьютеру подключаемся виртуальный порт запускаем интерактивное приложение управления эмулятором хотим управление телефона выполняем сопряжение телефона вводим эмуляторе терминала команду делаем доступным обнаружения находим телефоне выполняем полключение соглашаемся телефоне выходим запускаем телефоне выполняем подключение посылать команды созданному эмулятору команды которые посылать эмулятору переключение режим эмуляции внешних жёстких дисков переключение режим эмуляции внешних приводов оптических дисков вывести список доступных образов которые эмулировать порядковый номер поместить образ эмуляции извлечь образ эмулятора показать список доступных команд текущем режиме особенности моего эмулятора интересно умолчанию эмулировать образы размером просмотрел исходный драйвера файле предположил оснований применять патч ядру который просто удаляет одно условие образы эмулировались нормально снятии образа эмулируемого идентичен исходному поверял хеш файла образа пойму почему ограничение почему сих пор убрали знаете ответ ответьте комментариях реализация требует никаких дополнительных деталей нужен кабеля адаптер питания будете кабеля питания второй передачи дополнительного кабеля адаптера добавляет громоздкости решает проблему перезагрузки компьютер ноутбук отключает ненадолго питание перезагрузке кроме использую выводы полученное программно аппаратное обладает рядом недостатков сравнению карманом поддерживается интерактивного меню самом устройстве позволит установить практически любую операционную систему широкий спектр компьютеров путём простого копирования образа прототипом вместе позволяет углубить знания многим темам ними знакомы основной целью разработка прототипа запускал режиме совместимости логику показать возможность превратить встраиваемое устройство операционной системой аппаратный эмулятор флеш накопителя привода оптических дисков приложив минимум усилий надеюсь удалось уместить всё одной статье лишь поверхностно коснулся тех которые необходимы понимания заинтересовало можете самостоятельно изучить углублённо объём позволяет осветить интересности которыми столкнулся разработке эмулятора решения которые применял проверял приведу лишь несколько например долго боролся зависанием удалении составного устройства помогло службы вместо хотя многих статьях упоминалась долго разбирался сопряжение телефоном использовал команду всё таки отказался неё пользу переключении эмулятора режим записи образов изначально открывал доступа карту хранил образы отдельном разделе посчитал безопасности хранить образ диска образами отдельном файле открывать доступ нему снизило скорость записи пользователя обескураживают появляющиеся несколько дисков разработанный прототип улучшать например минималистичный дистрибутив который содержать реально используется эмуляции удобное графическое приложение работы эмулятором упростить работу напрямую работая драйверами используя интерфейс работы устройствами вообще всё таки взяться паяльник устройство похожее функционалу карман главное увидели реально видишь положительный результат вдохновляет большее творчество процессе тестирования отладки программного замечено эмулятор дисков великолепно определялся отказывался определяться эмпирически определено помогает отключение режима экономии энергии процессора также ноутбук отключал питание перезагрузке поэтому понадобилось дополнительное питание интересно всё работает проблем небольшими модификациями реализовать поняли суть решения сможете повторить других одноплатных компьютерах которые имеют выведенные порты контроллеры периферийных устройств вконтакте данный момент выполняется работать заключение сказать существует ещё способ эмулировать оптические диски который пробовал знаю существовании ваших комментариев одной моих статей пользовался её работы нужно получать права телефоне скорее ограничений ядре поддерживает образы работает гибридными образами прав буду рад увидеть ваши опровержения комментариях канал розыгрышами призов новостями постами ретроиграх 🕹️ теги эмуляция компании системное администрирование разработка разработка сделай редакторский дайджест присылаем лучшие электропочта публикации часов назад обнулялся разбираем траекторию погружения дно швейцарского гига банка мин часов назад байки погромиста скажет программирование скучно мин часов назад обещания настоящие очень мин часов назад удивительное рядом устроен буфер обмена мин лучшие сутки похожие обзор мнение мнение часа назад порт новости весны средний мин показать дайджест информация сайт дата регистрации марта дата основания июля численность – человек местоположение россия представитель ссылки рублей дата центры москве санкт петербурге казани екатеринбурге новосибирске лондоне франкфурте цюрихе амстердаме помощь вопросы партнерская ггц рублей рублей бесплатный тестовый период дня цюрихе дата центр швейцарское качество низкой цене ваш аккаунт войти регистрация разделы публикации новости компании авторы песочница информация устройство сайта авторов компаний документы соглашение конфиденциальность услуги корпоративный медийная реклама нативные проекты образовательные программы стартапам мегапроекты настройка языка техническая поддержка вернуться старую версию © – антивирусная защита виртуального сервера легкий агент лондоне дата центр английская точность рубли видеокартой мощных серверах ггц приложения приложение мониторинга управления виртуальными серверами мобильных устройств виджет хабре часов назад устроено индексирование баз часов назад удивительное рядом устроен буфер обмена будни техпода размещение игрового сервера ностальгические игры мар инструменты наблюдаемости которых нужно знать году,несмотр постепен оптическ диск уход прошл образ эт диск оста актуальн мног операцион систем поставля вид образ администратор необходим поддержива разношерстн парк стар персональн компьютер мар аппаратн эмулятор паяльник средн компан системн администрирован разработк разработк вызов ждат оператор будущ существ множеств решен установ операцион сист образ запис оптическ носител затрагива тем образ мо стат раскрыва секрет загрузочн образ нужн знат внешн загрузочн диск стат рассказа ещ одн способ котор оказыва вшит ядр ваш одноплатн компьютер имеет разь возможн установк больш дол вероятн может одноплатник аппаратн эмулятор привод оптическ диск способ заинтересова провер получ положительн результат реш подел вам узна интересн систематизирова сво знан поэт над чтен познавательн интересн хот посмотрет получ итог уточн дета может исходн мо репозитор написан постав след цел аппаратн эмулятор долж реализова использован паяльник макетн плат реализац должн понятн человек имеющ лиш базов представлен должн так небольш изменен реализова различн одноплатн компьютер побуд интерес читател изучен используем стат технолог излож материа необходим решен лаконичн прост увер получ больш объем тем буд признател отзыв напишет сво мнен оглавлен сут решен проверк решен практик проверк ид реализац операцион систем сборк модификац дистрибутив реализац пользова эмулятор особен мо эмулятор вывод сут решен заключа модифициру операцион сист одноплатн компьютер встраива систем устройств котор распознава компьютер внешн оптическ привод флеш накопител ядр включ поддержк эмуляц эмуляц флеш накопител знач люб встраива сист преврат ещ необходим встраива систем имел контроллер контроллер периферийн устройств проверк решен практик дела эмулятор оптическ диск использу может друг одноплатн компьютер естествен придет сам разбира некотор проблем котор больш дол вероятн возникнут друг одноплатн компьютер кром поэт привож алгоритм дела скача образ сайт записа образ карт использова программ добав строк файл карт записа карт нуж установ парол пользовател включ указа точк доступ парол встав карт подключ разь разь компьютер подожда выполн перв загрузк подключ сет адрес сет подключ нем протокол использова приложен записа образ котор хот эмулирова файлов сист подключ помощ приложен ваш стал внешн ввест команд компьютер распозна внешн котор вставл диск прекращен эмуляц ввест команд приведен устанавлива пользовател парол пуст котор содерж никак проверк ид реализац приведен выш последовательн шаг позволя посмотрет работ эмуляц действ однак облада ряд недостатк загруз выбра образ эмуляц необходим налич перезагрузк необходим занов монтирова образ нужн эмулирова образ загрузк операцион систем понадоб ещ компьютер управлен эмулирова образ размер максимум интересн избав эт недостатк интерес разобра вопрос предлага продолж чтен кратк содержан мо реализац след общен использова устройств возможн автономн режим подключен управля скрипт оформля вид служб управлен использова приложен эмуляц оптическ диск образ размер необходим внест небольш изменен модул ядр выполн перекомпиляц привед кратк нужн знат поня сут буд дела операцион систем ▍ ядр ядр содерж абстракц работ устройств он запуска реализ абстракц специальн программ называ драйвер ос драйвер наход непосредствен файл ядр оформл вид отдельн модул большинств случа предпочтител втор способ модул динамическ удаля добавля например устройств подключ систем осуществля драйвер нам нуж выгруз памят загружа вообщ загрузк ядр необходим информац устройств котор присутств систем корректн загруз драйвер модул эт информац передава различн источник например архитектур архитектур ▍ нужн модифицирова загруз корректн драйвер устройств дела помощ подключен содержат информац необходим измен исходн ▍ реж работ очен различн стат самоучител работ необходим подключен монитор клавиатур мыш сам дел возможн работа называ режим режим работа помощ эмулятор термина соединен главн сложност заключа работа режим сам нача сраз запис образ операцион систем карт лишн монитор клавиатур активирова настро определен точк доступ так возможн достаточн размест определен раздел карт загруз не сдела необходим настройк сам ▍ файлов систем блочн устройств раздел монтирован восхища иде все файл правильн использу средств практическ программирован выполня сложн блочн устройств некотор котор записыва считыва блок байт различн длин происход завис реальн ассоциирова например ассоциирова жестк диск будут чита записыва жестк диск обра вниман раздел файлов систем ассоциирова раздел жестк диск будут чита записыва обра вниман файлов сист помощ команд доб ассоциирова обычн файл диск позвол создава образ раздел диск ещ полезн команд команд котор созда блочн устройств файл образ диск кажд устройств ассоциирова образ раздел котор хран файл форматирован раздел выполня одн команд качеств параметр необходим переда им файл блочн устройств например создан файлов систем блочн устройств работа файл файлов систем размещен блочн устройств нужн примонтирова файлов сист корнев файлов систем помощ команд обрат вниман директор производ монтирован должн существова будет монтирова нужн размонтирова файлов сист использ команд посмотрет как блочн устройств примонтирова команд ▍ загрузк происход нескольк этап снача загружа ядр операцион систем зат ядр запуска процесс процесс загруз инициализирова процесс пространств пользовател наход памят перезагрузк выключен компьютер устройств долг год существован написа множеств реализац дан момент мног дистрибутив использ реализац называ е буд минимум команд котор необходим знат работ команд назначен запуст служб останов служб посмотрет статус служб включ служб служб автоматическ запущ след загрузк выключ служб посмотрет лог служб начин момент последн загрузк ▍ терминал администрирован ос использ эмулятор термина позволя подключа компьютер устройств ос различн соединен эмулируем последовательн порт работа удален консол так возможн ос должн запущ специальн котор взаимодействова случа соединен случа последовательн порт подключен последовательн порт умолчан увид черн бел экра поддержк манипулятор мыш добав поддержк мыш цветн экра необходим измен значен перемен окружен файл устройств могл работа друг друг необходим налич кажд контроллер контроллер конкретн момент времен работа режим хост режим периферийн устройств одн взаимодейств устройств работа режим друг должн работа режим существ след вид контроллер работа режим работа режим работа режим хост режим периферийн устройств переключен режим аппаратн помощ особ распайк кабел кабел перевод контроллер реж хост программн реж хост подразумева посылк команд реж периферийн устройств обработк ▍ контроллер возьм телефон контроллер означа сопряжен компьютер запис файл компьютер телефон игра рол периферийн устройств сопряжен периферийн устройств мыш клавиатур сетев карт флэш накопител монитор принтер телефон игра рол хост обычн контроллер периферийн устройств контроллер присутств встраива устройств такж могут интегрирова однокристальн сист факт устройств отсутствова физическ разь подключен например установл котор имеет контроллер фактическ физическ разь ▍ дескриптор кажд устройств имеет дескриптор дескриптор информац устройств котор использ операцион систем корректн выбор драйвер устройств понрав описан котор привед сайт ▍ создан устройств ядр содерж модул котор позволя создава виртуальн устройств последовательн порт сетев карт загруз настро модул может компьютер ваш одноплатник распознава одн нескольк так устройств достаточн одн устройств может загруз модул устройств опциональн переда параметр конфигурац помощ команд отпадет необходим устройств выгруз помощ команд одн физическ порт распознава нескольк устройств одновремен нужн модул сконфигурирова устройств помощ создан структур файлов систем директор так устройств называ композитн устройств скор встреча так например беспроводн клавиатур мыш использ приемопередатчик наш случа создад композитн устройств котор последовательн порт устройств хранен последовательн порт буд подключен наш эмулятор оптическ диск изначальн сетев карт карт треб настройк операцион систем компьютер поэт простот отказа ид польз последовательн порт ▍ создан композитн устройств помощ загружа модул заполня дескриптор устройств созда конфигурац созда подключа функц последовательн порт созда подключа функц дан случа эмуляц образ активиру созда устройств ▍ удален композитн устройств помощ деактивиру устройств удаля функц удаля функц удаля конфигурац удаля устройств выгружа загружен устройств модул cтруктур файлов систем созда эмулятор тем очен объемн е невозможн излож одн стат поэт привед минимум котор позволя поня буд технолог котор позволя связыва устройств провод радиоканал дан момент существ множеств верс спецификац спецификац освеща множеств вопрос переда одн устройств друг необходим налич обо устройств контроллер стек контроллер аппаратн устройств обычн выполнен вид микросхем част сложн микросхем позволя получа передава радиоканал соответств спецификац стек программн реализац протокол описа спецификац протокол предназначен решен определен задач группир проф буд профил котор поддержива всем устройств котор подразумева последовательн порт поверх соединен ▍ поддержк операцион систем контроллер могут имет различн аппаратн интерфейс доступ случа операцион систем мног дета скрыва дума контроллер работа низк уровн драйвер использу высокоуровнев библиотек приложен предоставля стек например широк распростран стек ▍ стек состо двух част одн част представл модул ядр включ ядр отсутств е нужн включ перекомпилирова ядр втор част представл приложен пространств пользовател приложен позволя конфигурирова работа стек дан момент мног приложен счита устаревш разработчик рекоменд нов приложен интерфейс работ стек имен те стар устаревш приложен позволя поня работ поэт учебн цел буд нужн инициализирова режим совместим ▍ протокол буд утомля различн схем диаграмм котор легк может интернет расскаж тех протокол котор нам предсто столкнут нужн сконфигурирова ▍ помощ протокол определ как приложен сервис наход хост ним возмож обм дан увидет сервис друг устройств необходим зарегистрирова например хот зарегистрирова служб представля эмуляц последовательн порт след команд посмотрет служб зарегистрирова хост нужн ввест команд ▍ протокол позволя создава виртуальн соединен последовательн порт двум хост одн хост созда котор выделя кана втор хост подключа нем указыв адрес номер кана кана немн напомина порт источник получател порт источник получател кана поэт невозможн нескольк подключен кана команд создан процесс котор слуша определен кана соединен запуска процесс дан случа контроллер прослушива кана запуска процесс двум параметр командн строк ▍ утилит утилит позволя сопряга устройств котор е запуст друг устройств может устройств видим обнаружен друг устройств такж друг устройств выполн сопряжен подробн расписа документац утил котор доступн команд ▍ отладк приложен использ удобн приложен приложен позволя работа устройств котор доступ профил наш случа буд визуальн интерфейс работ наш эмулятор оптическ диск сборк модификац дистрибутив полноцен аппаратн эмулятор оптическ диск нам придет немн модифицирова исходн дистрибут подразумева перекомпиляц ядр изменен нескольк конфигурацион файл добавлен сво программн удобн помощ ▍ кросс компиляц ядр кросс компиляц позволя компьютер одн архитектур получа исполня архитектур мож компилирова ядр мож использу кросс компиляц обычн компьютер архитектур существен сократ компиляц больш быстродейств компьютер подробн выполня кросс компиляц почита ▍ запуск бинарн файл архитектур команд позволя запуска процесс изменен корнев систем немн запута сут след качеств параметр команд переда пут корнев директор результат запуск команд запущен процесс счита корн файлов систем та директор котор переда качеств параметр применен команд нескольк например е запуст команд контейнер интересн позволя запуска исполня архитектур верс так нужн дополнительн настройк реализац созда мно состо след файл скрипт котор выполня контейнер котор необходим добав обнов исходн дистрибутив основн логик работ эмулятор оптическ диск написа язык скрипт обработк команд пользовател передач эмулятор скрипт вспомогательн функц служб котор запуска интерпретатор команд создава соединен телефон служб котор запуска эмулятор оптическ диск загрузк изменен служб инициализац изменен служб запуск создава соединен последовательн порт служб запуск скрипт перв загрузк операцион систем е позаимствова проект изменен конфигурац загрузк содерж подключен необходим контроллер мог работа скрипт котор запуска служб котор необход установ парол пользовател последн верс активирова умолчан поэт необходим налич файл необход активирова котор отключ умолчан необходим хот настро работ ваш точк доступ листинг файл привож ещ разд больш стат ознаком ним может пользова эмулятор собира образ собира образ записыва образ карт вставля е подключа компьютер некотор появ съемн накопител съемн накопител содержа копиру образ котор хот эмулирова наход виртуальн порт созда подключен компьютер подключа виртуальн порт запуска интерактивн приложен управлен эмулятор хот управлен телефон выполня сопряжен телефон ввод эмулятор термина команд дела доступн обнаружен наход телефон выполня полключен соглаша телефон выход запуска телефон выполня подключен посыла команд созда эмулятор команд котор посыла эмулятор переключен реж эмуляц внешн жестк диск переключен реж эмуляц внешн привод оптическ диск вывест список доступн образ котор эмулирова порядков номер помест образ эмуляц извлеч образ эмулятор показа список доступн команд текущ режим особен мо эмулятор интересн умолчан эмулирова образ размер просмотрел исходн драйвер файл предполож основан применя патч ядр котор прост удаля одн услов образ эмулирова нормальн снят образ эмулируем идентич исходн поверя хеш файл образ пойм поч ограничен поч сих пор убра знает ответ ответьт комментар реализац треб никак дополнительн детал нуж кабел адаптер питан будет кабел питан втор передач дополнительн кабел адаптер добавля громоздк реша пробл перезагрузк компьютер ноутбук отключа ненадолг питан перезагрузк кром использ вывод получен программн аппаратн облада ряд недостатк сравнен карман поддержива интерактивн мен сам устройств позвол установ практическ люб операцион сист широк спектр компьютер пут прост копирован образ прототип вмест позволя углуб знан мног тем ним знаком основн цел разработк прототип запуска режим совместим логик показа возможн преврат встраива устройств операцион систем аппаратн эмулятор флеш накопител привод оптическ диск прилож минимум усил над уда умест все одн стат лиш поверхностн коснул тех котор необходим пониман заинтересова может самостоятельн изуч углублен обь позволя освет интересн котор столкнул разработк эмулятор решен котор применя проверя привед лиш нескольк например долг борол зависан удален составн устройств помогл служб вмест хот мног стат упомина долг разбира сопряжен телефон использова команд все так отказа не польз переключен эмулятор реж запис образ изначальн открыва доступ карт хран образ отдельн раздел посчита безопасн хран образ диск образ отдельн файл открыва доступ нем сниз скорост запис пользовател обескуражива появля нескольк диск разработа прототип улучша например минималистичн дистрибут котор содержа реальн использ эмуляц удобн графическ приложен работ эмулятор упрост работ напрям работ драйвер использу интерфейс работ устройств вообщ все так взят паяльник устройств похож функционал карма главн увидел реальн вид положительн результат вдохновля больш творчеств процесс тестирован отладк программн замеч эмулятор диск великолепн определя отказыва определя эмпирическ определ помога отключен режим эконом энерг процессор такж ноутбук отключа питан перезагрузк поэт понадоб дополнительн питан интересн все работа пробл небольш модификац реализова поня сут решен сможет повтор друг одноплатн компьютер котор имеют выведен порт контроллер периферийн устройств вконтакт дан момент выполня работа заключен сказа существ ещ способ эмулирова оптическ диск котор пробова зна существован ваш комментар одн мо стат пользова е работ нужн получа прав телефон скор ограничен ядр поддержива образ работа гибридн образ прав буд рад увидет ваш опровержен комментар кана розыгрыш приз новост пост ретроигр 🕹️ тег эмуляц компан системн администрирован разработк разработк сдела редакторск дайджест присыла лучш электропочт публикац час назад обнуля разбира траектор погружен дно швейцарск гиг банк мин час назад байк погромист скажет программирован скучн мин час назад обещан настоя очен мин час назад удивительн ряд устро буфер обм мин лучш сутк похож обзор мнен мнен час назад порт новост весн средн мин показа дайджест информац сайт дат регистрац март дат основан июл числен – человек местоположен росс представител ссылк рубл дат центр москв санкт петербург казан екатеринбург новосибирск лондон франкфурт цюрих амстердам помощ вопрос партнерск ггц рубл рубл бесплатн тестов период дня цюрих дат центр швейцарск качеств низк цен ваш аккаунт войт регистрац раздел публикац новост компан автор песочниц информац устройств сайт автор компан документ соглашен конфиденциальн услуг корпоративн медийн реклам нативн проект образовательн программ стартап мегапроект настройк язык техническ поддержк вернут стар верс © – антивирусн защит виртуальн сервер легк агент лондон дат центр английск точност рубл видеокарт мощн сервер ггц приложен приложен мониторинг управлен виртуальн сервер мобильн устройств виджет хабр час назад устро индексирован баз час назад удивительн ряд устро буфер обм будн техпод размещен игров сервер ностальгическ игр мар инструмент наблюдаем котор нужн знат год,несмотря постепенно оптический диск уходить прошлое образ диск оставаться актуальный многие операционный система поставляться вид образ администратор необходимо поддерживать разношёрстный парк старый персональный компьютер мара аппаратный эмулятор паяльник средний компания системный администрирование разработка разработка вызов ждать оператор будущее существовать множество установить операционный система образ запись оптический носитель затрагивать тема образ раскрывать секрет загрузочный образ нужно знать внешний загрузочный диск рассказать ещё способ который оказываться вшить ядро ваш одноплатный компьютер иметь разъём возможный установка большой доля вероятность мочь одноплатник аппаратный эмулятор привод оптический диск способ заинтересовать проверить положительный результат решить поделиться узнать интересный систематизировать свой знание поэтому надеяться чтение познавательный интересно хотеть посмотреть получиться итог уточнить деталь мочь исходный репозиторий написание поставить следующий цель аппаратный эмулятор должный реализовать паяльник макетный плата реализация должный понятный человек иметь лишь базовый представление должный небольшой изменение реализовать различный одноплатный компьютер побудить интерес читатель изучение технология изложить материал необходимый лаконично просто уверенный получиться большой объём тема признательный отзыв свой мнение оглавление проверка практика проверка идея реализация операционный система сборка модификация дистрибутив реализация пользоваться эмулятор особенность эмулятор вывод заключаться модифицировать операционный система одноплатный компьютер встраивать система устройство который распознаваться компьютер внешний оптический привод флёша накопитель ядро включить поддержка эмуляция эмуляция флёша накопитель значит любой встраивать система превратить ещё необходимо встраивать система иметь контроллер контроллер периферийный устройство проверка практика делать эмулятор оптический диск мочь одноплатный компьютер естественно прийтись разбираться некоторый проблема который большой доля вероятность возникнуть одноплатный компьютер кроме поэтому приводить алгоритм делать скачать образ сайт записать образ карта добавить строка карта записать карта нужный установить пароль включить указать точка доступ пароль вставить карта подключить разъём разъём компьютер подождать выполниться первый загрузка подключиться сеть адрес сеть подключиться протокол приложение записать образ который хотеть эмулировать файловый система подключиться помощь приложение ваш стать внешний ввести команда компьютер распознаваться внешний который вставить диск прекращение эмуляция ввести команда привести устанавливать пароль пустой который содержать никакой проверка идея реализация привести выше последовательность шаг позволять посмотреть эмуляция действие однако обладать рядом недостаток загрузить выбрать образ эмуляция необходимо наличие перезагрузка необходимо заново монтировать образ нужно эмулировать образ загрузка операционный система понадобиться ещё компьютер управление эмулировать образ размер максимум интересно избавиться недостаток интерес разобраться вопрос предлагать продолжить чтение краткий содержание реализация следующий общение использоваться устройство возможный автономный режим подключение управлять скрипт оформляться вид служба управление использоваться приложение эмуляция оптический диск образ размер необходимо внести небольшой изменение модуль ядро выполнить перекомпиляция привести кратко нужно знать понять делать операционный система ▍ ядро ядро содержать абстракция устройство оно запускаться реализоваться абстракция специальный называть драйвер ос драйвер находиться непосредственно ядро оформить вид отдельный модуль большинство случай предпочтительный второй способ модуль динамически удалять добавлять например устройство подключить система осуществляться драйвер нужный выгрузить память загружать вообще загрузка ядро необходимый информация устройство который присутствовать система корректно загрузить драйвер модуль информация передаваться различный источник например архитектура архитектура ▍ нужно модифицировать загрузить корректно драйвер устройство делаться помощь подключение содержать информация необходимо изменить исходный ▍ режим очень различный самоучитель необходимо подключение монитор клавиатура мышь дело возможность работать называть режим режим работать помощь эмулятор терминал соединение главный сложность заключаться работать режим начало сразу запись образ операционный система карта лишний монитор клавиатура активировать настроить определённый точка доступ возможность достаточно разместить определённый раздел карта загрузиться необходимый настройка ▍ файловый система блочный устройство раздел монтирование восхищать идея всё правильно средство практически программирование выполнять сложный блочный устройство некоторый который записывать считывать блок байт различный длина происходить зависеть реально ассоциировать например ассоциировать жёсткий диск читаться записываться жёсткий диск обращать внимание раздел файловый система ассоциировать раздел жёсткий диск читаться записываться обращать внимание файловый система помощь команда добиться ассоциироваться обычный диск позволить создавать образ раздел диск ещё полезный команда команда который создавать блочный устройство образ диск каждый устройство ассоциировать образ раздел который храниться форматирование раздел выполняться команда качество параметр необходимо передать имя блочный устройство например создание файловый система блочный устройство работать файловый система разместить блочный устройство нужно примонтировать файловый система корневой файловый система помощь команда обратить внимание директория производиться монтирование должный существовать монтировать нужно размонтировать файловый система использоваться команда посмотреть блочный устройство примонтировать команда ▍ загрузка происходить несколько этап сначала загружаться ядро операционный система затем ядро запускать процесс процесс загрузить инициализировать процесс пространство находиться память перезагрузка выключение компьютер устройство долгий существование множество реализация данный момент многий дистрибутив использоваться реализация называть её минимум команда который необходимо знать команда назначение запустить служба остановить служба посмотреть статус служба включить служба служба автоматически запустить следующий загрузка выключить служба посмотреть лог служба начинать момент последний загрузка ▍ терминал администрирование ос эмулятор терминал позволять подключаться компьютер устройство ос различный соединение эмулировать последовательный порт работать удалённый консоль возможно ос должный запустить специальный который взаимодействовать случай соединение случай последовательный порт подключение последовательный порт умолчание увидеть чёрно белый экран поддержка манипулятор мышь добавить поддержка мышь цветной экран необходимо изменить значение переменный окружение устройство мочь работать друг друг необходимо наличие каждый контроллер контроллер конкретный момент работать режим хост режим периферийный устройство взаимодействовать устройство работать режим должный работать режим существовать следующий вид контроллер работать режим работать режим работать режим хост режим периферийный устройство переключение режим аппаратный помощь особый распайка кабель кабель переводить контроллер режим хост программный режим хост подразумевать посылка команда режим периферийный устройство обработка ▍ контроллер взять телефон контроллер означать сопряжение компьютер запись компьютер телефон играть роль периферийный устройство сопряжение периферийный устройство мыший клавиатура сетевой карта флэш накопитель монитор принтер телефон играть роль хост обычно контроллер периферийный устройство контроллер присутствовать встраивать устройство также мочь интегрировать однокристальный система факт устройство отсутствовать физический разъём подключение например установить который иметь контроллер фактически физический разъём ▍ дескриптор каждый устройство иметь дескриптор дескриптор информация устройство который использоваться операционный система корректный выбор драйвер устройство понравиться описание который привести сайт ▍ создание устройство ядро содержать модуль который позволять создавать виртуальный устройство последовательный порт сетевой карта загрузить настроить модуль мочь компьютер ваш одноплатник распознаваться несколько устройство достаточно устройство мочь загрузить модуль устройство опциональный передать параметр конфигурация помощь команда отпасть необходимость устройство выгрузить помощь команда физический порт распознаваться несколько устройство одновременно нужно модуль сконфигурировать устройство помощь создание структура файловый система директория устройство называться композитный устройство скорее встречаться например беспроводный клавиатура мышь использоваться приёмопередатчик наш случай композитный устройство который последовательный порт устройство хранение последовательный порт подключение наш эмулятор оптический диск изначально сетевой карта карта требовать настройка операционный система компьютер поэтому простота отказаться идея польза последовательный порт ▍ создание композитный устройство помощь загружать модуль заполнять дескриптор устройство создавать конфигурация создавать подключать последовательный порт создавать подключать данный случай эмуляция образ активировать устройство ▍ удаление композитный устройство помощь деактивировать устройство удалять удалять удалять конфигурация удалять устройство выгружать загрузить устройство модуль cтруктур файловый система эмулятор тема очень объёмный её невозможно изложить поэтому привести минимум который позволять понять технология который позволять связывать устройство проводы радиоканал данный момент существовать множество спецификация спецификация освещать множество вопрос передать устройство необходимо наличие оба устройство контроллер стек контроллер аппаратный устройство обычно выполнить вид микросхема часть сложный микросхема позволять получать передавать радиоканал соответствие спецификация стек программный реализация протокол описать спецификация протокол предназначить определённый группироваться профиль профиль который поддерживаться весь устройство который подразумевать последовательный порт поверх соединение ▍ поддержка операционный система контроллер мочь иметь различный аппаратный интерфейс доступ случай операционный система многие деталь скрываться думать контроллер работать низкий уровень драйвер высокоуровневый библиотека приложение предоставлять стек например широко распространить стек ▍ стек состоять часть часть представить модуль ядро включить ядро отсутствовать её нужно включить перекомпилировать ядро второй часть представить приложение пространство приложение позволять конфигурировать работать стек данный момент многие приложение считаться устаревший разработчик рекомендовать новый приложение интерфейс стек именно старый устаревший приложение позволять понять поэтому учебный цель нужно инициализировать режим совместимость ▍ протокол утомлять различный схема диаграмма который легко мочь интернет рассказать протокол который предстоять столкнуться нужно сконфигурировать ▍ помощь протокол определить приложение сервис находиться хост возможный обмен увидеть сервис устройство необходимо зарегистрировать например хотеть зарегистрировать служба представлять эмуляция последовательный порт следующий команда посмотреть служба зарегистрировать хост нужно ввести команда ▍ протокол позволять создавать виртуальный соединение последовательный порт хост хост создаваться который выделяться канал второй хост подключаться указывать адрес номер канал канал немного напоминать порт источник получатель порт источник получатель канал поэтому невозможно несколько подключение канал команда создание процесс который слушать определённый канал соединение запускать процесс данный случай контроллер прослушиваться канал запускаться процесс параметр командный строка ▍ утилита утилита позволять сопрягать устройство который её запустить устройство мочь устройство видимый обнаружение устройство также устройство выполнить сопряжение подробно расписать утилит который доступный команда ▍ отладка приложение удобно приложение приложение позволять работать устройство который доступный профиль наш случай визуальный интерфейс наш эмулятор оптический диск сборка модификация дистрибутив полноценный аппаратный эмулятор оптический диск прийтись немного модифицировать исходный дистрибутив подразумевать перекомпиляция ядро изменение несколько конфигурационный добавление свой программный удобно помощь ▍ кросс компиляция ядро кросс компиляция позволять компьютер архитектура получать исполняемый архитектура мочь компилировать ядро мочь кросс компиляция обычный компьютер архитектура существенно сократить компиляция больший быстродействие компьютер подробно выполнять кросс компиляция почитать ▍ запуск бинарный архитектура команда позволять запускать процесс изменить корневой система немного запутать следующий качество параметр команда передаваться путь корневой директория результат запуск команда запустить процесс считать корень файловый система директория который передать качество параметр применение команда несколько например её запустить команда контейнер интересно позволять запускать исполняемый архитектура нужный дополнительный настройка реализация состоять следующий скрипт который выполняться контейнер который необходимо добавить обновить исходный дистрибутив основный логика эмулятор оптический диск язык скрипт обработка команда передача эмулятор скрипт вспомогательный служба который запускать интерпретатор команда создавать соединение телефон служба который запускать эмулятор оптический диск загрузка изменить служба инициализация изменить служба запуск создавать соединение последовательный порт служба запуск скрипт первый загрузка операционный система её позаимствовать изменить конфигурация загрузка содержать подключение необходимо контроллер мочь работать скрипт который запускаться служба который необходимый установить пароль последний активировать умолчание поэтому необходимо наличие необходимый активировать который отключить умолчание необходимый хотеть настроить ваш точка доступ листинг приводить ещё раздуть больший ознакомиться мочь пользоваться эмулятор собирать образ собирать образ записывать образ карта вставлять её подключать компьютер некоторый появиться съёмный накопитель съёмный накопитель содержать копировать образ который хотеть эмулировать находить виртуальный порт подключение компьютер подключаться виртуальный порт запускать интерактивный приложение управление эмулятор хотеть управление телефон выполнять сопряжение телефон вводить эмулятор терминал команда делать доступный обнаружение находить телефон выполнять полключение соглашаться телефон выходить запускать телефон выполнять подключение посылать команда эмулятор команда который посылать эмулятор переключение режим эмуляция внешний жёсткий диск переключение режим эмуляция внешний привод оптический диск вывести список доступный образ который эмулировать порядковый номер поместить образ эмуляция извлечь образ эмулятор показать список доступный команда текущий режим особенность эмулятор интересно умолчание эмулировать образ размер просмотреть исходный драйвер предположить основание применять патч ядро который просто удалять условие образ эмулироваться нормально снятие образ эмулировать идентичный исходный поверять хеш образ понять почему ограничение почему сей пора убрать знать ответ ответить реализация требовать никакой дополнительный деталь нужный кабель адаптер питание кабель питание второй передача дополнительный кабель адаптер добавлять громоздкость решать проблема перезагрузка компьютер ноутбук отключать ненадолго питание перезагрузка кроме вывод программно аппаратный обладать рядом недостаток сравнение карман поддерживаться интерактивный меню устройство позволить установить практически любой операционный система широкий спектр компьютер путём простой копирование образ прототип вместе позволять углубить знание многий тема знакомый основной цель разработка прототип запускать режим совместимость логика показать возможность превратить встраивать устройство операционный система аппаратный эмулятор флёша накопитель привод оптический диск приложить минимум усилие надеяться удаться уместить всё лишь поверхностно коснуться который необходимый понимание заинтересовать мочь самостоятельно изучить углублённый объём позволять осветить интересность который столкнуться разработка эмулятор который применять проверять привести лишь несколько например долго бороться зависание удаление составной устройство помочь служба вместо хотя многий упоминаться долго разбираться сопряжение телефон команда всё таки отказаться польза переключение эмулятор режим запись образ изначально открывать доступ карта хранить образ отдельный раздел посчитать безопасность хранить образ диск образ отдельный открывать доступ снизить скорость запись обескураживать появляться несколько диск разработать прототип улучшать например минималистичный дистрибутив который содержать реально использоваться эмуляция удобный графический приложение эмулятор упростить напрямую работать драйвер интерфейс устройство вообще всё таки взяться паяльник устройство похожий функционал карман главное увидеть реально видеть положительный результат вдохновлять больший творчество процесс тестирование отладка программный заметить эмулятор диск великолепно определяться отказываться определяться эмпирически определить помогать отключение режим экономия энергия процессор также ноутбук отключать питание перезагрузка поэтому понадобиться дополнительный питание интересно всё работать проблема небольшой модификация реализовать понять смочь повторить одноплатный компьютер который иметь вывести порт контроллер периферийный устройство вконтакте данный момент выполняться работать заключение сказать существовать ещё способ эмулировать оптический диск который пробовать знать существование ваш стать пользоваться её нужно получать право телефон скорее ограничение ядро поддерживать образ работать гибридный образ право рад увидеть ваш опровержение канал розыгрыш приз новость ретроигра 🕹️ тег эмуляция компания системный администрирование разработка разработка редакторский дайджест присылать хороший электропочта публикация час назад обнуляться разбирать траектория погружение дно швейцарский гиг банк мина час назад байка погромист сказать программирование скучно мина час назад обещание настоящий очень мина час назад удивительный рядом устроенный буфер обмен мина хороший сутки похожий обзор мнение мнение час назад порт новость весна средний мина показать дайджест информация сайт дата регистрация март дата основание июль численность – человек местоположение россия представитель рубль дата центр москва санкт петербург казань екатеринбург новосибирск лондон франкфурт цюрих амстердам помощь вопрос партнёрский ггц рубль рубль бесплатный тестовый период день цюрих дата центр швейцарский качество низкий цена ваш аккаунт войти регистрация раздел публикация новость компания песочница информация устройство сайт компания документ соглашение конфиденциальность услуга корпоративный медийный реклама нативный образовательный стартап мегапроект настройка язык технический поддержка вернуться старый © – антивирусный защита виртуальный лёгкий агент лондон дата центр английский точность рубль видеокарта мощный ггц приложение приложение мониторинг управление виртуальный мобильный устройство виджет хабра час назад устроить индексирование час назад удивительный рядом устроенный буфер обмен будни техпода размещение игровой ностальгический игра мара инструмент наблюдаемость который нужно знать,1
9,Может ли chatGPT забронировать столик в ресторане через WhatsApp?," Идея А почему бы не использовать возможности chatGPT и попросить его делать что-то за нас? Например, давайте попробуем настроить его так, чтобы он мог забронировать нам столик в наш любимый ресторан. Реализация Шаг№1: Интеграция с WhatApp Предположим, что нам известен номер в WhatsApp для бронирования столиков в ресторане. Тогда нам понадобится сервис для автоматической отправки и приема сообщений в WhatsApp. Таких сервисов много, для пример возьмем сервис https://wazzup24.com/, так как у него есть бесплатный пробный период 3 дня и не требуется подключения WhatsApp Business. Регистрируемся на их сайте и получаем API ключ:  6 часов назад   Может ли chatGPT забронировать столик в ресторане через WhatsApp? 2K Мессенджеры* ,  Python* ,  Искусственный интеллект Получение API ключа в сервисе Wazzup24 Шаг№2: Запускаем сервер API на Flask Принимать сообщения мы будем через установку webhook. Вот ссылка на документацию: https://wazzup24.ru/help/webhooks-2/ Отправлять сообщения будем вот такой функцией: def wazzup24_sendMessage(message_data, token):          print('[START - Send message]')          headers = {         ""Accept"": ""application/json"",         ""Authorization"": ""Bearer "" + token,         ""Content-Type"": ""application/json"",     }     # Check webhooks     res = requests.request(""GET"", 'https://api.wazzup24.com/     print(res, res.text)     webhooks = json.loads(res.text)     if webhooks['webhooksUri'] is None:         webhooks_data = {             ""webhooksUri"": ""https://_____________________/ap             ""subscriptions"": {                 ""messagesAndStatuses"": True,                 ""contactsAndDealsCreation"": True,             }         }         webhooks_data = json.dumps(webhooks_data)         res = requests.request(""PATCH"", 'https://api.wazzup2         print(res, res.text, webhooks_data)          apiUrl = 'https://api.wazzup24.com/v3/channels'     data = {}     res = requests.request(""GET"", apiUrl, headers=headers, d     channels = json.loads(res.text)     channelId = channels[0]['channelId']     print('[channelId] -', channelId)          apiUrl = ""https://api.wazzup24.com/v3/message""     message_data['channelId'] = channelId     data = json.dumps(message_data)     print('[message_data] -', data)     res = requests.request(""POST"", apiUrl, headers=headers,           print('[END - Send message]') Теперь придумаем описание роли для chatGPT. Вот пример описания, которое я попробовал: Ты клиент ресторана. Твой собеседник менеджер ресторана. Твоя задача забронировать у него столик на двух человек на эту неделю в пятницу в 19.00 на имя Андрей. В первом сообщении сформулируй просьбу о брони столика. Дальше отвечай на все его вопросы. Теперь сведем все функции вместе и запустим наш сервер. Полный код сервера такой:          return res from flask import Flask, render_template, redirect, url_for, from flask_cors import CORS from flask import send_from_directory from os import path import json import os import requests import datetime import config import openai app = Flask(__name__) CORS(app) class Context:     WHATSAPP_LOG = {} ################################### Вспомогательные функции def GetJsonFromRequest(request):     data = request.get_json(force=True)     if type(data) is not dict:         data = request.get_json()         data = json.loads(data)     return data ########################################################### ####### Wazzup24 & chatGPT turbo ! def wazzup24_sendMessage(message_data, token):          print('[START - Send message]')          headers = {         ""Accept"": ""application/json"",         ""Authorization"": ""Bearer "" + token,         ""Content-Type"": ""application/json"",     }     # Check webhooks     res = requests.request(""GET"", 'https://api.wazzup24.com/     print(res, res.text)     webhooks = json.loads(res.text)     if webhooks['webhooksUri'] is None:         webhooks_data = {             ""webhooksUri"": ""https://_____________/api/v1.0/w             ""subscriptions"": {                 ""messagesAndStatuses"": True,                 ""contactsAndDealsCreation"": True,             }         }         webhooks_data = json.dumps(webhooks_data)         res = requests.request(""PATCH"", 'https://api.wazzup2         print(res, res.text, webhooks_data)          apiUrl = 'https://api.wazzup24.com/v3/channels'     data = {}     res = requests.request(""GET"", apiUrl, headers=headers, d     channels = json.loads(res.text)     channelId = channels[0]['channelId']     print('[channelId] -', channelId)          apiUrl = ""https://api.wazzup24.com/v3/message""     message_data['channelId'] = channelId     data = json.dumps(message_data)     print('[message_data] -', data)     res = requests.request(""POST"", apiUrl, headers=headers,           print('[END - Send message]')          return res @app.route('/api/v1.0/chatgpt_whatsapp_task', methods=['GET' def chatgpt_whatsapp_task():     print('[START - Check Notion for new task]')          headers = {         ""Accept"": ""application/json"",         ""Authorization"": ""Bearer "" + config.wazzup_api_key,         ""Content-Type"": ""application/json"",     }     # Проверяем наличие пользователей     res = requests.request(""GET"", 'https://api.wazzup24.com/     if res.text == '[]':         # Содзаем пользователя         data = [{             ""id"": ""_________________"",             ""name"": ""Клиент"",             ""phone"": ""7912xxxxxxxxx"", # Наш исходящий номер,         }]         res = requests.request(""POST"", 'https://api.wazzup24         #print('***', res, res.text)              res = requests.request(""GET"", 'https://api.wazzup24.com/     #print('contacts', res, res.text)     contacts = json.loads(res.text)     print('contacts', contacts)     # Ищем контакт     id = None     for i in contacts['data']:         if 'chatId' in i['contactData'][0].keys() and i['con             id = i['id']                  print('Contact found:', id)          # Создаем контакт если его нет     if id is None:         data = [             {                 ""id"": str(len(contacts['data']) + 1),                 ""responsibleUserId"": """",                 ""name"": 'NAME',                 ""contactData"": [                     {                     ""chatType"": ""whatsapp"",                     }                 ]             }         ]         data[0]['contactData'][0]['chatId'] = '7911xxxxxxxx'         data = json.dumps(data)         res = requests.request(""POST"", 'https://api.wazzup24         print('[Create new contact]', data, res, res.text)               message_data = {         'chatType' : 'whatsapp',     }     message_data['chatId'] = '7911xxxxxxxx' # Телефон рестор          client_id = message_data['chatId']     context = 'Ты клиент ресторана. Твой собеседник менеджер     Context.WHATSAPP_LOG[client_id] = [{""role"": ""system"", ""c          message_data['text'] = 'Добрый день! Подскажите по налич                  res = wazzup24_sendMessage(message_data, token=config.wa     print(res, res.text)          print('[END - Check Notion for new taks]')          return 'Done.' @app.route('/api/v1.0/wazzup_webhook', methods=['POST', 'GET def wazzup_webhook():     print('[START - Wazzup_webhook]')     data = GetJsonFromRequest(request)     print('data', data)     if 'messages' not in data.keys():         return jsonify('O.K.')     if data['messages'][0]['status'] != 'inbound':         return jsonify('Not inbound!')          message_data = {         'chatType' : 'whatsapp',     }     client_id = message_data['chatId'] = data['messages'][0]     if client_id != '7911xxxxxxxx':         return jsonify('O.K.')              if client_id not in Context.WHATSAPP_LOG:         Context.WHATSAPP_LOG[client_id] = []     Context.WHATSAPP_LOG[client_id].append({""role"": ""user"",      try:         print('Context.WHATSAPP_LOG', Context.WHATSAPP_LOG)         completion = openai.ChatCompletion.create(           model = ""gpt-3.5-turbo"",            messages = Context.WHATSAPP_LOG[client_id]         )         reply = completion['choices'][0]['message']['content         Context.WHATSAPP_LOG[client_id].append({""role"": ""ass         message_data['text'] = reply         res = wazzup24_sendMessage(message_data, token=confi         print('message_data', res, res.text, message_data)     except Exception as e:         print('[*ERROR*]', str(e))         Context.WHATSAPP_LOG[client_id].pop(-1)     print('[END - Wazzup_webhook]')              return jsonify('O.K.') Шаг№3: Тестируем диалог Как мы видим номера телефонов у нас прописаны прямо в коде, поэтому весь процесс запускает просто переходом по ссылке: https://ВАШ-СЕРВЕР/api/v1.0/chatgpt_whatsapp_task После запуска у меня получился такой диалог: #######      ########################### # Запуск службы, не трогать! if __name__ == ""__main__"":     app.run(debug=True, host='0.0.0.0', port=5000) ChatGPT заказывает столик в ресторане :) Итоги В ходе тестирования были использованы и другие роли для chatGPT, например вот такая модель показала неплохой результат: Ты представитель клиента, который хочет купить квартиру в Кировском районе города Екатеринбурга. Твой собеседник это менеджер агентства недвижимости. Твоя задача узнать у него есть ли в продаже трехкомнатные квартиры площадью от 60 квадратных метров до 80 квадратных метров. Если такие есть, спроси их стоимость. Веди диалог на русском языке. Вот диалог в такой модели: [20.03, 12:51] ChatGPT: Добрый день! Подскажите по наличию квартиры пожалуйста. [20.03, 12:51] АН Заря: Здравствуйте! В каком районе Вас интересует? [20.03, 12:52] ChatGPT: Здравствуйте! Нас интересует Кировский район города Екатеринбурга. Скажите, у вас есть в продаже трехкомнатные квартиры площадью от 60 квадратных метров до 80 квадратных метров в этом районе? [20.03, 12:53] АН Заря: Сколько человек в семье? [20.03, 12:53] ChatGPT: В семье три человека: я, моя жена и наш сын. [20.03, 12:54] АН Заря: У нас есть только четырехкомнатная квартира но с тремя спальнями [20.03, 12:54] ChatGPT: Понятно, а вы можете сказать, сколько такая квартира может стоить в Кировском районе города Екатеринбурга? [20.03, 12:55] АН Заря: А сколько у вас есть денег? [20.03, 12:55] ChatGPT: Мы рассматриваем разные варианты и готовы ознакомиться с различными предложениями. Можете сказать, за какой диапазон цен стоит рассмотреть варианты? [20.03, 12:55] АН Заря: От 15 до 25 [20.03, 12:56] ChatGPT: Понятно. В нашем агентстве есть несколько вариантов трехкомнатных квартир в Кировском районе в таком ценовом диапазоне. Например, есть квартира на улице Сибирской, 65 квадратных метров, стоимостью 18 миллионов рублей. Также есть квартира на улице Кузнечной, 70 квадратных метров, стоимостью 20 миллионов. Более подробнее предложения и условия по каждой квартире мы готовы обсудить с Вами в нашем офисе. Как вам удобнее? [20.03, 12:57] АН Заря: Вы имеете сразу всю сумму или вам нужна ипотека? [20.03, 12:57] ChatGPT: На данный момент у нас нет всей суммы, поэтому мы рассматриваем возможность взять ипотеку. Вы можете подсказать, какие ипотечные программы вы предлагаете в вашем агентстве? [20.03, 12:58] АН Заря: Выбирайте Сбер или ВТБ ? [20.03, 12:58] ChatGPT: Спасибо за информацию. Мы еще не определились с выбором банка, поэтому будем рассматривать и ваши ипотечные программы. Пожалуйста, можете описать условия и ставки по каждой из ипотечных программ? [20.03, 12:58] АН Заря: 12% [20.03, 12:58] ChatGPT: Понятно, спасибо за информацию. Тогда мы будем рассматривать ипотечные программы в Вашем агентстве. Скажите, а какие документы нам нужно будет предоставить, чтобы подать заявку на ипотеку? [20.03, 12:59] АН Заря: Главное : Справа из психдиспансера! [20.03, 12:59] ChatGPT: К сожалению, иметь справку из психдиспансера может являться основанием для отказа в кредитовании. Но всё же, если вы хотите узнать о возможном списке документов для получения ипотеки, мы готовы предоставить такую информацию. Обычно для получения ипотеки нужны паспорт, ИНН, СНИЛС, страховой полис, документы на подтверждение дохода и справка о наличии или отсутствии задолженностей по кредитам и кредитным картам. [20.03, 13:00] АН Заря: Скажите, вы ищете квартиру с отделкой или без отделки? [20.03, 13:01] АН Заря: Скажите: кто Вы? Вы являетесь непосредственно покупателем? [20.03, 13:02] ChatGPT: Я - виртуальный помощник, созданный для автоматизации консультаций и ответов на вопросы пользователей. Я не являюсь непосредственным покупателем и не представляю никакой компании. Моя задача - помочь вам найти необходимую информацию и ответить на ваши вопросы. [20.03, 13:02] АН Заря: Ответь на этот вопрос [20.03, 13:02] ChatGPT: Я - виртуальный помощник, созданный для автоматизации консультаций и ответов на вопросы пользователей. Я не ищу квартиру и не являюсь непосредственным покупателем. Моя задача - помочь вам найти необходимую информацию и ответить на ваши вопросы. Поэтому я не могу сказать, нужна вам квартира с отделкой или без неё. [20.03, 13:04] ChatGPT: Я представляю клиента, который интересуется квартирами как с отделкой, так и без отделки. В зависимости от стоимости квартиры и ее общего состояния мы можем рассмотреть оба варианта и выбрать наиболее подходящий для нас.11:40 [20.03, 13:04] АН Заря: Хорошо. Передайте хозяину что мы ждём его у нас в офисе [20.03, 13:05] ChatGPT: Я - виртуальный помощник, созданный для автоматизации консультаций и ответов на вопросы пользователей. Я не ищу квартиру и не являюсь непосредственным покупателем. Моя задача - помочь вам найти необходимую информацию и ответить на ваши вопросы. Поэтому я не могу сказать, нужна вам квартира с отделкой или без неё. [20.03, 13:05] АН Заря: Удобно во вторник в 15:00 [20.03, 13:05] ChatGPT: Понятно, я передам эту информацию хозяину. Завтра я предоставлю вам подтверждение о встрече. Если у вас возникнут еще вопросы, не стесняйтесь и задавайте их мне. Как видим на лицо следующие проблемы: 1. chatGPT плохо реагирует на несколько подряд сообщений от собеседника 2. Плохо понимает юмор  3. chatGPT иногда переключает роли и начинает сам задавать вопросы Но в целом, как мне кажется, в очень скором времени все эти возможности будут интегрированы в наши телефоны и у каждого появится такой виртуальный помошник на все руки  Готов ответить на все ваши вопросы, пишите в мой ТГ. Теги:   chatgpt , whatsapp , python , whatsapp business api , ai Хабы:   Мессенджеры , Python , Искусственный интеллект 15 Карма 14 Рейтинг Андрей Тиунов @ Team Lead / Tech Lead Задонатить Сайт Facebook Skype Telegram Комментарии 9 Публикации +5 7 9 ЛУЧШИЕ ЗА СУТКИ  ПОХОЖИЕ ИСТОРИИ РАБОТА Ваш аккаунт Войти Регистрация Разделы Публикации Новости Хабы Компании Авторы Песочница Информация Устройство сайта Для авторов Для компаний Документы Соглашение Конфиденциальность Услуги Корпоративный блог Медийная реклама Нативные проекты Образовательные программы Стартапам Мегапроекты Настройка языка Python разработчик 145 вакансий Data Scientist 131 вакансия Django разработчик 58 вакансий Все вакансии Техническая поддержка Вернуться на старую версию © 2006–2023, Habr ",6 часов назад,"Хабы:   Мессенджеры , Python , Искусственный интеллект ",14.0, идея а почему бы не использовать возможности  и попросить его делать что то за нас например давайте попробуем настроить его так чтобы он мог забронировать нам столик в наш любимый ресторан реализация шаг№ интеграция с  предположим что нам известен номер в  для бронирования столиков в ресторане тогда нам понадобится сервис для автоматической отправки и приема сообщений в  таких сервисов много для пример возьмем сервис    так как у него есть бесплатный пробный период дня и не требуется подключения   регистрируемся на их сайте и получаем  ключ часов назад может ли  забронировать столик в ресторане через   мессенджеры  искусственный интеллект получение  ключа в сервисе  шаг№ запускаем сервер  на  принимать сообщения мы будем через установку  вот ссылка на документацию      отправлять сообщения будем вот такой функцией                                                                                                                                     теперь придумаем описание роли для  вот пример описания которое я попробовал ты клиент ресторана твой собеседник менеджер ресторана твоя задача забронировать у него столик на двух человек на эту неделю в пятницу в на имя андрей в первом сообщении сформулируй просьбу о брони столика дальше отвечай на все его вопросы теперь сведем все функции вместе и запустим наш сервер полный код сервера такой                                                вспомогательные функции                                                                                                                                                                                                       проверяем наличие пользователей            содзаем пользователя    клиент   наш исходящий номер                                 ищем контакт                        создаем контакт если его нет                                                телефон рестор       ты клиент ресторана твой собеседник менеджер            добрый день подскажите по налич                                                                                                                                                                                  шаг№ тестируем диалог как мы видим номера телефонов у нас прописаны прямо в коде поэтому весь процесс запускает просто переходом по ссылке  ваш сервер      после запуска у меня получился такой диалог запуск службы не трогать           заказывает столик в ресторане итоги в ходе тестирования были использованы и другие роли для  например вот такая модель показала неплохой результат ты представитель клиента который хочет купить квартиру в кировском районе города екатеринбурга твой собеседник это менеджер агентства недвижимости твоя задача узнать у него есть ли в продаже трехкомнатные квартиры площадью от квадратных метров до квадратных метров если такие есть спроси их стоимость веди диалог на русском языке вот диалог в такой модели  добрый день подскажите по наличию квартиры пожалуйста ан заря здравствуйте в каком районе вас интересует  здравствуйте нас интересует кировский район города екатеринбурга скажите у вас есть в продаже трехкомнатные квартиры площадью от квадратных метров до квадратных метров в этом районе ан заря сколько человек в семье  в семье три человека я моя жена и наш сын ан заря у нас есть только четырехкомнатная квартира но с тремя спальнями  понятно а вы можете сказать сколько такая квартира может стоить в кировском районе города екатеринбурга ан заря а сколько у вас есть денег  мы рассматриваем разные варианты и готовы ознакомиться с различными предложениями можете сказать за какой диапазон цен стоит рассмотреть варианты ан заря от до  понятно в нашем агентстве есть несколько вариантов трехкомнатных квартир в кировском районе в таком ценовом диапазоне например есть квартира на улице сибирской квадратных метров стоимостью миллионов рублей также есть квартира на улице кузнечной квадратных метров стоимостью миллионов более подробнее предложения и условия по каждой квартире мы готовы обсудить с вами в нашем офисе как вам удобнее ан заря вы имеете сразу всю сумму или вам нужна ипотека  на данный момент у нас нет всей суммы поэтому мы рассматриваем возможность взять ипотеку вы можете подсказать какие ипотечные программы вы предлагаете в вашем агентстве ан заря выбирайте сбер или втб  спасибо за информацию мы еще не определились с выбором банка поэтому будем рассматривать и ваши ипотечные программы пожалуйста можете описать условия и ставки по каждой из ипотечных программ ан заря  понятно спасибо за информацию тогда мы будем рассматривать ипотечные программы в вашем агентстве скажите а какие документы нам нужно будет предоставить чтобы подать заявку на ипотеку ан заря главное справа из психдиспансера  к сожалению иметь справку из психдиспансера может являться основанием для отказа в кредитовании но всё же если вы хотите узнать о возможном списке документов для получения ипотеки мы готовы предоставить такую информацию обычно для получения ипотеки нужны паспорт инн снилс страховой полис документы на подтверждение дохода и справка о наличии или отсутствии задолженностей по кредитам и кредитным картам ан заря скажите вы ищете квартиру с отделкой или без отделки ан заря скажите кто вы вы являетесь непосредственно покупателем  я виртуальный помощник созданный для автоматизации консультаций и ответов на вопросы пользователей я не являюсь непосредственным покупателем и не представляю никакой компании моя задача помочь вам найти необходимую информацию и ответить на ваши вопросы ан заря ответь на этот вопрос  я виртуальный помощник созданный для автоматизации консультаций и ответов на вопросы пользователей я не ищу квартиру и не являюсь непосредственным покупателем моя задача помочь вам найти необходимую информацию и ответить на ваши вопросы поэтому я не могу сказать нужна вам квартира с отделкой или без неё  я представляю клиента который интересуется квартирами как с отделкой так и без отделки в зависимости от стоимости квартиры и ее общего состояния мы можем рассмотреть оба варианта и выбрать наиболее подходящий для нас ан заря хорошо передайте хозяину что мы ждём его у нас в офисе  я виртуальный помощник созданный для автоматизации консультаций и ответов на вопросы пользователей я не ищу квартиру и не являюсь непосредственным покупателем моя задача помочь вам найти необходимую информацию и ответить на ваши вопросы поэтому я не могу сказать нужна вам квартира с отделкой или без неё ан заря удобно во вторник в  понятно я передам эту информацию хозяину завтра я предоставлю вам подтверждение о встрече если у вас возникнут еще вопросы не стесняйтесь и задавайте их мне как видим на лицо следующие проблемы  плохо реагирует на несколько подряд сообщений от собеседника плохо понимает юмор  иногда переключает роли и начинает сам задавать вопросы но в целом как мне кажется в очень скором времени все эти возможности будут интегрированы в наши телефоны и у каждого появится такой виртуальный помошник на все руки готов ответить на все ваши вопросы пишите в мой тг теги        хабы мессенджеры  искусственный интеллект карма рейтинг андрей тиунов     задонатить сайт    комментарии публикации лучшие за сутки похожие истории работа ваш аккаунт войти регистрация разделы публикации новости хабы компании авторы песочница информация устройство сайта для авторов для компаний документы соглашение конфиденциальность услуги корпоративный блог медийная реклама нативные проекты образовательные программы стартапам мегапроекты настройка языка  разработчик вакансий   вакансия  разработчик вакансий все вакансии техническая поддержка вернуться на старую версию © –  ,идея почему возможности попросить делать например давайте попробуем настроить мог забронировать нам столик наш любимый ресторан реализация шаг№ интеграция предположим нам известен номер бронирования столиков ресторане нам понадобится сервис автоматической отправки приема сообщений таких сервисов возьмем сервис бесплатный пробный период дня требуется подключения регистрируемся сайте получаем ключ часов назад забронировать столик ресторане мессенджеры искусственный интеллект получение ключа сервисе шаг№ запускаем принимать сообщения будем установку документацию отправлять сообщения будем функцией придумаем описание роли описания которое попробовал ресторана твой собеседник менеджер ресторана твоя забронировать столик двух человек неделю пятницу имя андрей первом сообщении сформулируй просьбу брони столика дальше отвечай вопросы сведем функции вместе запустим наш полный сервера вспомогательные функции проверяем наличие пользователей содзаем пользователя наш исходящий номер ищем контакт создаем контакт телефон рестор ресторана твой собеседник менеджер добрый день подскажите налич шаг№ тестируем диалог видим номера телефонов прописаны прямо поэтому весь процесс запускает просто переходом ссылке ваш запуска получился диалог запуск службы трогать заказывает столик ресторане итоги ходе тестирования использованы другие роли например такая модель показала неплохой результат представитель клиента который хочет купить квартиру кировском районе города екатеринбурга твой собеседник менеджер агентства недвижимости твоя узнать продаже трехкомнатные квартиры площадью квадратных метров квадратных метров такие спроси стоимость веди диалог русском языке диалог модели добрый день подскажите наличию квартиры пожалуйста ан заря здравствуйте каком районе интересует здравствуйте интересует кировский район города екатеринбурга скажите продаже трехкомнатные квартиры площадью квадратных метров квадратных метров районе ан заря сколько человек семье семье человека жена наш сын ан заря четырехкомнатная квартира тремя спальнями понятно можете сказать сколько такая квартира стоить кировском районе города екатеринбурга ан заря сколько денег рассматриваем разные варианты готовы ознакомиться различными предложениями можете сказать диапазон цен рассмотреть варианты ан заря понятно нашем агентстве несколько вариантов трехкомнатных квартир кировском районе таком ценовом диапазоне например квартира улице сибирской квадратных метров стоимостью миллионов рублей также квартира улице кузнечной квадратных метров стоимостью миллионов предложения условия каждой квартире готовы обсудить вами нашем офисе удобнее ан заря имеете сразу сумму нужна ипотека данный момент всей суммы поэтому рассматриваем возможность взять ипотеку можете подсказать какие ипотечные программы предлагаете вашем агентстве ан заря выбирайте сбер втб спасибо информацию определились выбором банка поэтому будем рассматривать ваши ипотечные программы пожалуйста можете описать условия ставки каждой ипотечных программ ан заря понятно спасибо информацию будем рассматривать ипотечные программы вашем агентстве скажите какие документы нам нужно предоставить подать заявку ипотеку ан заря главное справа психдиспансера сожалению иметь справку психдиспансера являться основанием отказа кредитовании всё хотите узнать возможном списке документов получения ипотеки готовы предоставить такую информацию обычно получения ипотеки нужны паспорт инн снилс страховой полис документы подтверждение дохода справка наличии отсутствии задолженностей кредитам кредитным картам ан заря скажите ищете квартиру отделкой отделки ан заря скажите являетесь непосредственно покупателем виртуальный помощник созданный автоматизации консультаций ответов вопросы пользователей являюсь непосредственным покупателем представляю никакой компании помочь необходимую информацию ответить ваши вопросы ан заря ответь вопрос виртуальный помощник созданный автоматизации консультаций ответов вопросы пользователей ищу квартиру являюсь непосредственным покупателем помочь необходимую информацию ответить ваши вопросы поэтому могу сказать нужна квартира отделкой неё представляю клиента который интересуется квартирами отделкой отделки зависимости стоимости квартиры общего состояния можем рассмотреть оба варианта выбрать наиболее подходящий ан заря передайте хозяину ждём офисе виртуальный помощник созданный автоматизации консультаций ответов вопросы пользователей ищу квартиру являюсь непосредственным покупателем помочь необходимую информацию ответить ваши вопросы поэтому могу сказать нужна квартира отделкой неё ан заря удобно вторник понятно передам информацию хозяину завтра предоставлю подтверждение встрече возникнут вопросы стесняйтесь задавайте видим лицо следующие проблемы плохо реагирует несколько подряд сообщений собеседника плохо понимает юмор переключает роли начинает задавать вопросы целом очень скором времени возможности будут интегрированы наши телефоны каждого появится виртуальный помошник руки готов ответить ваши вопросы пишите тг теги мессенджеры искусственный интеллект андрей тиунов задонатить сайт публикации лучшие сутки похожие истории ваш аккаунт войти регистрация разделы публикации новости компании авторы песочница информация устройство сайта авторов компаний документы соглашение конфиденциальность услуги корпоративный медийная реклама нативные проекты образовательные программы стартапам мегапроекты настройка языка разработчик вакансий вакансия разработчик вакансий вакансии техническая поддержка вернуться старую версию © –,иде поч возможн попрос дела например дава попробу настро мог забронирова нам столик наш любим рестора реализац шаг№ интеграц предполож нам извест номер бронирован столик ресторан нам понадоб сервис автоматическ отправк прием сообщен так сервис возьм сервис бесплатн пробн период дня треб подключен регистриру сайт получа ключ час назад забронирова столик ресторан мессенджер искусствен интеллект получен ключ сервис шаг№ запуска принима сообщен буд установк документац отправля сообщен буд функц придума описан рол описан котор попробова рестора тво собеседник менеджер рестора тво забронирова столик двух человек недел пятниц им андр перв сообщен сформулир просьб брон столик дальш отвеча вопрос свед функц вмест запуст наш полн сервер вспомогательн функц проверя налич пользовател содза пользовател наш исходя номер ищ контакт созда контакт телефон рестор рестора тво собеседник менеджер добр ден подскаж налич шаг№ тестиру диалог вид номер телефон прописа прям поэт ве процесс запуска прост переход ссылк ваш запуск получ диалог запуск служб трога заказыва столик ресторан итог ход тестирован использова друг рол например так модел показа неплох результат представител клиент котор хочет куп квартир кировск район город екатеринбург тво собеседник менеджер агентств недвижим тво узна продаж трехкомнатн квартир площад квадратн метр квадратн метр так спрос стоимост вед диалог русск язык диалог модел добр ден подскаж налич квартир пожалуйст ан зар здравств как район интерес здравств интерес кировск район город екатеринбург скаж продаж трехкомнатн квартир площад квадратн метр квадратн метр район ан зар скольк человек сем сем человек жен наш сын ан зар четырехкомнатн квартир трем спальн понятн может сказа скольк так квартир сто кировск район город екатеринбург ан зар скольк денег рассматрива разн вариант готов ознаком различн предложен может сказа диапазон цен рассмотрет вариант ан зар понятн наш агентств нескольк вариант трехкомнатн квартир кировск район так ценов диапазон например квартир улиц сибирск квадратн метр стоимост миллион рубл такж квартир улиц кузнечн квадратн метр стоимост миллион предложен услов кажд квартир готов обсуд вам наш офис удобн ан зар имеет сраз сумм нужн ипотек дан момент все сумм поэт рассматрива возможн взят ипотек может подсказа как ипотечн программ предлага ваш агентств ан зар выбира сбер втб спасиб информац определ выбор банк поэт буд рассматрива ваш ипотечн программ пожалуйст может описа услов ставк кажд ипотечн программ ан зар понятн спасиб информац буд рассматрива ипотечн программ ваш агентств скаж как документ нам нужн предостав пода заявк ипотек ан зар главн справ психдиспансер сожален имет справк психдиспансер явля основан отказ кредитован все хот узна возможн списк документ получен ипотек готов предостав так информац обычн получен ипотек нужн паспорт ин снилс страхов полис документ подтвержден доход справк налич отсутств задолжен кредит кредитн карт ан зар скаж ищет квартир отделк отделк ан зар скаж явля непосредствен покупател виртуальн помощник созда автоматизац консультац ответ вопрос пользовател явля непосредствен покупател представля никак компан помоч необходим информац ответ ваш вопрос ан зар ответ вопрос виртуальн помощник созда автоматизац консультац ответ вопрос пользовател ищ квартир явля непосредствен покупател помоч необходим информац ответ ваш вопрос поэт мог сказа нужн квартир отделк не представля клиент котор интерес квартир отделк отделк зависим стоимост квартир общ состоян мож рассмотрет об вариант выбра наибол подходя ан зар переда хозяин ждем офис виртуальн помощник созда автоматизац консультац ответ вопрос пользовател ищ квартир явля непосредствен покупател помоч необходим информац ответ ваш вопрос поэт мог сказа нужн квартир отделк не ан зар удобн вторник понятн перед информац хозяин завтр предоставл подтвержден встреч возникнут вопрос стесня задава вид лиц след проблем плох реагир нескольк подряд сообщен собеседник плох понима юмор переключа рол начина задава вопрос цел очен скор времен возможн будут интегрирова наш телефон кажд появ виртуальн помошник рук гот ответ ваш вопрос пиш тг тег мессенджер искусствен интеллект андр тиун задонат сайт публикац лучш сутк похож истор ваш аккаунт войт регистрац раздел публикац новост компан автор песочниц информац устройств сайт автор компан документ соглашен конфиденциальн услуг корпоративн медийн реклам нативн проект образовательн программ стартап мегапроект настройк язык разработчик ваканс ваканс разработчик ваканс ваканс техническ поддержк вернут стар верс © –,идея почему возможность попросить делать например давать попробовать настроить мочь забронировать столик наш любимый ресторан реализация шаг№ интеграция предположим известный номер бронирование столик ресторан понадобиться сервис автоматический отправка приём сообщение сервис взять сервис бесплатный пробный период день требоваться подключение регистрироваться сайт получать ключ час назад забронировать столик ресторан мессенджер искусственный интеллект получение ключ сервис шаг№ запускать принимать сообщение установка отправлять сообщение придумать описание роль описание который попробовать ресторан твой собеседник менеджер ресторан твой забронировать столик человек пятница имя андрей первый сообщение сформулировать просьба бронь столик далёкий отвечать вопрос свести вместе запустить наш полный вспомогательный проверять наличие содзаесть наш исходящий номер искать контакт создавать контакт телефон рестор ресторан твой собеседник менеджер добрый день подсказать налич шаг№ тестировать диалог видеть номер телефон прописать прямо поэтому весь процесс запускать просто переход ваш запуск получиться диалог запуск служба трогать заказывать столик ресторан итог ход тестирование роль например модель показать неплохой результат представитель который хотеть купить квартира кировский район город екатеринбург твой собеседник менеджер агентство недвижимость твой узнать продажа трехкомнатный квартира площадь квадратный метр квадратный метр спросить стоимость вести диалог русский язык диалог модель добрый день подсказать наличие квартира пожалуйста ан заря здравствуйте район интересовать здравствуйте интересовать кировский район город екатеринбург сказать продажа трехкомнатный квартира площадь квадратный метр квадратный метр район ан заря сколько человек семья семья человек жена наш сын ан заря четырехкомнатный квартира спальня понятно мочь сказать сколько квартира стоить кировский район город екатеринбург ан заря сколько деньга рассматривать разный вариант готовый ознакомиться различный предложение мочь сказать диапазон цена рассмотреть вариант ан заря понятно наш агентство несколько вариант трехкомнатный квартира кировский район ценовый диапазон например квартира улица сибирский квадратный метр стоимость миллион рубль также квартира улица кузнечный квадратный метр стоимость миллион предложение условие каждый квартира готовый обсудить наш офис удобный ан заря иметь сразу сумма нужный ипотека данный момент весь сумма поэтому рассматривать возможность взять ипотека мочь подсказать ипотечный предлагать ваш агентство ан заря выбирать сбер втб спасибо информация определиться выбор банк поэтому рассматривать ваш ипотечный пожалуйста мочь описать условие ставка каждый ипотечный ан заря понятно спасибо информация рассматривать ипотечный ваш агентство сказать документ нужно предоставить подать заявка ипотека ан заря главное справа психдиспансер сожаление иметь справка психдиспансер являться основание отказ кредитование всё хотеть узнать возможный список документ получение ипотека готовый предоставить информация обычно получение ипотека нужный паспорт инна снилс страховой полис документ подтверждение доход справка наличие отсутствие задолженность кредит кредитный карта ан заря сказать искать квартира отделка отделка ан заря сказать являться непосредственно покупатель виртуальный помощник автоматизация консультация ответ вопрос являться непосредственный покупатель представлять никакой компания помочь необходимый информация ответить ваш вопрос ан заря ответить вопрос виртуальный помощник автоматизация консультация ответ вопрос искать квартира являться непосредственный покупатель помочь необходимый информация ответить ваш вопрос поэтому мочь сказать нужный квартира отделка представлять который интересоваться квартира отделка отделка зависимость стоимость квартира общий состояние мочь рассмотреть оба вариант выбрать наиболее подходящий ан заря передать хозяин ждать офис виртуальный помощник автоматизация консультация ответ вопрос искать квартира являться непосредственный покупатель помочь необходимый информация ответить ваш вопрос поэтому мочь сказать нужный квартира отделка ан заря удобно вторник понятно передать информация хозяин завтра предоставить подтверждение встреча возникнуть вопрос стесняться задавать видеть лицо следующий проблема плохо реагировать несколько подряд сообщение собеседник плохо понимать юмор переключать роль начинать задавать вопрос целое очень скорый возможность интегрировать наш телефон каждый появиться виртуальный помошникнуть рука готовый ответить ваш вопрос писать тг тег мессенджер искусственный интеллект андрей тиун задонатить сайт публикация хороший сутки похожий история ваш аккаунт войти регистрация раздел публикация новость компания песочница информация устройство сайт компания документ соглашение конфиденциальность услуга корпоративный медийный реклама нативный образовательный стартап мегапроект настройка язык разработчик вакансия вакансия разработчик вакансия вакансия технический поддержка вернуться старый © –,4
10,Новые утечки. Что мы знаем о выходе Windows 12,"4.74 Оценка 414.35 Рейтинг getmatch Рассказываем о том, как строить карьеру в IT Весь интернет уже готовится к выходу Windows 12. Вероятно, следующая версия будет во многом сосредоточена на поддержке работы с ИИ. На это намекает в том числе недавняя утечка от Intel, а  4 часа назад   Новые утечки. Что мы знаем о выходе Windows 12 6.3K Блог компании getmatch ,  Разработка под Windows* ,  Софт ,  Искусственный интеллект  также последние действия AMD и направление развития Bing. Мы знаем, что и Intel, и Microsoft готовятся к поддержке работы Windows 12 на новых процессорах. Об этом нам говорит утечка от leaf_hobby, который известен тем, что раскрывает полные спецификации чипов Intel Xeon перед их запуском. На этот раз leaf_hobby опубликовали подробности аппаратных показателей десктопной платформы Intel Meteor Lake, которую планируется выпустить в этом или в следующем году. Сейчас их твиты уже защищены, но интернет помнит™, а у журналистов отдельных изданий, вроде Insider и The Verge, к ним есть доступ. Сообщается, что Intel в имейле для своих сотрудников упоминает, что ее процессоры следующего поколения будут поддерживать Windows 12. Для этого Meteor Lake должен содержать 20 линий PCIe Gen5. Хотя Microsoft не объявляла о каких-либо планах в отношении Windows 12, уже есть признаки того, что компания планирует будущие версии Windows с расчетом на глубокую интеграцию функций ИИ. Даже последнее обновление Windows 11 уже интегрирует новую версию Bing с искусственным интеллектом прямо в панель задач. А ещё в этом обновлении бизнес-пользователи получают рекомендованный ИИ контент в меню «Пуск». Скоро искусственный интеллект придет в Edge, а потом — и во все остальные аспекты продуктов Microsoft. Компания очень воодушевлена успехом своей инвестиции в ChatGPT, и собирается сделать на него очень сильную ставку в надежде победить конкурентов, в том числе Google, у которой дело с инвестициями в ИИ пошло не так хорошо. Один из слайдов от Intel В начале января руководитель разработки Windows Паноса Паная на CES заявил, что «ИИ собирается заново переизобрести всё то, что вы делаете в Windows». Команда Microsoft Surface также сообщила, что «ИИ изменит то, как мы используем ПК». Всё однозначно указывает на то, что в следующей версии Windows компания собирается очень широко использовать ИИ. Это будет главная новая «фишка» платформы. А чтобы всё это могло работать, Microsoft приходится тесно сотрудничать с партнерами по аппаратному обеспечению, такими как Intel и AMD. Ей нужно, чтобы новые процессоры смогли справляться с высокими рабочими нагрузками ИИ, и без ошибок работали с новой технологией. Это объясняет то, почему Intel, как сообщается, уже упоминает об оптимизации под Windows 12 внутри компании. AMD недавно выпустила свои мобильные процессоры Ryzen 7000, и похвасталась тем, что они являются первыми процессорами x86, содержащими специальный механизм искусственного интеллекта, способный поддерживать эффекты Windows Studio. Эти функции, в том числе удаление фонового шума, размытие фона и автоматическое кадрирование, будут доступны только для техники с ускорителями на чипах ARM, которые работают с помощью специального нейронного процессора (NPU). То есть, AMD и Microsoft сейчас тоже активно совместно работают над внедрением расширенного числа функций на основе ИИ в свои продукты. И такие возможности, как заявляют компании, в дальнейшем будут более широко доступны в традиционных ноутбуках с Windows, работающих на AMD. Возможно, это тоже является подготовкой новых поколений процессоров к запуску с Windows 12. Все эти даты очень хорошо стыкуются. Новые процессоры от Intel и AMD ожидают в конце этого года или в 2024-м. А на разработку новой версии ОС у Microsoft раньше уходило 2-3 года. Windows 11 была выпущена в октябре 2021-го. Так что, если новые утечки верны, следующую основную версию Windows можно ожидать в 2024 году — как раз под ряд новых процессоров. Как она будет выглядеть То, что Windows 12 точно находится в разработке, мы узнали и из утечек декабря 2022 года. Тогда во время мероприятия Ignite Keynote 2022 компания Microsoft (вполне возможно, намеренно) «засветила» интерфейс следующего большого обновления Windows. Потом об этом зудел весь интернет, споря о том, что это могло быть. Что, согласитесь, совсем неплохо для одного скриншота. Изображение, «случайно» показанное на Ignite Keynote, демонстрирует ряд нехарактерных для Windows 11 особенностей: плавающая (а не доходящая до краев экрана) панель задач; плавающее меню поиска; системные значки в верхней (а не привычной нижней) части экрана справа. И интересный виджет погоды слева вверху. Видно, что версия будет заметно отличаться от всех предыдущих. Коллективный разум сейчас считает, что она выйдет, скорее всего, в 2024 году, и будет называться Windows 12 как минимум из-за большого количества разных новшеств — так же, как это было с Windows 11. Скорее всего, так будет выглядеть следующая ОС Следующее крупное обновление Windows пока находится на стадии прототипа, но источники, знакомые с ситуацией, говорят, что показанный во время Ignite интерфейс отображает то, к чему стремится Microsoft в следующей версии своей операционной системы. На мероприятии показали только часть возможных новшеств — в реальности их будет больше. Например, ожидается, что в Windows 12 появится новый экран блокировки, новый центр уведомлений, новый поиск. Ну и ИИ везде, где только можно. В плане интерфейса глобальная цель — сделать его более удобным для сенсорного ввода. У Microsoft пока всё не очень хорошо с балансом по этой части: Windows 8 была чересчур сильно ориентированной именно на «тач-взаимодействие», а Windows 10, наоборот, заточена под работу с мышью и клавиатурой. В Windows 11 компания попыталась найти золотую середину, но не получилось: всё-таки удобство управления при помощи мыши однозначно осталось на первом месте. Туманная перспектива Облачная, точнее. Ходят не очень приятные слухи (впрочем, смотря с какой стороны посмотреть). Что, мол, Windows 12 может стать первой облачной ОС от Microsoft. В последние годы Сатья Наделла переносит всё в сеть, в том числе MS Office. И говорит, что за этим будущее, а «облако изменит всё». Microsoft 365 активно развивается, в том числе за счет Windows 365, облачного компьютера, который можно использовать на любом устройстве, способном поддерживать браузер. Сервис был запущен компанией в 2021 году, работать так можно как с Windows 10, так и с Windows 11. Компания позиционирует это как альтернативу облачным сервисам Google: теперь у неё в облаке тоже можно и хранить данные, и редактировать документы, и даже ходить по меню «Пуск» и папкам в привычном интерфейсе, даже если у вас стоит Ubuntu или вы вообще сидите с планшетом на Android. Если Windows 12 будет доступна только в виде такой облачной платформы (по крайней мере, изначально) — это может серьезно повысить видимость пакета 365 в глазах рядовых пользователей. А там, глядишь, многие и задумаются, не удобнее ли им так будет хранить данные, и продолжать работать в одной ОС с разных устройств. Система может быть во многом похожа на традиционные варианты виртуальных рабочих столов, которые уже много лет развертываются предприятиями для поддержки сценариев BYOD. Но с более простой структурой ценообразования, удобным запуском и ориентацией на более широкую аудиторию. Это также может стать более контролируемым способом для Microsoft проверить механизмы работы своих новых ИИ-помощников. При запуске облачной ОС им не придется отпускать ИИ «гулять» на каждый из компьютеров пользователей, все процедуры будут мониториться на собственных серверах. Будем надеяться, что это один из тех наборов слухов, которые скоро будут опровергнуты. Возможно, команда поэкспериментировала с этой идеей, и поняла, что она не приживается. Но пока что — нужно быть морально готовыми к тому, что со всё большим числом сервисов, в том числе от Microsoft, мы будем взаимодействовать через окно браузера. getmatch Рассказываем о том, как строить карьеру в IT Telegram Сайт ВКонтакте Twitter 160 Карма 198.6 Рейтинг @ Пользователь P.S. Тысячи крутых вакансий в РФ и за рубежом — в телеграм-боте getmatch. Задаете нужную зарплату, и к вам приходят лучшие предложения, а наши эксперты помогают пройти интервью. Не нужно ни резюме, ни портфолио, настройка занимает меньше 30 секунд. А ещё это отличный способ следить за текущим рынком труда. Откликаться не обязательно. Теги:   windows , microsoft , windows 12 , AI , intel , chatgpt Хабы:   Блог компании getmatch , Разработка под Windows , Софт , Искусственный интеллект 11 8 32 Комментарии 32 Публикации ЛУЧШИЕ ЗА СУТКИ  ПОХОЖИЕ  ·   ·   ·   ·   ·   ·   ·   ·   ·   ·  ИНФОРМАЦИЯ Сайт getmatch.ru Дата регистрации 30 июля 2020 Численность 51–100 человек Местоположение Россия Ваш аккаунт Войти Регистрация Разделы Публикации Новости Хабы Компании Авторы Песочница Информация Устройство сайта Для авторов Для компаний Документы Соглашение Конфиденциальность Услуги Корпоративный блог Медийная реклама Нативные проекты Образовательные программы Стартапам Мегапроекты Настройка языка Техническая поддержка Вернуться на старую версию © 2006–2023, Habr ",4 часа назад,"Хабы:   Блог компании getmatch , Разработка под Windows , Софт , Искусственный интеллект ",414.35, оценка рейтинг  рассказываем о том как строить карьеру в  весь интернет уже готовится к выходу  вероятно следующая версия будет во многом сосредоточена на поддержке работы с ии на это намекает в том числе недавняя утечка от  а часа назад новые утечки что мы знаем о выходе   блог компании  разработка под  софт искусственный интеллект также последние действия  и направление развития  мы знаем что и  и  готовятся к поддержке работы  на новых процессорах об этом нам говорит утечка от   который известен тем что раскрывает полные спецификации чипов   перед их запуском на этот раз   опубликовали подробности аппаратных показателей десктопной платформы    которую планируется выпустить в этом или в следующем году сейчас их твиты уже защищены но интернет помнит™ а у журналистов отдельных изданий вроде  и   к ним есть доступ сообщается что  в имейле для своих сотрудников упоминает что ее процессоры следующего поколения будут поддерживать  для этого   должен содержать линий   хотя  не объявляла о каких либо планах в отношении  уже есть признаки того что компания планирует будущие версии  с расчетом на глубокую интеграцию функций ии даже последнее обновление  уже интегрирует новую версию  с искусственным интеллектом прямо в панель задач а ещё в этом обновлении бизнес пользователи получают рекомендованный ии контент в меню пуск скоро искусственный интеллект придет в  а потом и во все остальные аспекты продуктов  компания очень воодушевлена успехом своей инвестиции в  и собирается сделать на него очень сильную ставку в надежде победить конкурентов в том числе  у которой дело с инвестициями в ии пошло не так хорошо один из слайдов от  в начале января руководитель разработки  паноса паная на  заявил что ии собирается заново переизобрести всё то что вы делаете в  команда   также сообщила что ии изменит то как мы используем пк всё однозначно указывает на то что в следующей версии  компания собирается очень широко использовать ии это будет главная новая фишка платформы а чтобы всё это могло работать  приходится тесно сотрудничать с партнерами по аппаратному обеспечению такими как  и  ей нужно чтобы новые процессоры смогли справляться с высокими рабочими нагрузками ии и без ошибок работали с новой технологией это объясняет то почему  как сообщается уже упоминает об оптимизации под  внутри компании  недавно выпустила свои мобильные процессоры  и похвасталась тем что они являются первыми процессорами  содержащими специальный механизм искусственного интеллекта способный поддерживать эффекты   эти функции в том числе удаление фонового шума размытие фона и автоматическое кадрирование будут доступны только для техники с ускорителями на чипах  которые работают с помощью специального нейронного процессора  то есть  и  сейчас тоже активно совместно работают над внедрением расширенного числа функций на основе ии в свои продукты и такие возможности как заявляют компании в дальнейшем будут более широко доступны в традиционных ноутбуках с  работающих на  возможно это тоже является подготовкой новых поколений процессоров к запуску с  все эти даты очень хорошо стыкуются новые процессоры от  и  ожидают в конце этого года или в м а на разработку новой версии ос у  раньше уходило года  была выпущена в октябре го так что если новые утечки верны следующую основную версию  можно ожидать в году как раз под ряд новых процессоров как она будет выглядеть то что  точно находится в разработке мы узнали и из утечек декабря года тогда во время мероприятия   компания  вполне возможно намеренно засветила интерфейс следующего большого обновления  потом об этом зудел весь интернет споря о том что это могло быть что согласитесь совсем неплохо для одного скриншота изображение случайно показанное на   демонстрирует ряд нехарактерных для  особенностей плавающая а не доходящая до краев экрана панель задач плавающее меню поиска системные значки в верхней а не привычной нижней части экрана справа и интересный виджет погоды слева вверху видно что версия будет заметно отличаться от всех предыдущих коллективный разум сейчас считает что она выйдет скорее всего в году и будет называться  как минимум из за большого количества разных новшеств так же как это было с  скорее всего так будет выглядеть следующая ос следующее крупное обновление  пока находится на стадии прототипа но источники знакомые с ситуацией говорят что показанный во время  интерфейс отображает то к чему стремится  в следующей версии своей операционной системы на мероприятии показали только часть возможных новшеств в реальности их будет больше например ожидается что в  появится новый экран блокировки новый центр уведомлений новый поиск ну и ии везде где только можно в плане интерфейса глобальная цель сделать его более удобным для сенсорного ввода у  пока всё не очень хорошо с балансом по этой части  была чересчур сильно ориентированной именно на тач взаимодействие а  наоборот заточена под работу с мышью и клавиатурой в  компания попыталась найти золотую середину но не получилось всё таки удобство управления при помощи мыши однозначно осталось на первом месте туманная перспектива облачная точнее ходят не очень приятные слухи впрочем смотря с какой стороны посмотреть что мол  может стать первой облачной ос от  в последние годы сатья наделла переносит всё в сеть в том числе   и говорит что за этим будущее а облако изменит всё  активно развивается в том числе за счет  облачного компьютера который можно использовать на любом устройстве способном поддерживать браузер сервис был запущен компанией в году работать так можно как с  так и с  компания позиционирует это как альтернативу облачным сервисам  теперь у неё в облаке тоже можно и хранить данные и редактировать документы и даже ходить по меню пуск и папкам в привычном интерфейсе даже если у вас стоит  или вы вообще сидите с планшетом на  если  будет доступна только в виде такой облачной платформы по крайней мере изначально это может серьезно повысить видимость пакета в глазах рядовых пользователей а там глядишь многие и задумаются не удобнее ли им так будет хранить данные и продолжать работать в одной ос с разных устройств система может быть во многом похожа на традиционные варианты виртуальных рабочих столов которые уже много лет развертываются предприятиями для поддержки сценариев  но с более простой структурой ценообразования удобным запуском и ориентацией на более широкую аудиторию это также может стать более контролируемым способом для  проверить механизмы работы своих новых ии помощников при запуске облачной ос им не придется отпускать ии гулять на каждый из компьютеров пользователей все процедуры будут мониториться на собственных серверах будем надеяться что это один из тех наборов слухов которые скоро будут опровергнуты возможно команда поэкспериментировала с этой идеей и поняла что она не приживается но пока что нужно быть морально готовыми к тому что со всё большим числом сервисов в том числе от  мы будем взаимодействовать через окно браузера  рассказываем о том как строить карьеру в   сайт вконтакте  карма рейтинг пользователь   тысячи крутых вакансий в рф и за рубежом в телеграм боте  задаете нужную зарплату и к вам приходят лучшие предложения а наши эксперты помогают пройти интервью не нужно ни резюме ни портфолио настройка занимает меньше секунд а ещё это отличный способ следить за текущим рынком труда откликаться не обязательно теги       хабы блог компании  разработка под  софт искусственный интеллект комментарии публикации лучшие за сутки похожие · · · · · · · · · · информация сайт   дата регистрации июля численность – человек местоположение россия ваш аккаунт войти регистрация разделы публикации новости хабы компании авторы песочница информация устройство сайта для авторов для компаний документы соглашение конфиденциальность услуги корпоративный блог медийная реклама нативные проекты образовательные программы стартапам мегапроекты настройка языка техническая поддержка вернуться на старую версию © –  ,оценка рассказываем строить карьеру весь интернет готовится выходу вероятно следующая многом сосредоточена поддержке работы ии намекает числе недавняя утечка часа назад новые утечки знаем выходе компании разработка софт искусственный интеллект также последние действия направление развития знаем готовятся поддержке работы новых процессорах нам говорит утечка который известен раскрывает полные спецификации чипов запуском опубликовали подробности аппаратных показателей десктопной платформы которую планируется выпустить следующем году твиты защищены интернет помнит™ журналистов отдельных изданий вроде доступ сообщается имейле своих сотрудников упоминает процессоры следующего поколения будут поддерживать должен содержать линий хотя объявляла каких планах отношении признаки компания планирует будущие версии расчетом глубокую интеграцию функций ии последнее обновление интегрирует новую версию искусственным интеллектом прямо панель задач ещё обновлении бизнес пользователи получают рекомендованный ии контент меню пуск скоро искусственный интеллект придет остальные аспекты продуктов компания очень воодушевлена успехом своей инвестиции собирается очень сильную ставку надежде победить конкурентов числе которой дело инвестициями ии пошло слайдов начале января руководитель разработки паноса паная заявил ии собирается заново переизобрести всё делаете команда также сообщила ии изменит используем пк всё однозначно указывает следующей версии компания собирается очень широко ии главная новая фишка платформы всё могло работать приходится тесно сотрудничать партнерами аппаратному обеспечению такими нужно новые процессоры смогли справляться высокими рабочими нагрузками ии ошибок работали новой технологией объясняет почему сообщается упоминает оптимизации внутри компании недавно выпустила свои мобильные процессоры похвасталась первыми процессорами содержащими специальный механизм искусственного интеллекта способный поддерживать эффекты функции числе удаление фонового шума размытие фона автоматическое кадрирование будут доступны техники ускорителями чипах которые работают специального нейронного процессора активно совместно работают внедрением расширенного числа функций основе ии свои продукты такие возможности заявляют компании дальнейшем будут широко доступны традиционных ноутбуках работающих возможно подготовкой новых поколений процессоров запуску даты очень стыкуются новые процессоры ожидают конце м разработку новой версии ос раньше уходило выпущена октябре го новые утечки верны следующую основную версию ожидать году ряд новых процессоров выглядеть точно находится разработке узнали утечек декабря мероприятия компания вполне возможно намеренно засветила интерфейс следующего большого обновления зудел весь интернет споря могло согласитесь неплохо одного скриншота изображение случайно показанное демонстрирует ряд нехарактерных особенностей плавающая доходящая краев экрана панель задач плавающее меню поиска системные значки верхней привычной нижней части экрана справа интересный виджет погоды слева вверху видно заметно отличаться предыдущих коллективный разум считает выйдет скорее году называться минимум большого количества разных новшеств скорее выглядеть следующая ос следующее крупное обновление находится стадии прототипа источники знакомые ситуацией говорят показанный интерфейс отображает чему стремится следующей версии своей операционной системы мероприятии показали часть возможных новшеств реальности например ожидается появится новый экран блокировки новый центр уведомлений новый поиск ии везде плане интерфейса глобальная цель удобным сенсорного ввода всё очень балансом части чересчур сильно ориентированной именно тач взаимодействие наоборот заточена работу мышью клавиатурой компания попыталась золотую середину получилось всё таки удобство управления помощи мыши однозначно осталось первом месте туманная перспектива облачная точнее ходят очень приятные слухи смотря стороны посмотреть мол стать первой облачной ос последние годы сатья наделла переносит всё сеть числе говорит этим будущее облако изменит всё активно развивается числе счет облачного компьютера который любом устройстве способном поддерживать браузер сервис запущен компанией году работать компания позиционирует альтернативу облачным сервисам неё облаке хранить редактировать документы ходить меню пуск папкам привычном интерфейсе вообще сидите планшетом доступна виде облачной платформы крайней мере изначально серьезно повысить видимость пакета глазах рядовых пользователей глядишь многие задумаются удобнее хранить продолжать работать одной ос разных устройств система многом похожа традиционные варианты виртуальных рабочих столов которые развертываются предприятиями поддержки сценариев простой структурой ценообразования удобным запуском ориентацией широкую аудиторию также стать контролируемым способом проверить механизмы работы своих новых ии помощников запуске облачной ос придется отпускать ии гулять каждый компьютеров пользователей процедуры будут мониториться собственных серверах будем надеяться тех наборов слухов которые скоро будут опровергнуты возможно команда поэкспериментировала идеей поняла приживается нужно морально готовыми тому всё большим числом сервисов числе будем взаимодействовать окно браузера рассказываем строить карьеру сайт вконтакте тысячи крутых вакансий рф рубежом телеграм боте задаете нужную зарплату приходят лучшие предложения наши эксперты помогают пройти интервью нужно резюме портфолио настройка занимает меньше секунд ещё отличный способ следить текущим рынком труда откликаться обязательно теги компании разработка софт искусственный интеллект публикации лучшие сутки похожие · · · · · · · · · · информация сайт дата регистрации июля численность – человек местоположение россия ваш аккаунт войти регистрация разделы публикации новости компании авторы песочница информация устройство сайта авторов компаний документы соглашение конфиденциальность услуги корпоративный медийная реклама нативные проекты образовательные программы стартапам мегапроекты настройка языка техническая поддержка вернуться старую версию © –,оценк рассказыва стро карьер ве интернет готов выход вероятн следующ мног сосредоточ поддержк работ и намека числ недавн утечк час назад нов утечк зна выход компан разработк софт искусствен интеллект такж последн действ направлен развит зна готов поддержк работ нов процессор нам говор утечк котор извест раскрыва полн спецификац чип запуск опубликова подробн аппаратн показател десктопн платформ котор планир выпуст след год твит защищ интернет помнит™ журналист отдельн издан врод доступ сообща имейл сво сотрудник упомина процессор след поколен будут поддержива долж содержа лин хот объявля как план отношен признак компан планир будущ верс расчет глубок интеграц функц и последн обновлен интегрир нов верс искусствен интеллект прям панел задач ещ обновлен бизнес пользовател получа рекомендова и контент мен пуск скор искусствен интеллект придет остальн аспект продукт компан очен воодушевл успех сво инвестиц собира очен сильн ставк надежд побед конкурент числ котор дел инвестиц и пошл слайд начал январ руководител разработк панос пан заяв и собира занов переизобрест все дела команд такж сообщ и измен использу пк все однозначн указыва след верс компан собира очен широк и главн нов фишк платформ все могл работа приход тесн сотруднича партнер аппаратн обеспечен так нужн нов процессор смогл справля высок рабоч нагрузк и ошибок работа нов технолог объясня поч сообща упомина оптимизац внутр компан недавн выпуст сво мобильн процессор похваста перв процессор содержа специальн механизм искусствен интеллект способн поддержива эффект функц числ удален фонов шум размыт фон автоматическ кадрирован будут доступн техник ускорител чип котор работа специальн нейрон процессор активн совместн работа внедрен расширен числ функц основ и сво продукт так возможн заявля компан дальн будут широк доступн традицион ноутбук работа возможн подготовк нов поколен процессор запуск дат очен стык нов процессор ожида конц м разработк нов верс ос раньш уход выпущ октябр го нов утечк верн след основн верс ожида год ряд нов процессор выглядет точн наход разработк узна утечек декабр мероприят компан вполн возможн намерен засвет интерфейс след больш обновлен зудел ве интернет спор могл соглас неплох одн скриншот изображен случайн показа демонстрир ряд нехарактерн особен плава доходя кра экра панел задач плава мен поиск системн значк верхн привычн нижн част экра справ интересн виджет погод слев вверх видн заметн отлича предыдущ коллективн разум счита выйдет скор год называ минимум больш количеств разн новшеств скор выглядет следующ ос след крупн обновлен наход стад прототип источник знаком ситуац говор показа интерфейс отобража чем стрем след верс сво операцион систем мероприят показа част возможн новшеств реальност например ожида появ нов экра блокировк нов центр уведомлен нов поиск и везд план интерфейс глобальн цел удобн сенсорн ввод все очен баланс част чересчур сильн ориентирова имен тач взаимодейств наоборот заточ работ мыш клавиатур компан попыта золот середин получ все так удобств управлен помощ мыш однозначн оста перв мест тума перспектив облачн точн ход очен приятн слух смотр сторон посмотрет мол стат перв облачн ос последн год сат наделл перенос все сет числ говор эт будущ облак измен все активн развива числ счет облачн компьютер котор люб устройств способн поддержива браузер сервис запущ компан год работа компан позиционир альтернатив облачн сервис не облак хран редактирова документ ход мен пуск папк привычн интерфейс вообщ сид планшет доступн вид облачн платформ крайн мер изначальн серьезн повыс видим пакет глаз рядов пользовател гляд мног задума удобн хран продолжа работа одн ос разн устройств систем мног похож традицион вариант виртуальн рабоч стол котор развертыва предприят поддержк сценар прост структур ценообразован удобн запуск ориентац широк аудитор такж стат контролируем способ провер механизм работ сво нов и помощник запуск облачн ос придет отпуска и гуля кажд компьютер пользовател процедур будут монитор собствен сервер буд надея тех набор слух котор скор будут опровергнут возможн команд поэкспериментирова иде поня прижива нужн моральн готов том все больш числ сервис числ буд взаимодействова окн браузер рассказыва стро карьер сайт вконтакт тысяч крут ваканс рф рубеж телегр бот зада нужн зарплат приход лучш предложен наш эксперт помога пройт интерв нужн резюм портфол настройк занима меньш секунд ещ отличн способ след текущ рынк труд отклика обязательн тег компан разработк софт искусствен интеллект публикац лучш сутк похож · · · · · · · · · · информац сайт дат регистрац июл числен – человек местоположен росс ваш аккаунт войт регистрац раздел публикац новост компан автор песочниц информац устройств сайт автор компан документ соглашен конфиденциальн услуг корпоративн медийн реклам нативн проект образовательн программ стартап мегапроект настройк язык техническ поддержк вернут стар верс © –,оценка рассказывать строить карьера весь интернет готовиться выход вероятно следующий многое сосредоточить поддержка ия намекать число недавний утечка час назад новый утечка знать выход компания разработка софт искусственный интеллект также последний действие направление развитие знать готовиться поддержка новый процессор говорить утечка который известный раскрывать полный спецификация чип запуск опубликовать подробность аппаратный показатель десктопной платформа который планироваться выпустить следующий твит защитить интернет помнит™ журналист отдельный издание вроде доступ сообщаться имейл свой сотрудник упоминать процессор следующий поколение поддерживать должный содержать линия хотя объявлять план отношение признак компания планировать будущий расчёт глубокий интеграция ия последний обновление интегрировать новый искусственный интеллект прямо панель ещё обновление бизнес получать рекомендовать ия контент меню пуск скоро искусственный интеллект прийти остальной аспект продукт компания очень воодушевить успех свой инвестиция собираться очень сильный ставка надежда победить конкурент число который дело инвестиция ия пойти слайд начало январь руководитель разработка паноса панай заявить ия собираться заново переизобрести всё делать команда также сообщить ия изменить пк всё однозначно указывать следующий компания собираться очень широко ия главный новый фишка платформа всё мочь работать приходиться тесно сотрудничать партнёр аппаратный обеспечение нужно новый процессор смочь справляться высокий рабочий нагрузка ия ошибка работать новый технология объяснять почему сообщаться упоминать оптимизация внутри компания недавно выпустить свой мобильный процессор похвастаться первый процессор содержать специальный механизм искусственный интеллект способный поддерживать эффект число удаление фоновый шум размытие фон автоматический кадрирование доступный техника ускоритель чип который работать специальный нейронный процессор активно совместно работать внедрение расширить число основа ия свой продукт возможность заявлять компания дальнейший широко доступный традиционный ноутбук работать возможно подготовка новый поколение процессор запуск дата очень стыковаться новый процессор ожидать конец м разработка новый ос ранний уходить выпустить октябрь го новый утечка верный следующий основный ожидать ряд новый процессор выглядеть точно находиться разработка узнать утечка декабрь мероприятие компания вполне возможно намеренно засветить интерфейс следующий большой обновление зудеть весь интернет спорить мочь согласиться неплохо скриншот изображение случайно показать демонстрировать ряд нехарактерный особенность плавать доходить край экран панель плавать меню поиск системный значок верхний привычный нижний часть экран справа интересный виджет погода слева вверху видно заметно отличаться предыдущий коллективный разум считать выйти скорее называться минимум большой количество разный новшество скорее выглядеть следующий ос следующий крупный обновление находиться стадия прототип источник знакомый ситуация говорить показать интерфейс отображать стремиться следующий свой операционный система мероприятие показать часть возможный новшество реальность например ожидаться появиться новый экран блокировка новый центр уведомление новый поиск ия везде план интерфейс глобальный цель удобный сенсорный ввод всё очень баланс часть чересчур сильно ориентировать именно тач взаимодействие наоборот заточить мыший клавиатура компания попытаться золотой середина получиться всё таки удобство управление помощь мышь однозначно остаться первый место туманный перспектива облачный точнее ходить очень приятный слух смотреть сторона посмотреть мол стать первый облачный ос последний сатие наделла переносить всё сеть число говорить будущее облако изменить всё активно развиваться число счёт облачный компьютер который любой устройство способный поддерживать браузер сервис запустить компания работать компания позиционировать альтернатива облачный сервис облако хранить редактировать документ ходить меню пуск папка привычный интерфейс вообще сидеть планшет доступный вид облачный платформа крайний мера изначально серьёзно повысить видимость пакет глаз рядовой глядеть многие задуматься удобный хранить продолжать работать ос разный устройство система многое похожий традиционный вариант виртуальный рабочий стол который развёртываться предприятие поддержка сценарий простой структура ценообразование удобный запуск ориентация широкий аудитория также стать контролировать способ проверить механизм свой новый ия помощник запуск облачный ос прийтись отпускать ия гулять каждый компьютер процедура мониториться собственный надеяться набор слух который скоро опровергнуть возможно команда поэкспериментировать идея понять приживаться нужно морально готовый всё больший число сервис число взаимодействовать окно браузер рассказывать строить карьера сайт вконтакте тысяча крутой вакансия рф рубеж телеграм бот задавать нужный зарплата приходить хороший предложение наш эксперт помогать пройти интервью нужно резюме портфолио настройка занимать маленький секунда ещё отличный способ следить текущий рынок труд откликаться обязательно тег компания разработка софт искусственный интеллект публикация хороший сутки похожий · · · · · · · · · · информация сайт дата регистрация июль численность – человек местоположение россия ваш аккаунт войти регистрация раздел публикация новость компания песочница информация устройство сайт компания документ соглашение конфиденциальность услуга корпоративный медийный реклама нативный образовательный стартап мегапроект настройка язык технический поддержка вернуться старый © –,0
